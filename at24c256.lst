C51 COMPILER V9.00   AT24C256                                                              09/05/2015 15:53:51 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE AT24C256
OBJECT MODULE PLACED IN at24c256.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\at24c256.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRIN
                    -T(.\at24c256.lst) TABS(2) OBJECT(at24c256.obj)

line level    source

   1          #include "at24c256.h"
   2          
   3          bit ack;                //应答标志位
   4          
   5          void DelayUs2x(unsigned char t)
   6          {
   7   1        while (--t);
   8   1      }
   9          /*------------------------------------------------
  10          mS延时函数，含有输入参数 unsigned char t，无返回值
  11          unsigned char 是定义无符号字符变量，其值的范围是
  12          0~255 这里使用晶振12M，精确延时请使用汇编
  13          ------------------------------------------------*/
  14          void DelayMs(unsigned char t)
  15          {
  16   1        while (t--)
  17   1        {
  18   2          //大致延时1mS
  19   2          DelayUs2x(245);
  20   2          DelayUs2x(245);
  21   2        }
  22   1      }
  23          
  24          /*------------------------------------------------
  25          启动总线
  26          ------------------------------------------------*/
  27          void Start_I2c()
  28          {
  29   1        SDA = 1;   //发送起始条件的数据信号
  30   1        _Nop();
  31   1        SCL = 1;
  32   1        _Nop();    //起始条件建立时间大于4.7us,延时
  33   1        _Nop();
  34   1        _Nop();
  35   1        _Nop();
  36   1        _Nop();
  37   1        SDA = 0;     //发送起始信号
  38   1        _Nop();    //起始条件锁定时间大于4μ
  39   1        _Nop();
  40   1        _Nop();
  41   1        _Nop();
  42   1        _Nop();
  43   1        SCL = 0;    //钳住I2C总线，准备发送或接收数据
  44   1        _Nop();
  45   1        _Nop();
  46   1      }
  47          /*------------------------------------------------
  48          结束总线
  49          ------------------------------------------------*/
  50          void Stop_I2c()
  51          {
  52   1        SDA = 0;    //发送结束条件的数据信号
  53   1        _Nop();   //发送结束条件的时钟信号
  54   1        SCL = 1;    //结束条件建立时间大于4μ
C51 COMPILER V9.00   AT24C256                                                              09/05/2015 15:53:51 PAGE 2   

  55   1        _Nop();
  56   1        _Nop();
  57   1        _Nop();
  58   1        _Nop();
  59   1        _Nop();
  60   1        SDA = 1;    //发送I2C总线结束信号
  61   1        _Nop();
  62   1        _Nop();
  63   1        _Nop();
  64   1        _Nop();
  65   1      }
  66          
  67          /*----------------------------------------------------------------
  68          字节数据传送函数
  69          函数原型: void  SendByte(unsigned char c);
  70          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  71          此状态位进行操作.(不应答或非应答都使ack=0 假)
  72          发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  73          ------------------------------------------------------------------*/
  74          void  SendByte(unsigned char c)
  75          {
  76   1        unsigned char BitCnt;
  77   1        for (BitCnt = 0; BitCnt<8; BitCnt++)  //要传送的数据长度为8位
  78   1        {
  79   2          if ((c << BitCnt) & 0x80)
  80   2            SDA = 1;   //判断发送位
  81   2          else
  82   2            SDA = 0;
  83   2          _Nop();
  84   2          SCL = 1;               //置时钟线为高，通知被控器开始接收数据位
  85   2          _Nop();
  86   2          _Nop();             //保证时钟高电平周期大于4μ
  87   2          _Nop();
  88   2          _Nop();
  89   2          _Nop();
  90   2          SCL = 0;
  91   2        }
  92   1        _Nop();
  93   1        _Nop();
  94   1        SDA = 1;               //8位发送完后释放数据线，准备接收应答位
  95   1        _Nop();
  96   1        _Nop();
  97   1        SCL = 1;
  98   1        _Nop();
  99   1        _Nop();
 100   1        _Nop();
 101   1        if (SDA == 1)ack = 0;
 102   1        else ack = 1;        //判断是否接收到应答信号
 103   1        SCL = 0;
 104   1        _Nop();
 105   1        _Nop();
 106   1      }
 107          
 108          /*----------------------------------------------------------------
 109          字节数据传送函数
 110          函数原型: unsigned char  RcvByte();
 111          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 112          发完后请用应答函数。
 113          ------------------------------------------------------------------*/
 114          unsigned char  RcvByte()
 115          {
 116   1        unsigned char retc;
C51 COMPILER V9.00   AT24C256                                                              09/05/2015 15:53:51 PAGE 3   

 117   1        unsigned char BitCnt;
 118   1        retc = 0;
 119   1        SDA = 1;             //置数据线为输入方式
 120   1        for (BitCnt = 0; BitCnt<8; BitCnt++)
 121   1        {
 122   2          _Nop();
 123   2          SCL = 0;       //置时钟线为低，准备接收数据位
 124   2          _Nop();
 125   2          _Nop();      //时钟低电平周期大于4.7us
 126   2          _Nop();
 127   2          _Nop();
 128   2          _Nop();
 129   2          SCL = 1;       //置时钟线为高使数据线上数据有效
 130   2          _Nop();
 131   2          _Nop();
 132   2          retc = retc << 1;
 133   2          if (SDA == 1)retc = retc + 1; //读数据位,接收的数据位放入retc中
 134   2          _Nop();
 135   2          _Nop();
 136   2        }
 137   1        SCL = 0;
 138   1        _Nop();
 139   1        _Nop();
 140   1        return(retc);
 141   1      }
 142          
 143          
 144          /*----------------------------------------------------------------
 145          应答子函数
 146          原型:  void Ack_I2c(void);
 147          
 148          ----------------------------------------------------------------*/
 149          void Ack_I2c(void)
 150          {
 151   1        SDA = 0;
 152   1        _Nop();
 153   1        _Nop();
 154   1        _Nop();
 155   1        SCL = 1;
 156   1        _Nop();
 157   1        _Nop();              //时钟低电平周期大于4μ
 158   1        _Nop();
 159   1        _Nop();
 160   1        _Nop();
 161   1        SCL = 0;               //清时钟线，钳住I2C总线以便继续接收
 162   1        _Nop();
 163   1        _Nop();
 164   1      }
 165          
 166          /*----------------------------------------------------------------
 167          非应答子函数
 168          原型:  void NoAck_I2c(void);
 169          
 170          ----------------------------------------------------------------*/
 171          void NoAck_I2c(void)
 172          {
 173   1        SDA = 1;
 174   1        _Nop();
 175   1        _Nop();
 176   1        _Nop();
 177   1        SCL = 1;
 178   1        _Nop();
C51 COMPILER V9.00   AT24C256                                                              09/05/2015 15:53:51 PAGE 4   

 179   1        _Nop();              //时钟低电平周期大于4μ
 180   1        _Nop();
 181   1        _Nop();
 182   1        _Nop();
 183   1        SCL = 0;                //清时钟线，钳住I2C总线以便继续接收
 184   1        _Nop();
 185   1        _Nop();
 186   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    195    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
