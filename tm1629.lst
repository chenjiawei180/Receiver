C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TM1629
OBJECT MODULE PLACED IN tm1629.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\tm1629.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRINT(
                    -.\tm1629.lst) TABS(2) OBJECT(tm1629.obj)

line level    source

   1          #include "tm1629.h"
   2          #include "timer.h"
   3          #include "usart.h"
   4          #include "ds1302.h"
   5          #include "key.h"
   6          
   7          unsigned char const CODE[] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x3
             -9, 0x5E, 0x79, 0x71, 0x76, 0x38, 0x5c, 0x73, 0x3e };//0-9 abcdef 显示器码数组
   8          unsigned char const INIT_CODE[] = { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 };//逐段点亮数码管数组
   9          unsigned char const SHANGSHUO[] = { 0x40, 0x00 }; // 点亮数码管中间段以及灭
  10          unsigned char buf_display[6][8] = { 0 }; //3个TM1629显存数组
  11          unsigned char display_ram[240] = { 0 }; //程序运行时记录显示数据的内存 
  12          unsigned char await_time_table= 0 ;//用于记录待机显示横杠数码管次数 
  13          
  14          void writeDataTo1629(unsigned char p) //写数据给第一个TM1629
  15          {
  16   1        unsigned int i;
  17   1        TM1629_STB = 0;
  18   1        for (i = 0; i<8; i++)
  19   1        {
  20   2          TM1629_CLK = 0;
  21   2          if (p & 0x01)
  22   2            TM1629_DIO = 1;
  23   2          else
  24   2            TM1629_DIO = 0;
  25   2          _nop_();
  26   2          _nop_();
  27   2          _nop_();
  28   2          _nop_();
  29   2          TM1629_CLK = 1;
  30   2          p = p >> 1;
  31   2        }
  32   1        TM1629_CLK = 0;
  33   1        TM1629_DIO = 0;
  34   1      }
  35          
  36          void writeDataTo1629_2(unsigned char p) //写数据给第二个TM1629
  37          {
  38   1        unsigned int i;
  39   1        TM1629_STB2 = 0;
  40   1        for (i = 0; i<8; i++)
  41   1        {
  42   2          TM1629_CLK = 0;
  43   2          if (p & 0x01)
  44   2            TM1629_DIO = 1;
  45   2          else
  46   2            TM1629_DIO = 0;
  47   2          _nop_();
  48   2          _nop_();
  49   2          _nop_();
  50   2          _nop_();
  51   2          TM1629_CLK = 1;
  52   2          p = p >> 1;
  53   2        }
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 2   

  54   1        TM1629_CLK = 0;
  55   1        TM1629_DIO = 0;
  56   1      }
  57          
  58          void writeDataTo1629_3(unsigned char p) //写数据给第三个TM1629
  59          {
  60   1        unsigned int i;
  61   1        TM1629_STB3 = 0;
  62   1        for (i = 0; i<8; i++)
  63   1        {
  64   2          TM1629_CLK = 0;
  65   2          if (p & 0x01)
  66   2            TM1629_DIO = 1;
  67   2          else
  68   2            TM1629_DIO = 0;
  69   2          _nop_();
  70   2          _nop_();
  71   2          _nop_();
  72   2          _nop_();
  73   2          TM1629_CLK = 1;
  74   2          p = p >> 1;
  75   2        }
  76   1        TM1629_CLK = 0;
  77   1        TM1629_DIO = 0;
  78   1      }
  79          
  80          void send_command(unsigned char word) //写命令给第一个TM1629
  81          {
  82   1        TM1629_STB = 1;
  83   1        nop;
  84   1        TM1629_STB = 0;
  85   1        writeDataTo1629(word);
  86   1      }
  87          
  88          void send_command_2(unsigned char word) //写命令给第二个TM1629
  89          {
  90   1        TM1629_STB2 = 1;
  91   1        nop;
  92   1        TM1629_STB2 = 0;
  93   1        writeDataTo1629_2(word);
  94   1      }
  95          
  96          void send_command_3(unsigned char word) //写命令给第三个TM1629
  97          {
  98   1        TM1629_STB3 = 1;
  99   1        nop;
 100   1        TM1629_STB3 = 0;
 101   1        writeDataTo1629_3(word);
 102   1      }
 103          
 104          void display(void) //3个TM1629显示函数
 105          {
 106   1        unsigned char i;
 107   1        send_command(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 108   1        send_command(0xc0); //设置显示地址命令：从00H开始
 109   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 110   1        {
 111   2          writeDataTo1629(buf_display[0][i]);
 112   2          writeDataTo1629(buf_display[1][i]);
 113   2        }
 114   1        send_command(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 115   1        TM1629_STB = 1;
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 3   

 116   1      
 117   1        send_command_2(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 118   1        send_command_2(0xc0); //设置显示地址命令：从00H开始
 119   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 120   1        {
 121   2          writeDataTo1629_2(buf_display[2][i]);
 122   2          writeDataTo1629_2(buf_display[3][i]);
 123   2        }
 124   1        send_command_2(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 125   1        TM1629_STB2 = 1;
 126   1      
 127   1        send_command_3(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 128   1        send_command_3(0xc0); //设置显示地址命令：从00H开始
 129   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 130   1        {
 131   2          writeDataTo1629_3(buf_display[4][i]);
 132   2          writeDataTo1629_3(buf_display[5][i]);
 133   2        }
 134   1        send_command_3(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 135   1        TM1629_STB3 = 1;
 136   1      }
 137          
 138          void tm1629_init(void) //TM1629开机初始化函数
 139          {
 140   1        unsigned char i, j, k;    //k控制显示的具体数字，i和j控制buf_display的刷新
 141   1        for (k = 0; k<8; k++)
 142   1        {
 143   2          for (i = 0; i<6; i++)
 144   2          {
 145   3            for (j = 0; j<8; j++)
 146   3            {
 147   4              buf_display[i][j] = INIT_CODE[k];
 148   4            }
 149   3          }
 150   2          display();
 151   2          Tm1629_delay(30);
 152   2        }
 153   1      }
 154          
 155          
 156          void Tm1629_delay(unsigned char k) //延时函数
 157          {
 158   1        unsigned char i, j;
 159   1        for (; k>0; k--)
 160   1        {
 161   2          for (i = 255; i>0; i--)
 162   2          {
 163   3            for (j = 255; j>0; j--)
 164   3            {
 165   4              ;
 166   4      
 167   4            }
 168   3          }
 169   2        }
 170   1      }
 171          
 172          void tm1629_clear(void)//全部归零
 173          {
 174   1        unsigned char i, j;
 175   1        for (i = 0; i<6; i++)
 176   1        {
 177   2          for (j = 0; j<8; j++)
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 4   

 178   2          {
 179   3            buf_display[i][j] = 0x00;
 180   3          }
 181   2        }
 182   1      }
 183          
 184          void tm1629_await(void)
 185          {
 186   1        unsigned char i;  //k控制显示的具体数字，i和j控制buf_display的刷新
 187   1        unsigned char await_number_table_temp = 0;
 188   1        await_number_table_temp = return_await_number_table();
 189   1        if (await_number_table_temp == 1)
 190   1        {
 191   2          //GD5800_select_chapter(0x0008) ;
 192   2          tm1629_clear();
 193   2          i = await_time_table & 0x03;
 194   2          buf_display[0][i] = 0x40;
 195   2          display();
 196   2          set_await_number_table(0);
 197   2          await_time_table++;
 198   2          if (await_time_table == 4)
 199   2            await_time_table = 0;
 200   2        }
 201   1      }
 202          
 203          void Display_time(void)
 204          {
 205   1        tm1629_clear();
 206   1        Ds1302_Read_Time(); 
 207   1        buf_display[1][7] = CODE[2];        //年
 208   1        buf_display[1][6] = CODE[0];
 209   1        buf_display[1][5] = CODE[time_buf1[1] / 10];
 210   1        buf_display[1][4] = CODE[time_buf1[1] % 10];
 211   1      
 212   1        buf_display[1][3] = 0x40;          // -
 213   1        
 214   1        buf_display[1][2] = CODE[time_buf1[2] / 10]; //月
 215   1        buf_display[1][1] = CODE[time_buf1[2] % 10];
 216   1      
 217   1        buf_display[1][0] = 0x40;          // -
 218   1      
 219   1        buf_display[0][7] = CODE[time_buf1[3] / 10];
 220   1        buf_display[0][6] = CODE[time_buf1[3] % 10];//日
 221   1      
 222   1        buf_display[0][5] = CODE[time_buf1[7]];   //星期
 223   1      
 224   1        buf_display[0][3] = CODE[time_buf1[4] / 10]; //小时
 225   1        buf_display[0][2] = CODE[time_buf1[4] % 10];
 226   1        buf_display[0][1] = CODE[time_buf1[5] / 10]; //小时
 227   1        buf_display[0][0] = CODE[time_buf1[5] % 10];
 228   1      
 229   1        display();
 230   1      
 231   1      }
 232          
 233          void tm1629_f(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 234          {
 235   1        tm1629_clear();
 236   1        buf_display[0][1] = CODE[0x0f];
 237   1        buf_display[0][0] = CODE[f_number];
 238   1        display();
 239   1      }
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 5   

 240          
 241          void tm1629_E(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 242          {
 243   1        tm1629_clear();
 244   1        buf_display[0][1] = CODE[0x0E];
 245   1        buf_display[0][0] = CODE[f_number];
 246   1        display();
 247   1      }
 248          
 249          void Show_one_number(unsigned char f_number) //显示一个数字
 250          {
 251   1        tm1629_clear();
 252   1        //buf_display[0][1] = CODE[0x0E];
 253   1        buf_display[0][0] = CODE[f_number];
 254   1        display();
 255   1      }
 256          
 257          void Show_two_number(unsigned char f_number) //显示两个数字
 258          {
 259   1        tm1629_clear();
 260   1        buf_display[0][1] = CODE[f_number / 10];
 261   1        buf_display[0][0] = CODE[f_number % 10];
 262   1        display();
 263   1      }
 264          
 265          void Show_four_number(unsigned char* temp)
 266          {
 267   1        tm1629_clear();
 268   1        buf_display[0][3] = CODE[*(temp)];
 269   1        buf_display[0][2] = CODE[*(temp+1)];
 270   1        buf_display[0][1] = CODE[*(temp+2)];
 271   1        buf_display[0][0] = CODE[*(temp+3)];
 272   1        display();
 273   1      }
 274          
 275          void fun0(void) //待机显示函数
 276          {
 277   1        //tm1629_await();
 278   1        Display_time();
 279   1      }
 280          
 281          void fun1(void) //一级菜单F0
 282          {
 283   1        tm1629_f(0x00);
 284   1      }
 285          
 286          void fun2(void) //一级菜单F1
 287          {
 288   1        tm1629_f(0x01);
 289   1      }
 290          
 291          void fun3(void) //一级菜单F2
 292          {
 293   1        tm1629_f(0x02);
 294   1      }
 295          
 296          void fun4(void) //一级菜单F3
 297          {
 298   1        tm1629_f(0x03);
 299   1      }
 300          
 301          void fun5(void) //一级菜单F4
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 6   

 302          {
 303   1        tm1629_f(0x04);
 304   1      }
 305          
 306          void fun6(void) //一级菜单F5
 307          {
 308   1        tm1629_f(0x05);
 309   1      }
 310          
 311          void fun7(void) //一级菜单F6
 312          {
 313   1        tm1629_f(0x06);
 314   1      }
 315          
 316          void fun8(void) //一级菜单F7
 317          {
 318   1        tm1629_f(0x07);
 319   1      }
 320          
 321          void fun9(void) //一级菜单F8
 322          {
 323   1        tm1629_f(0x08);
 324   1      }
 325          
 326          void fun10(void) //一级菜单F9
 327          {
 328   1        tm1629_f(0x09);
 329   1      }
 330          
 331          void fun11(void) //一级菜单FA
 332          {
 333   1        tm1629_f(0x0a);
 334   1      }
 335          
 336          void fun12(void) //一级菜单Fb
 337          {
 338   1        tm1629_f(0x0b);
 339   1      }
 340          
 341          void fun13(void) //一级菜单FC
 342          {
 343   1        tm1629_f(0x0c);
 344   1      }
 345          
 346          void fun14(void) //一级菜单Fd
 347          {
 348   1        tm1629_f(0x0d);
 349   1      }
 350          
 351          void fun15(void) //设置年份
 352          {
 353   1        if (return_await_number_table() == 1)
 354   1        {
 355   2          Display_time();
 356   2          set_await_number_table(2);
 357   2        }
 358   1        if (return_await_number_table() == 3)
 359   1        {
 360   2          buf_display[1][7] = 0;
 361   2          buf_display[1][6] = 0;
 362   2          buf_display[1][5] = 0;
 363   2          buf_display[1][4] = 0;
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 7   

 364   2          display();
 365   2          set_await_number_table(0);
 366   2        }
 367   1        Ds1302_Write_Time();
 368   1      }
 369          
 370          void fun16(void) //设置月份
 371          {
 372   1        if (return_await_number_table() == 1)
 373   1        {
 374   2          Display_time();
 375   2          set_await_number_table(2);
 376   2        }
 377   1        if (return_await_number_table() == 3)
 378   1        {
 379   2          buf_display[1][2] = 0;
 380   2          buf_display[1][1] = 0;
 381   2          display();
 382   2          set_await_number_table(0);
 383   2        }
 384   1        Ds1302_Write_Time();
 385   1      }
 386          
 387          void fun17(void) //设置日期
 388          {
 389   1        if (return_await_number_table() == 1)
 390   1        {
 391   2          Display_time();
 392   2          set_await_number_table(2);
 393   2        }
 394   1        if (return_await_number_table() == 3)
 395   1        {
 396   2          buf_display[0][7] = 0;
 397   2          buf_display[0][6] = 0;
 398   2          display();
 399   2          set_await_number_table(0);
 400   2        }
 401   1        Ds1302_Write_Time();
 402   1      }
 403          
 404          void fun18(void) //设置星期
 405          {
 406   1        if (return_await_number_table() == 1)
 407   1        {
 408   2          Display_time();
 409   2          set_await_number_table(2);
 410   2        }
 411   1        if (return_await_number_table() == 3)
 412   1        {
 413   2          buf_display[0][5] = 0;
 414   2          display();
 415   2          set_await_number_table(0);
 416   2        }
 417   1        Ds1302_Write_Time();
 418   1      }
 419          
 420          void fun19(void) //设置小时
 421          {
 422   1        if (return_await_number_table() == 1)
 423   1        {
 424   2          Display_time();
 425   2          set_await_number_table(2);
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 8   

 426   2        }
 427   1        if (return_await_number_table() == 3)
 428   1        {
 429   2          buf_display[0][3] = 0;
 430   2          buf_display[0][2] = 0;
 431   2          display();
 432   2          set_await_number_table(0);
 433   2        }
 434   1        Ds1302_Write_Time();
 435   1      }
 436          
 437          void fun20(void) //设置分钟
 438          {
 439   1        if (return_await_number_table() == 1)
 440   1        {
 441   2          Display_time();
 442   2          set_await_number_table(2);
 443   2        }
 444   1        if (return_await_number_table() == 3)
 445   1        {
 446   2          buf_display[0][1] = 0;
 447   2          buf_display[0][0] = 0;
 448   2          display();
 449   2          set_await_number_table(0);
 450   2        }
 451   1        Ds1302_Write_Time();
 452   1      }
 453          
 454          void fun21(void) //二级菜单F1-E1
 455          {
 456   1        tm1629_E(0x01);
 457   1        Two_Menu_F1_E1[0] = 0;
 458   1        Two_Menu_F1_E1[1] = 0;
 459   1        Two_Menu_F1_E1[2] = 0;
 460   1        Two_Menu_F1_E1[3] = 1;
 461   1      }
 462          
 463          void fun22(void) //二级菜单F1-E2
 464          {
 465   1        tm1629_E(0x02);
 466   1      }
 467          
 468          void fun23(void) //二级菜单F1-E3
 469          {
 470   1        tm1629_E(0x03);
 471   1      }
 472          
 473          void fun24(void) //二级菜单F1-E4
 474          {
 475   1        tm1629_E(0x04);
 476   1      }
 477          
 478          void fun25(void) //二级菜单F2-E1
 479          {
 480   1        tm1629_E(0x01);
 481   1        Two_Menu_F1_E2[0] = 0;
 482   1        Two_Menu_F1_E2[1] = 0;
 483   1        Two_Menu_F1_E2[2] = 0;
 484   1        Two_Menu_F1_E2[3] = 1;
 485   1      }
 486          
 487          void fun26(void) //二级菜单F2-E2
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 9   

 488          {
 489   1        tm1629_E(0x02);
 490   1      }
 491          
 492          void fun27(void) //二级菜单F2-E3
 493          {
 494   1        tm1629_E(0x03);
 495   1      }
 496          
 497          void fun28(void) //二级菜单F2-E4
 498          {
 499   1        tm1629_E(0x04);
 500   1      }
 501          
 502          void fun29(void) //二级菜单F3-E1
 503          {
 504   1        tm1629_E(0x01);
 505   1      }
 506          
 507          void fun30(void) //二级菜单F3-E2
 508          {
 509   1        tm1629_E(0x02);
 510   1      }
 511          
 512          void fun31(void) //二级菜单F4
 513          {
 514   1        unsigned char temp = 0;
 515   1        temp = return_Two_Menu_F4_E1();
 516   1        Show_two_number(temp);
 517   1      }
 518          
 519          void fun32(void) //二级菜单F5
 520          {
 521   1        unsigned char temp = 0;
 522   1        temp = return_Two_Menu_F5_E1();
 523   1        Show_two_number(temp);
 524   1      }
 525          
 526          void fun33(void) //二级菜单F6-E1
 527          {
 528   1        tm1629_E(0x01);
 529   1      }
 530          
 531          void fun34(void) //二级菜单F6-E2
 532          {
 533   1        tm1629_E(0x02);
 534   1      }
 535          
 536          void fun35(void) //二级菜单F6-E3
 537          {
 538   1        tm1629_E(0x03);
 539   1      }
 540          
 541          void fun36(void) //二级菜单F6-E4
 542          {
 543   1        tm1629_E(0x04);
 544   1      }
 545          
 546          void fun37(void) //二级菜单F6-E5
 547          {
 548   1        tm1629_E(0x05);
 549   1      }
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 10  

 550          
 551          void fun38(void) //二级菜单F7-E1
 552          {
 553   1        tm1629_E(0x01);
 554   1      }
 555          
 556          void fun39(void) //二级菜单F7-E2
 557          {
 558   1        tm1629_E(0x02);
 559   1      }
 560          
 561          void fun40(void) //二级菜单F7-E3
 562          {
 563   1        tm1629_E(0x03);
 564   1      }
 565          
 566          void fun41(void) //二级菜单F7-E4
 567          {
 568   1        tm1629_E(0x04);
 569   1      }
 570          
 571          void fun42(void) //二级菜单F8-E1
 572          {
 573   1        tm1629_E(0x01);
 574   1      }
 575          
 576          void fun43(void) //二级菜单F8-E2
 577          {
 578   1        tm1629_E(0x02);
 579   1      }
 580          
 581          void fun44(void) //二级菜单F9-E1
 582          {
 583   1        tm1629_E(0x01);
 584   1      }
 585          
 586          void fun45(void) //二级菜单F9-E2
 587          {
 588   1        tm1629_E(0x02);
 589   1      }
 590          
 591          void fun46(void) //二级菜单FA
 592          {
 593   1        tm1629_f(0x0f);
 594   1      }
 595          
 596          
 597          void fun47(void) //二级菜单Fb
 598          {
 599   1        tm1629_f(0x0f);
 600   1      }
 601          
 602          void fun48(void) //二级菜单FC
 603          {
 604   1        tm1629_f(0x0f);
 605   1      }
 606          
 607          void fun49(void) //二级菜单Fd
 608          {
 609   1        tm1629_f(0x0f);
 610   1      }
 611          
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 11  

 612          void fun50(void) //F1_E1 千位闪烁
 613          {
 614   1        if (return_await_number_table() == 1)
 615   1        {
 616   2          Show_four_number(Two_Menu_F1_E1);
 617   2          set_await_number_table(2);
 618   2        }
 619   1        if (return_await_number_table() == 3)
 620   1        {
 621   2          buf_display[0][3] = 0;
 622   2          display();
 623   2          set_await_number_table(0);
 624   2        }
 625   1      }
 626          
 627          void fun51(void) //F1_E1 百位闪烁
 628          {
 629   1        if (return_await_number_table() == 1)
 630   1        {
 631   2          Show_four_number(Two_Menu_F1_E1);
 632   2          set_await_number_table(2);
 633   2        }
 634   1        if (return_await_number_table() == 3)
 635   1        {
 636   2          buf_display[0][2] = 0;
 637   2          display();
 638   2          set_await_number_table(0);
 639   2        }
 640   1      }
 641          
 642          void fun52(void)  //F1_E1 十位闪烁
 643          {
 644   1        if (return_await_number_table() == 1)
 645   1        {
 646   2          Show_four_number(Two_Menu_F1_E1);
 647   2          set_await_number_table(2);
 648   2        }
 649   1        if (return_await_number_table() == 3)
 650   1        {
 651   2          buf_display[0][1] = 0;
 652   2          display();
 653   2          set_await_number_table(0);
 654   2        }
 655   1      }
 656          
 657          void fun53(void) //F1_E1 个位闪烁
 658          {
 659   1        if (return_await_number_table() == 1)
 660   1        {
 661   2          Show_four_number(Two_Menu_F1_E1);
 662   2          set_await_number_table(2);
 663   2        }
 664   1        if (return_await_number_table() == 3)
 665   1        {
 666   2          buf_display[0][0] = 0;
 667   2          display();
 668   2          set_await_number_table(0);
 669   2        }
 670   1      }
 671          
 672          void fun54(void) //F1_E2 千位闪烁
 673          {
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 12  

 674   1        if (return_await_number_table() == 1)
 675   1        {
 676   2          Show_four_number(Two_Menu_F1_E2);
 677   2          set_await_number_table(2);
 678   2        }
 679   1        if (return_await_number_table() == 3)
 680   1        {
 681   2          buf_display[0][3] = 0;
 682   2          display();
 683   2          set_await_number_table(0);
 684   2        }
 685   1      }
 686          
 687          void fun55(void) //F1_E2 百位闪烁
 688          {
 689   1        if (return_await_number_table() == 1)
 690   1        {
 691   2          Show_four_number(Two_Menu_F1_E2);
 692   2          set_await_number_table(2);
 693   2        }
 694   1        if (return_await_number_table() == 3)
 695   1        {
 696   2          buf_display[0][2] = 0;
 697   2          display();
 698   2          set_await_number_table(0);
 699   2        }
 700   1      }
 701          
 702          void fun56(void) //F1_E2 十位闪烁
 703          {
 704   1        if (return_await_number_table() == 1)
 705   1        {
 706   2          Show_four_number(Two_Menu_F1_E2);
 707   2          set_await_number_table(2);
 708   2        }
 709   1        if (return_await_number_table() == 3)
 710   1        {
 711   2          buf_display[0][1] = 0;
 712   2          display();
 713   2          set_await_number_table(0);
 714   2        }
 715   1      }
 716          
 717          void fun57(void) //F1_E2 个位闪烁
 718          {
 719   1        if (return_await_number_table() == 1)
 720   1        {
 721   2          Show_four_number(Two_Menu_F1_E2);
 722   2          set_await_number_table(2);
 723   2        }
 724   1        if (return_await_number_table() == 3)
 725   1        {
 726   2          buf_display[0][0] = 0;
 727   2          display();
 728   2          set_await_number_table(0);
 729   2        }
 730   1      }
 731          
 732          void fun58(void) //F1_E3 千位闪烁
 733          {
 734   1        if (return_await_number_table() == 1)
 735   1        {
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 13  

 736   2          Show_four_number(Two_Menu_F1_E3);
 737   2          set_await_number_table(2);
 738   2        }
 739   1        if (return_await_number_table() == 3)
 740   1        {
 741   2          buf_display[0][3] = 0;
 742   2          display();
 743   2          set_await_number_table(0);
 744   2        }
 745   1      }
 746          
 747          void fun59(void) //F1_E3 百位闪烁
 748          {
 749   1        if (return_await_number_table() == 1)
 750   1        {
 751   2          Show_four_number(Two_Menu_F1_E3);
 752   2          set_await_number_table(2);
 753   2        }
 754   1        if (return_await_number_table() == 3)
 755   1        {
 756   2          buf_display[0][2] = 0;
 757   2          display();
 758   2          set_await_number_table(0);
 759   2        }
 760   1      }
 761          
 762          void fun60(void) //F1_E3 十位闪烁
 763          {
 764   1        if (return_await_number_table() == 1)
 765   1        {
 766   2          Show_four_number(Two_Menu_F1_E3);
 767   2          set_await_number_table(2);
 768   2        }
 769   1        if (return_await_number_table() == 3)
 770   1        {
 771   2          buf_display[0][1] = 0;
 772   2          display();
 773   2          set_await_number_table(0);
 774   2        }
 775   1      }
 776          
 777          void fun61(void) //F1_E3 个位闪烁
 778          {
 779   1        if (return_await_number_table() == 1)
 780   1        {
 781   2          Show_four_number(Two_Menu_F1_E3);
 782   2          set_await_number_table(2);
 783   2        }
 784   1        if (return_await_number_table() == 3)
 785   1        {
 786   2          buf_display[0][0] = 0;
 787   2          display();
 788   2          set_await_number_table(0);
 789   2        }
 790   1      }
 791          
 792          void fun62(void) //F1_E4 千位闪烁
 793          {
 794   1        if (return_await_number_table() == 1)
 795   1        {
 796   2          Show_four_number(Two_Menu_F1_E4);
 797   2          set_await_number_table(2);
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 14  

 798   2        }
 799   1        if (return_await_number_table() == 3)
 800   1        {
 801   2          buf_display[0][3] = 0;
 802   2          display();
 803   2          set_await_number_table(0);
 804   2        }
 805   1      }
 806          
 807          void fun63(void) //F1_E4 百位闪烁
 808          {
 809   1        if (return_await_number_table() == 1)
 810   1        {
 811   2          Show_four_number(Two_Menu_F1_E4);
 812   2          set_await_number_table(2);
 813   2        }
 814   1        if (return_await_number_table() == 3)
 815   1        {
 816   2          buf_display[0][2] = 0;
 817   2          display();
 818   2          set_await_number_table(0);
 819   2        }
 820   1      }
 821          
 822          void fun64(void) //F1_E4 十位闪烁
 823          {
 824   1        if (return_await_number_table() == 1)
 825   1        {
 826   2          Show_four_number(Two_Menu_F1_E4);
 827   2          set_await_number_table(2);
 828   2        }
 829   1        if (return_await_number_table() == 3)
 830   1        {
 831   2          buf_display[0][1] = 0;
 832   2          display();
 833   2          set_await_number_table(0);
 834   2        }
 835   1      }
 836          
 837          void fun65(void) //F1_E4 个位闪烁
 838          {
 839   1        if (return_await_number_table() == 1)
 840   1        {
 841   2          Show_four_number(Two_Menu_F1_E4);
 842   2          set_await_number_table(2);
 843   2        }
 844   1        if (return_await_number_table() == 3)
 845   1        {
 846   2          buf_display[0][0] = 0;
 847   2          display();
 848   2          set_await_number_table(0);
 849   2        }
 850   1      }
 851          
 852          void fun66(void) //F2_E1 千位闪烁
 853          {
 854   1        if (return_await_number_table() == 1)
 855   1        {
 856   2          Show_four_number(Two_Menu_F2_E1);
 857   2          set_await_number_table(2);
 858   2        }
 859   1        if (return_await_number_table() == 3)
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 15  

 860   1        {
 861   2          buf_display[0][3] = 0;
 862   2          display();
 863   2          set_await_number_table(0);
 864   2        }
 865   1      }
 866          
 867          void fun67(void) //F2_E1 百位闪烁
 868          {
 869   1        if (return_await_number_table() == 1)
 870   1        {
 871   2          Show_four_number(Two_Menu_F2_E1);
 872   2          set_await_number_table(2);
 873   2        }
 874   1        if (return_await_number_table() == 3)
 875   1        {
 876   2          buf_display[0][2] = 0;
 877   2          display();
 878   2          set_await_number_table(0);
 879   2        }
 880   1      }
 881          
 882          void fun68(void) //F2_E1 十位闪烁
 883          {
 884   1        if (return_await_number_table() == 1)
 885   1        {
 886   2          Show_four_number(Two_Menu_F2_E1);
 887   2          set_await_number_table(2);
 888   2        }
 889   1        if (return_await_number_table() == 3)
 890   1        {
 891   2          buf_display[0][1] = 0;
 892   2          display();
 893   2          set_await_number_table(0);
 894   2        }
 895   1      }
 896          
 897          void fun69(void) //F2_E1 个位闪烁
 898          {
 899   1        if (return_await_number_table() == 1)
 900   1        {
 901   2          Show_four_number(Two_Menu_F2_E1);
 902   2          set_await_number_table(2);
 903   2        }
 904   1        if (return_await_number_table() == 3)
 905   1        {
 906   2          buf_display[0][0] = 0;
 907   2          display();
 908   2          set_await_number_table(0);
 909   2        }
 910   1      }
 911          
 912          void fun70(void) //F2_E2 千位闪烁
 913          {
 914   1        if (return_await_number_table() == 1)
 915   1        {
 916   2          Show_four_number(Two_Menu_F2_E2);
 917   2          set_await_number_table(2);
 918   2        }
 919   1        if (return_await_number_table() == 3)
 920   1        {
 921   2          buf_display[0][3] = 0;
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 16  

 922   2          display();
 923   2          set_await_number_table(0);
 924   2        }
 925   1      }
 926          
 927          void fun71(void) //F2_E2 百位闪烁
 928          {
 929   1        if (return_await_number_table() == 1)
 930   1        {
 931   2          Show_four_number(Two_Menu_F2_E2);
 932   2          set_await_number_table(2);
 933   2        }
 934   1        if (return_await_number_table() == 3)
 935   1        {
 936   2          buf_display[0][2] = 0;
 937   2          display();
 938   2          set_await_number_table(0);
 939   2        }
 940   1      }
 941          
 942          void fun72(void) //F2_E2 十位闪烁
 943          {
 944   1        if (return_await_number_table() == 1)
 945   1        {
 946   2          Show_four_number(Two_Menu_F2_E2);
 947   2          set_await_number_table(2);
 948   2        }
 949   1        if (return_await_number_table() == 3)
 950   1        {
 951   2          buf_display[0][1] = 0;
 952   2          display();
 953   2          set_await_number_table(0);
 954   2        }
 955   1      }
 956          
 957          void fun73(void) //F2_E2 个位闪烁
 958          {
 959   1        if (return_await_number_table() == 1)
 960   1        {
 961   2          Show_four_number(Two_Menu_F2_E2);
 962   2          set_await_number_table(2);
 963   2        }
 964   1        if (return_await_number_table() == 3)
 965   1        {
 966   2          buf_display[0][0] = 0;
 967   2          display();
 968   2          set_await_number_table(0);
 969   2        }
 970   1      }
 971          
 972          void fun74(void) //F2_E3 千位闪烁
 973          {
 974   1        if (return_await_number_table() == 1)
 975   1        {
 976   2          Show_four_number(Two_Menu_F2_E3);
 977   2          set_await_number_table(2);
 978   2        }
 979   1        if (return_await_number_table() == 3)
 980   1        {
 981   2          buf_display[0][3] = 0;
 982   2          display();
 983   2          set_await_number_table(0);
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 17  

 984   2        }
 985   1      }
 986          
 987          void fun75(void) //F2_E3 百位闪烁
 988          {
 989   1        if (return_await_number_table() == 1)
 990   1        {
 991   2          Show_four_number(Two_Menu_F2_E3);
 992   2          set_await_number_table(2);
 993   2        }
 994   1        if (return_await_number_table() == 3)
 995   1        {
 996   2          buf_display[0][2] = 0;
 997   2          display();
 998   2          set_await_number_table(0);
 999   2        }
1000   1      }
1001          
1002          void fun76(void) //F2_E3 十位闪烁
1003          {
1004   1        if (return_await_number_table() == 1)
1005   1        {
1006   2          Show_four_number(Two_Menu_F2_E3);
1007   2          set_await_number_table(2);
1008   2        }
1009   1        if (return_await_number_table() == 3)
1010   1        {
1011   2          buf_display[0][1] = 0;
1012   2          display();
1013   2          set_await_number_table(0);
1014   2        }
1015   1      }
1016          
1017          void fun77(void) //F2_E3 个位闪烁
1018          {
1019   1        if (return_await_number_table() == 1)
1020   1        {
1021   2          Show_four_number(Two_Menu_F2_E3);
1022   2          set_await_number_table(2);
1023   2        }
1024   1        if (return_await_number_table() == 3)
1025   1        {
1026   2          buf_display[0][0] = 0;
1027   2          display();
1028   2          set_await_number_table(0);
1029   2        }
1030   1      }
1031          
1032          void fun78(void) //F2_E4 千位闪烁
1033          {
1034   1        if (return_await_number_table() == 1)
1035   1        {
1036   2          Show_four_number(Two_Menu_F2_E4);
1037   2          set_await_number_table(2);
1038   2        }
1039   1        if (return_await_number_table() == 3)
1040   1        {
1041   2          buf_display[0][3] = 0;
1042   2          display();
1043   2          set_await_number_table(0);
1044   2        }
1045   1      }
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 18  

1046          
1047          void fun79(void) //F2_E4 百位闪烁
1048          {
1049   1        if (return_await_number_table() == 1)
1050   1        {
1051   2          Show_four_number(Two_Menu_F2_E4);
1052   2          set_await_number_table(2);
1053   2        }
1054   1        if (return_await_number_table() == 3)
1055   1        {
1056   2          buf_display[0][2] = 0;
1057   2          display();
1058   2          set_await_number_table(0);
1059   2        }
1060   1      }
1061          
1062          void fun80(void) //F2_E4 十位闪烁
1063          {
1064   1        if (return_await_number_table() == 1)
1065   1        {
1066   2          Show_four_number(Two_Menu_F2_E4);
1067   2          set_await_number_table(2);
1068   2        }
1069   1        if (return_await_number_table() == 3)
1070   1        {
1071   2          buf_display[0][1] = 0;
1072   2          display();
1073   2          set_await_number_table(0);
1074   2        }
1075   1      }
1076          
1077          void fun81(void) //F2_E4 个位闪烁
1078          {
1079   1        if (return_await_number_table() == 1)
1080   1        {
1081   2          Show_four_number(Two_Menu_F2_E4);
1082   2          set_await_number_table(2);
1083   2        }
1084   1        if (return_await_number_table() == 3)
1085   1        {
1086   2          buf_display[0][0] = 0;
1087   2          display();
1088   2          set_await_number_table(0);
1089   2        }
1090   1      }
1091          
1092          void fun82(void) //显示即时显示 还是循环显示
1093          {
1094   1        unsigned char temp=0;
1095   1        temp = return_Two_Menu_F3_E1();
1096   1        Show_one_number(temp);
1097   1      }
1098          
1099          void fun83(void) //队列存储个数
1100          {
1101   1        unsigned char temp = 0;
1102   1        temp = return_Two_Menu_F3_E2();
1103   1        Show_two_number(temp);
1104   1      }
1105          
1106          void fun84(void) //F6_E1语音选择
1107          {
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 19  

1108   1        unsigned char temp = 0;
1109   1        temp = return_Two_Menu_F6_E1();
1110   1        Show_one_number(temp);
1111   1      }
1112          
1113          void fun85(void) //F6_E2语音报读次数
1114          {
1115   1        unsigned char temp = 0;
1116   1        temp = return_Two_Menu_F6_E2();
1117   1        Show_one_number(temp);
1118   1      }
1119          
1120          void fun86(void) //F6_E3循环时候是否报读
1121          {
1122   1        unsigned char temp = 0;
1123   1        temp = return_Two_Menu_F6_E3();
1124   1        Show_one_number(temp);
1125   1      }
1126          
1127          void fun87(void) //F6_E4音量大小调整
1128          {
1129   1        unsigned char temp = 0;
1130   1        temp = return_Two_Menu_F6_E4();
1131   1        Show_one_number(temp);
1132   1      }
1133          
1134          void fun88(void) //F6_E5屏幕亮度调整
1135          {
1136   1        unsigned char temp = 0;
1137   1        temp = return_Two_Menu_F6_E5();
1138   1        Show_one_number(temp);
1139   1      }
1140          
1141          void fun89(void) //F7_E1 999*9
1142          {
1143   1        unsigned char temp = 0;
1144   1        temp = return_Two_Menu_F7_E1();
1145   1        Show_one_number(temp);
1146   1      }
1147          
1148          void fun90(void) //F7_E2 9999*9
1149          {
1150   1        unsigned char temp = 0;
1151   1        temp = return_Two_Menu_F7_E2();
1152   1        Show_one_number(temp);
1153   1      }
1154          
1155          void fun91(void) //F7_E3 999*99
1156          {
1157   1        unsigned char temp = 0;
1158   1        temp = return_Two_Menu_F7_E3();
1159   1        Show_one_number(temp);
1160   1      }
1161          
1162          void fun92(void) //F7_E4 9999*99
1163          {
1164   1        unsigned char temp = 0;
1165   1        temp = return_Two_Menu_F7_E4();
1166   1        Show_one_number(temp);
1167   1      }
1168          
1169          void fun93(void) //F8_E1单键位跟多键位切换
C51 COMPILER V9.00   TM1629                                                                09/12/2015 12:08:50 PAGE 20  

1170          {
1171   1        unsigned char temp = 0;
1172   1        temp = return_Two_Menu_F8_E1();
1173   1        Show_one_number(temp);
1174   1      }
1175          
1176          void fun94(void) //F8_E2键位设置
1177          {
1178   1        unsigned char temp = 0;
1179   1        temp = return_Two_Menu_F8_E2();
1180   1        Show_two_number(temp);
1181   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2836    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    320       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
