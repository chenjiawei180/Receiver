C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TM1629
OBJECT MODULE PLACED IN tm1629.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\tm1629.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRINT(
                    -.\tm1629.lst) TABS(2) OBJECT(tm1629.obj)

line level    source

   1          #include "tm1629.h"
   2          #include "timer.h"
   3          #include "usart.h"
   4          #include "ds1302.h"
   5          #include "key.h"
   6          
   7          unsigned char const CODE[] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x3
             -9, 0x5E, 0x79, 0x71, 0x76, 0x38, 0x5c, 0x73, 0x3e };//0-9 abcdef 显示器码数组
   8          unsigned char const INIT_CODE[] = { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 };//逐段点亮数码管数组
   9          unsigned char const SHANGSHUO[] = { 0x40, 0x00 }; // 点亮数码管中间段以及灭
  10          unsigned char buf_display[6][8] = { 0 }; //3个TM1629显存数组
  11          unsigned char display_ram[240] = { 0 }; //程序运行时记录显示数据的内存 
  12          unsigned char await_time_table= 0 ;//用于记录待机显示横杠数码管次数 
  13          
  14          void writeDataTo1629(unsigned char p) //写数据给第一个TM1629
  15          {
  16   1        unsigned int i;
  17   1        TM1629_STB = 0;
  18   1        for (i = 0; i<8; i++)
  19   1        {
  20   2          TM1629_CLK = 0;
  21   2          if (p & 0x01)
  22   2            TM1629_DIO = 1;
  23   2          else
  24   2            TM1629_DIO = 0;
  25   2          _nop_();
  26   2          _nop_();
  27   2          _nop_();
  28   2          _nop_();
  29   2          TM1629_CLK = 1;
  30   2          p = p >> 1;
  31   2        }
  32   1        TM1629_CLK = 0;
  33   1        TM1629_DIO = 0;
  34   1      }
  35          
  36          void writeDataTo1629_2(unsigned char p) //写数据给第二个TM1629
  37          {
  38   1        unsigned int i;
  39   1        TM1629_STB2 = 0;
  40   1        for (i = 0; i<8; i++)
  41   1        {
  42   2          TM1629_CLK = 0;
  43   2          if (p & 0x01)
  44   2            TM1629_DIO = 1;
  45   2          else
  46   2            TM1629_DIO = 0;
  47   2          _nop_();
  48   2          _nop_();
  49   2          _nop_();
  50   2          _nop_();
  51   2          TM1629_CLK = 1;
  52   2          p = p >> 1;
  53   2        }
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 2   

  54   1        TM1629_CLK = 0;
  55   1        TM1629_DIO = 0;
  56   1      }
  57          
  58          void writeDataTo1629_3(unsigned char p) //写数据给第三个TM1629
  59          {
  60   1        unsigned int i;
  61   1        TM1629_STB3 = 0;
  62   1        for (i = 0; i<8; i++)
  63   1        {
  64   2          TM1629_CLK = 0;
  65   2          if (p & 0x01)
  66   2            TM1629_DIO = 1;
  67   2          else
  68   2            TM1629_DIO = 0;
  69   2          _nop_();
  70   2          _nop_();
  71   2          _nop_();
  72   2          _nop_();
  73   2          TM1629_CLK = 1;
  74   2          p = p >> 1;
  75   2        }
  76   1        TM1629_CLK = 0;
  77   1        TM1629_DIO = 0;
  78   1      }
  79          
  80          void send_command(unsigned char word) //写命令给第一个TM1629
  81          {
  82   1        TM1629_STB = 1;
  83   1        nop;
  84   1        TM1629_STB = 0;
  85   1        writeDataTo1629(word);
  86   1      }
  87          
  88          void send_command_2(unsigned char word) //写命令给第二个TM1629
  89          {
  90   1        TM1629_STB2 = 1;
  91   1        nop;
  92   1        TM1629_STB2 = 0;
  93   1        writeDataTo1629_2(word);
  94   1      }
  95          
  96          void send_command_3(unsigned char word) //写命令给第三个TM1629
  97          {
  98   1        TM1629_STB3 = 1;
  99   1        nop;
 100   1        TM1629_STB3 = 0;
 101   1        writeDataTo1629_3(word);
 102   1      }
 103          
 104          void display(void) //3个TM1629显示函数
 105          {
 106   1        unsigned char i;
 107   1        send_command(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 108   1        send_command(0xc0); //设置显示地址命令：从00H开始
 109   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 110   1        {
 111   2          writeDataTo1629(buf_display[0][i]);
 112   2          writeDataTo1629(buf_display[1][i]);
 113   2        }
 114   1        send_command(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 115   1        TM1629_STB = 1;
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 3   

 116   1      
 117   1        send_command_2(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 118   1        send_command_2(0xc0); //设置显示地址命令：从00H开始
 119   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 120   1        {
 121   2          writeDataTo1629_2(buf_display[2][i]);
 122   2          writeDataTo1629_2(buf_display[3][i]);
 123   2        }
 124   1        send_command_2(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 125   1        TM1629_STB2 = 1;
 126   1      
 127   1        send_command_3(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 128   1        send_command_3(0xc0); //设置显示地址命令：从00H开始
 129   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 130   1        {
 131   2          writeDataTo1629_3(buf_display[4][i]);
 132   2          writeDataTo1629_3(buf_display[5][i]);
 133   2        }
 134   1        send_command_3(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 135   1        TM1629_STB3 = 1;
 136   1      }
 137          
 138          void tm1629_init(void) //TM1629开机初始化函数
 139          {
 140   1        unsigned char i, j, k;    //k控制显示的具体数字，i和j控制buf_display的刷新
 141   1        for (k = 0; k<8; k++)
 142   1        {
 143   2          for (i = 0; i<6; i++)
 144   2          {
 145   3            for (j = 0; j<8; j++)
 146   3            {
 147   4              buf_display[i][j] = INIT_CODE[k];
 148   4            }
 149   3          }
 150   2          display();
 151   2          Tm1629_delay(30);
 152   2        }
 153   1      }
 154          
 155          
 156          void Tm1629_delay(unsigned char k) //延时函数
 157          {
 158   1        unsigned char i, j;
 159   1        for (; k>0; k--)
 160   1        {
 161   2          for (i = 255; i>0; i--)
 162   2          {
 163   3            for (j = 255; j>0; j--)
 164   3            {
 165   4              ;
 166   4      
 167   4            }
 168   3          }
 169   2        }
 170   1      }
 171          
 172          void tm1629_clear(void)//全部归零
 173          {
 174   1        unsigned char i, j;
 175   1        for (i = 0; i<6; i++)
 176   1        {
 177   2          for (j = 0; j<8; j++)
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 4   

 178   2          {
 179   3            buf_display[i][j] = 0x00;
 180   3          }
 181   2        }
 182   1      }
 183          
 184          void tm1629_await(void)
 185          {
 186   1        unsigned char i;  //k控制显示的具体数字，i和j控制buf_display的刷新
 187   1        unsigned char await_number_table_temp = 0;
 188   1        await_number_table_temp = return_await_number_table();
 189   1        if (await_number_table_temp == 1)
 190   1        {
 191   2          //GD5800_select_chapter(0x0008) ;
 192   2          tm1629_clear();
 193   2          i = await_time_table & 0x03;
 194   2          buf_display[0][i] = 0x40;
 195   2          display();
 196   2          set_await_number_table(0);
 197   2          await_time_table++;
 198   2          if (await_time_table == 4)
 199   2            await_time_table = 0;
 200   2        }
 201   1      }
 202          
 203          void Display_time(void)
 204          {
 205   1        tm1629_clear();
 206   1        Ds1302_Read_Time(); 
 207   1        buf_display[1][7] = CODE[2];        //年
 208   1        buf_display[1][6] = CODE[0];
 209   1        buf_display[1][5] = CODE[time_buf1[1] / 10];
 210   1        buf_display[1][4] = CODE[time_buf1[1] % 10];
 211   1      
 212   1        buf_display[1][3] = 0x40;          // -
 213   1        
 214   1        buf_display[1][2] = CODE[time_buf1[2] / 10]; //月
 215   1        buf_display[1][1] = CODE[time_buf1[2] % 10];
 216   1      
 217   1        buf_display[1][0] = 0x40;          // -
 218   1      
 219   1        buf_display[0][7] = CODE[time_buf1[3] / 10];
 220   1        buf_display[0][6] = CODE[time_buf1[3] % 10];//日
 221   1      
 222   1        buf_display[0][5] = CODE[time_buf1[7]];   //星期
 223   1      
 224   1        buf_display[0][3] = CODE[time_buf1[4] / 10]; //小时
 225   1        buf_display[0][2] = CODE[time_buf1[4] % 10];
 226   1        buf_display[0][1] = CODE[time_buf1[5] / 10]; //小时
 227   1        buf_display[0][0] = CODE[time_buf1[5] % 10];
 228   1      
 229   1        display();
 230   1      
 231   1      }
 232          
 233          void tm1629_f(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 234          {
 235   1        tm1629_clear();
 236   1        buf_display[0][1] = CODE[0x0f];
 237   1        buf_display[0][0] = CODE[f_number];
 238   1        display();
 239   1      }
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 5   

 240          
 241          void tm1629_E(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 242          {
 243   1        tm1629_clear();
 244   1        buf_display[0][1] = CODE[0x0E];
 245   1        buf_display[0][0] = CODE[f_number];
 246   1        display();
 247   1      }
 248          
 249          void Show_four_number(unsigned char* temp)
 250          {
 251   1        tm1629_clear();
 252   1        buf_display[0][3] = CODE[*(temp)];
 253   1        buf_display[0][2] = CODE[*(temp+1)];
 254   1        buf_display[0][1] = CODE[*(temp+2)];
 255   1        buf_display[0][0] = CODE[*(temp+3)];
 256   1        display();
 257   1      }
 258          
 259          void fun0(void) //待机显示函数
 260          {
 261   1        //tm1629_await();
 262   1        Display_time();
 263   1      }
 264          
 265          void fun1(void) //一级菜单F0
 266          {
 267   1        tm1629_f(0x00);
 268   1      }
 269          
 270          void fun2(void) //一级菜单F1
 271          {
 272   1        tm1629_f(0x01);
 273   1      }
 274          
 275          void fun3(void) //一级菜单F2
 276          {
 277   1        tm1629_f(0x02);
 278   1      }
 279          
 280          void fun4(void) //一级菜单F3
 281          {
 282   1        tm1629_f(0x03);
 283   1      }
 284          
 285          void fun5(void) //一级菜单F4
 286          {
 287   1        tm1629_f(0x04);
 288   1      }
 289          
 290          void fun6(void) //一级菜单F5
 291          {
 292   1        tm1629_f(0x05);
 293   1      }
 294          
 295          void fun7(void) //一级菜单F6
 296          {
 297   1        tm1629_f(0x06);
 298   1      }
 299          
 300          void fun8(void) //一级菜单F7
 301          {
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 6   

 302   1        tm1629_f(0x07);
 303   1      }
 304          
 305          void fun9(void) //一级菜单F8
 306          {
 307   1        tm1629_f(0x08);
 308   1      }
 309          
 310          void fun10(void) //一级菜单F9
 311          {
 312   1        tm1629_f(0x09);
 313   1      }
 314          
 315          void fun11(void) //一级菜单FA
 316          {
 317   1        tm1629_f(0x0a);
 318   1      }
 319          
 320          void fun12(void) //一级菜单Fb
 321          {
 322   1        tm1629_f(0x0b);
 323   1      }
 324          
 325          void fun13(void) //一级菜单FC
 326          {
 327   1        tm1629_f(0x0c);
 328   1      }
 329          
 330          void fun14(void) //一级菜单Fd
 331          {
 332   1        tm1629_f(0x0d);
 333   1      }
 334          
 335          void fun15(void) //设置年份
 336          {
 337   1        if (return_await_number_table() == 1)
 338   1        {
 339   2          Display_time();
 340   2          set_await_number_table(2);
 341   2        }
 342   1        if (return_await_number_table() == 3)
 343   1        {
 344   2          buf_display[1][7] = 0;
 345   2          buf_display[1][6] = 0;
 346   2          buf_display[1][5] = 0;
 347   2          buf_display[1][4] = 0;
 348   2          display();
 349   2          set_await_number_table(0);
 350   2        }
 351   1        Ds1302_Write_Time();
 352   1      }
 353          
 354          void fun16(void) //设置月份
 355          {
 356   1        if (return_await_number_table() == 1)
 357   1        {
 358   2          Display_time();
 359   2          set_await_number_table(2);
 360   2        }
 361   1        if (return_await_number_table() == 3)
 362   1        {
 363   2          buf_display[1][2] = 0;
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 7   

 364   2          buf_display[1][1] = 0;
 365   2          display();
 366   2          set_await_number_table(0);
 367   2        }
 368   1        Ds1302_Write_Time();
 369   1      }
 370          
 371          void fun17(void) //设置日期
 372          {
 373   1        if (return_await_number_table() == 1)
 374   1        {
 375   2          Display_time();
 376   2          set_await_number_table(2);
 377   2        }
 378   1        if (return_await_number_table() == 3)
 379   1        {
 380   2          buf_display[0][7] = 0;
 381   2          buf_display[0][6] = 0;
 382   2          display();
 383   2          set_await_number_table(0);
 384   2        }
 385   1        Ds1302_Write_Time();
 386   1      }
 387          
 388          void fun18(void) //设置星期
 389          {
 390   1        if (return_await_number_table() == 1)
 391   1        {
 392   2          Display_time();
 393   2          set_await_number_table(2);
 394   2        }
 395   1        if (return_await_number_table() == 3)
 396   1        {
 397   2          buf_display[0][5] = 0;
 398   2          display();
 399   2          set_await_number_table(0);
 400   2        }
 401   1        Ds1302_Write_Time();
 402   1      }
 403          
 404          void fun19(void) //设置小时
 405          {
 406   1        if (return_await_number_table() == 1)
 407   1        {
 408   2          Display_time();
 409   2          set_await_number_table(2);
 410   2        }
 411   1        if (return_await_number_table() == 3)
 412   1        {
 413   2          buf_display[0][3] = 0;
 414   2          buf_display[0][2] = 0;
 415   2          display();
 416   2          set_await_number_table(0);
 417   2        }
 418   1        Ds1302_Write_Time();
 419   1      }
 420          
 421          void fun20(void) //设置分钟
 422          {
 423   1        if (return_await_number_table() == 1)
 424   1        {
 425   2          Display_time();
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 8   

 426   2          set_await_number_table(2);
 427   2        }
 428   1        if (return_await_number_table() == 3)
 429   1        {
 430   2          buf_display[0][1] = 0;
 431   2          buf_display[0][0] = 0;
 432   2          display();
 433   2          set_await_number_table(0);
 434   2        }
 435   1        Ds1302_Write_Time();
 436   1      }
 437          
 438          void fun21(void) //二级菜单F1-E1
 439          {
 440   1        tm1629_E(0x01);
 441   1      }
 442          
 443          void fun22(void) //二级菜单F1-E2
 444          {
 445   1        tm1629_E(0x02);
 446   1      }
 447          
 448          void fun23(void) //二级菜单F1-E3
 449          {
 450   1        tm1629_E(0x03);
 451   1      }
 452          
 453          void fun24(void) //二级菜单F1-E4
 454          {
 455   1        tm1629_E(0x04);
 456   1      }
 457          
 458          void fun25(void) //二级菜单F2-E1
 459          {
 460   1        tm1629_E(0x01);
 461   1      }
 462          
 463          void fun26(void) //二级菜单F2-E2
 464          {
 465   1        tm1629_E(0x02);
 466   1      }
 467          
 468          void fun27(void) //二级菜单F2-E3
 469          {
 470   1        tm1629_E(0x03);
 471   1      }
 472          
 473          void fun28(void) //二级菜单F2-E4
 474          {
 475   1        tm1629_E(0x04);
 476   1      }
 477          
 478          void fun29(void) //二级菜单F3-E1
 479          {
 480   1        tm1629_E(0x01);
 481   1      }
 482          
 483          void fun30(void) //二级菜单F3-E2
 484          {
 485   1        tm1629_E(0x02);
 486   1      }
 487          
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 9   

 488          void fun31(void) //二级菜单F4
 489          {
 490   1        tm1629_f(0x0f);
 491   1      }
 492          
 493          void fun32(void) //二级菜单F5
 494          {
 495   1        tm1629_f(0x0f);
 496   1      }
 497          
 498          void fun33(void) //二级菜单F6-E1
 499          {
 500   1        tm1629_E(0x01);
 501   1      }
 502          
 503          void fun34(void) //二级菜单F6-E2
 504          {
 505   1        tm1629_E(0x02);
 506   1      }
 507          
 508          void fun35(void) //二级菜单F6-E3
 509          {
 510   1        tm1629_E(0x03);
 511   1      }
 512          
 513          void fun36(void) //二级菜单F6-E4
 514          {
 515   1        tm1629_E(0x04);
 516   1      }
 517          
 518          void fun37(void) //二级菜单F6-E5
 519          {
 520   1        tm1629_E(0x05);
 521   1      }
 522          
 523          void fun38(void) //二级菜单F7-E1
 524          {
 525   1        tm1629_E(0x01);
 526   1      }
 527          
 528          void fun39(void) //二级菜单F7-E2
 529          {
 530   1        tm1629_E(0x02);
 531   1      }
 532          
 533          void fun40(void) //二级菜单F7-E3
 534          {
 535   1        tm1629_E(0x03);
 536   1      }
 537          
 538          void fun41(void) //二级菜单F7-E4
 539          {
 540   1        tm1629_E(0x04);
 541   1      }
 542          
 543          void fun42(void) //二级菜单F8-E1
 544          {
 545   1        tm1629_E(0x01);
 546   1      }
 547          
 548          void fun43(void) //二级菜单F8-E2
 549          {
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 10  

 550   1        tm1629_E(0x02);
 551   1      }
 552          
 553          void fun44(void) //二级菜单F9-E1
 554          {
 555   1        tm1629_E(0x01);
 556   1      }
 557          
 558          void fun45(void) //二级菜单F9-E2
 559          {
 560   1        tm1629_E(0x02);
 561   1      }
 562          
 563          void fun46(void) //二级菜单FA
 564          {
 565   1        tm1629_f(0x0f);
 566   1      }
 567          
 568          
 569          void fun47(void) //二级菜单Fb
 570          {
 571   1        tm1629_f(0x0f);
 572   1      }
 573          
 574          void fun48(void) //二级菜单FC
 575          {
 576   1        tm1629_f(0x0f);
 577   1      }
 578          
 579          void fun49(void) //二级菜单Fd
 580          {
 581   1        tm1629_f(0x0f);
 582   1      }
 583          
 584          void fun50(void) //F1_E1 千位闪烁
 585          {
 586   1        if (return_await_number_table() == 1)
 587   1        {
 588   2          Show_four_number(Two_Menu_F1_E1);
 589   2          set_await_number_table(2);
 590   2        }
 591   1        if (return_await_number_table() == 3)
 592   1        {
 593   2          buf_display[0][3] = 0;
 594   2          display();
 595   2          set_await_number_table(0);
 596   2        }
 597   1      }
 598          
 599          void fun51(void) //F1_E1 百位闪烁
 600          {
 601   1        if (return_await_number_table() == 1)
 602   1        {
 603   2          Show_four_number(Two_Menu_F1_E1);
 604   2          set_await_number_table(2);
 605   2        }
 606   1        if (return_await_number_table() == 3)
 607   1        {
 608   2          buf_display[0][2] = 0;
 609   2          display();
 610   2          set_await_number_table(0);
 611   2        }
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 11  

 612   1      }
 613          
 614          void fun52(void)  //F1_E1 十位闪烁
 615          {
 616   1        if (return_await_number_table() == 1)
 617   1        {
 618   2          Show_four_number(Two_Menu_F1_E1);
 619   2          set_await_number_table(2);
 620   2        }
 621   1        if (return_await_number_table() == 3)
 622   1        {
 623   2          buf_display[0][1] = 0;
 624   2          display();
 625   2          set_await_number_table(0);
 626   2        }
 627   1      }
 628          
 629          void fun53(void) //F1_E1 个位闪烁
 630          {
 631   1        if (return_await_number_table() == 1)
 632   1        {
 633   2          Show_four_number(Two_Menu_F1_E1);
 634   2          set_await_number_table(2);
 635   2        }
 636   1        if (return_await_number_table() == 3)
 637   1        {
 638   2          buf_display[0][0] = 0;
 639   2          display();
 640   2          set_await_number_table(0);
 641   2        }
 642   1      }
 643          
 644          void fun54(void) //F1_E2 千位闪烁
 645          {
 646   1        if (return_await_number_table() == 1)
 647   1        {
 648   2          Show_four_number(Two_Menu_F1_E2);
 649   2          set_await_number_table(2);
 650   2        }
 651   1        if (return_await_number_table() == 3)
 652   1        {
 653   2          buf_display[0][3] = 0;
 654   2          display();
 655   2          set_await_number_table(0);
 656   2        }
 657   1      }
 658          
 659          void fun55(void) //F1_E2 百位闪烁
 660          {
 661   1        if (return_await_number_table() == 1)
 662   1        {
 663   2          Show_four_number(Two_Menu_F1_E2);
 664   2          set_await_number_table(2);
 665   2        }
 666   1        if (return_await_number_table() == 3)
 667   1        {
 668   2          buf_display[0][2] = 0;
 669   2          display();
 670   2          set_await_number_table(0);
 671   2        }
 672   1      }
 673          
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 12  

 674          void fun56(void) //F1_E2 十位闪烁
 675          {
 676   1        if (return_await_number_table() == 1)
 677   1        {
 678   2          Show_four_number(Two_Menu_F1_E2);
 679   2          set_await_number_table(2);
 680   2        }
 681   1        if (return_await_number_table() == 3)
 682   1        {
 683   2          buf_display[0][1] = 0;
 684   2          display();
 685   2          set_await_number_table(0);
 686   2        }
 687   1      }
 688          
 689          void fun57(void) //F1_E2 个位闪烁
 690          {
 691   1        if (return_await_number_table() == 1)
 692   1        {
 693   2          Show_four_number(Two_Menu_F1_E2);
 694   2          set_await_number_table(2);
 695   2        }
 696   1        if (return_await_number_table() == 3)
 697   1        {
 698   2          buf_display[0][0] = 0;
 699   2          display();
 700   2          set_await_number_table(0);
 701   2        }
 702   1      }
 703          
 704          void fun58(void) //F1_E3 千位闪烁
 705          {
 706   1        if (return_await_number_table() == 1)
 707   1        {
 708   2          Show_four_number(Two_Menu_F1_E3);
 709   2          set_await_number_table(2);
 710   2        }
 711   1        if (return_await_number_table() == 3)
 712   1        {
 713   2          buf_display[0][3] = 0;
 714   2          display();
 715   2          set_await_number_table(0);
 716   2        }
 717   1      }
 718          
 719          void fun59(void) //F1_E3 百位闪烁
 720          {
 721   1        if (return_await_number_table() == 1)
 722   1        {
 723   2          Show_four_number(Two_Menu_F1_E3);
 724   2          set_await_number_table(2);
 725   2        }
 726   1        if (return_await_number_table() == 3)
 727   1        {
 728   2          buf_display[0][2] = 0;
 729   2          display();
 730   2          set_await_number_table(0);
 731   2        }
 732   1      }
 733          
 734          void fun60(void) //F1_E3 十位闪烁
 735          {
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 13  

 736   1        if (return_await_number_table() == 1)
 737   1        {
 738   2          Show_four_number(Two_Menu_F1_E3);
 739   2          set_await_number_table(2);
 740   2        }
 741   1        if (return_await_number_table() == 3)
 742   1        {
 743   2          buf_display[0][1] = 0;
 744   2          display();
 745   2          set_await_number_table(0);
 746   2        }
 747   1      }
 748          
 749          void fun61(void) //F1_E3 个位闪烁
 750          {
 751   1        if (return_await_number_table() == 1)
 752   1        {
 753   2          Show_four_number(Two_Menu_F1_E3);
 754   2          set_await_number_table(2);
 755   2        }
 756   1        if (return_await_number_table() == 3)
 757   1        {
 758   2          buf_display[0][0] = 0;
 759   2          display();
 760   2          set_await_number_table(0);
 761   2        }
 762   1      }
 763          
 764          void fun62(void) //F1_E4 千位闪烁
 765          {
 766   1        if (return_await_number_table() == 1)
 767   1        {
 768   2          Show_four_number(Two_Menu_F1_E4);
 769   2          set_await_number_table(2);
 770   2        }
 771   1        if (return_await_number_table() == 3)
 772   1        {
 773   2          buf_display[0][3] = 0;
 774   2          display();
 775   2          set_await_number_table(0);
 776   2        }
 777   1      }
 778          
 779          void fun63(void) //F1_E4 百位闪烁
 780          {
 781   1        if (return_await_number_table() == 1)
 782   1        {
 783   2          Show_four_number(Two_Menu_F1_E4);
 784   2          set_await_number_table(2);
 785   2        }
 786   1        if (return_await_number_table() == 3)
 787   1        {
 788   2          buf_display[0][2] = 0;
 789   2          display();
 790   2          set_await_number_table(0);
 791   2        }
 792   1      }
 793          
 794          void fun64(void) //F1_E4 十位闪烁
 795          {
 796   1        if (return_await_number_table() == 1)
 797   1        {
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 14  

 798   2          Show_four_number(Two_Menu_F1_E4);
 799   2          set_await_number_table(2);
 800   2        }
 801   1        if (return_await_number_table() == 3)
 802   1        {
 803   2          buf_display[0][1] = 0;
 804   2          display();
 805   2          set_await_number_table(0);
 806   2        }
 807   1      }
 808          
 809          void fun65(void) //F1_E4 个位闪烁
 810          {
 811   1        if (return_await_number_table() == 1)
 812   1        {
 813   2          Show_four_number(Two_Menu_F1_E4);
 814   2          set_await_number_table(2);
 815   2        }
 816   1        if (return_await_number_table() == 3)
 817   1        {
 818   2          buf_display[0][0] = 0;
 819   2          display();
 820   2          set_await_number_table(0);
 821   2        }
 822   1      }
 823          
 824          void fun66(void) //F2_E1 千位闪烁
 825          {
 826   1        if (return_await_number_table() == 1)
 827   1        {
 828   2          Show_four_number(Two_Menu_F2_E1);
 829   2          set_await_number_table(2);
 830   2        }
 831   1        if (return_await_number_table() == 3)
 832   1        {
 833   2          buf_display[0][3] = 0;
 834   2          display();
 835   2          set_await_number_table(0);
 836   2        }
 837   1      }
 838          
 839          void fun67(void) //F2_E1 百位闪烁
 840          {
 841   1        if (return_await_number_table() == 1)
 842   1        {
 843   2          Show_four_number(Two_Menu_F2_E1);
 844   2          set_await_number_table(2);
 845   2        }
 846   1        if (return_await_number_table() == 3)
 847   1        {
 848   2          buf_display[0][2] = 0;
 849   2          display();
 850   2          set_await_number_table(0);
 851   2        }
 852   1      }
 853          
 854          void fun68(void) //F2_E1 十位闪烁
 855          {
 856   1        if (return_await_number_table() == 1)
 857   1        {
 858   2          Show_four_number(Two_Menu_F2_E1);
 859   2          set_await_number_table(2);
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 15  

 860   2        }
 861   1        if (return_await_number_table() == 3)
 862   1        {
 863   2          buf_display[0][1] = 0;
 864   2          display();
 865   2          set_await_number_table(0);
 866   2        }
 867   1      }
 868          
 869          void fun69(void) //F2_E1 个位闪烁
 870          {
 871   1        if (return_await_number_table() == 1)
 872   1        {
 873   2          Show_four_number(Two_Menu_F2_E1);
 874   2          set_await_number_table(2);
 875   2        }
 876   1        if (return_await_number_table() == 3)
 877   1        {
 878   2          buf_display[0][0] = 0;
 879   2          display();
 880   2          set_await_number_table(0);
 881   2        }
 882   1      }
 883          
 884          void fun70(void) //F2_E2 千位闪烁
 885          {
 886   1        if (return_await_number_table() == 1)
 887   1        {
 888   2          Show_four_number(Two_Menu_F2_E2);
 889   2          set_await_number_table(2);
 890   2        }
 891   1        if (return_await_number_table() == 3)
 892   1        {
 893   2          buf_display[0][3] = 0;
 894   2          display();
 895   2          set_await_number_table(0);
 896   2        }
 897   1      }
 898          
 899          void fun71(void) //F2_E2 百位闪烁
 900          {
 901   1        if (return_await_number_table() == 1)
 902   1        {
 903   2          Show_four_number(Two_Menu_F2_E2);
 904   2          set_await_number_table(2);
 905   2        }
 906   1        if (return_await_number_table() == 3)
 907   1        {
 908   2          buf_display[0][2] = 0;
 909   2          display();
 910   2          set_await_number_table(0);
 911   2        }
 912   1      }
 913          
 914          void fun72(void) //F2_E2 十位闪烁
 915          {
 916   1        if (return_await_number_table() == 1)
 917   1        {
 918   2          Show_four_number(Two_Menu_F2_E2);
 919   2          set_await_number_table(2);
 920   2        }
 921   1        if (return_await_number_table() == 3)
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 16  

 922   1        {
 923   2          buf_display[0][1] = 0;
 924   2          display();
 925   2          set_await_number_table(0);
 926   2        }
 927   1      }
 928          
 929          void fun73(void) //F2_E2 个位闪烁
 930          {
 931   1        if (return_await_number_table() == 1)
 932   1        {
 933   2          Show_four_number(Two_Menu_F2_E2);
 934   2          set_await_number_table(2);
 935   2        }
 936   1        if (return_await_number_table() == 3)
 937   1        {
 938   2          buf_display[0][0] = 0;
 939   2          display();
 940   2          set_await_number_table(0);
 941   2        }
 942   1      }
 943          
 944          void fun74(void) //F2_E3 千位闪烁
 945          {
 946   1        if (return_await_number_table() == 1)
 947   1        {
 948   2          Show_four_number(Two_Menu_F2_E3);
 949   2          set_await_number_table(2);
 950   2        }
 951   1        if (return_await_number_table() == 3)
 952   1        {
 953   2          buf_display[0][3] = 0;
 954   2          display();
 955   2          set_await_number_table(0);
 956   2        }
 957   1      }
 958          
 959          void fun75(void) //F2_E3 百位闪烁
 960          {
 961   1        if (return_await_number_table() == 1)
 962   1        {
 963   2          Show_four_number(Two_Menu_F2_E3);
 964   2          set_await_number_table(2);
 965   2        }
 966   1        if (return_await_number_table() == 3)
 967   1        {
 968   2          buf_display[0][2] = 0;
 969   2          display();
 970   2          set_await_number_table(0);
 971   2        }
 972   1      }
 973          
 974          void fun76(void) //F2_E3 十位闪烁
 975          {
 976   1        if (return_await_number_table() == 1)
 977   1        {
 978   2          Show_four_number(Two_Menu_F2_E3);
 979   2          set_await_number_table(2);
 980   2        }
 981   1        if (return_await_number_table() == 3)
 982   1        {
 983   2          buf_display[0][1] = 0;
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 17  

 984   2          display();
 985   2          set_await_number_table(0);
 986   2        }
 987   1      }
 988          
 989          void fun77(void) //F2_E3 个位闪烁
 990          {
 991   1        if (return_await_number_table() == 1)
 992   1        {
 993   2          Show_four_number(Two_Menu_F2_E3);
 994   2          set_await_number_table(2);
 995   2        }
 996   1        if (return_await_number_table() == 3)
 997   1        {
 998   2          buf_display[0][0] = 0;
 999   2          display();
1000   2          set_await_number_table(0);
1001   2        }
1002   1      }
1003          
1004          void fun78(void) //F2_E4 千位闪烁
1005          {
1006   1        if (return_await_number_table() == 1)
1007   1        {
1008   2          Show_four_number(Two_Menu_F2_E4);
1009   2          set_await_number_table(2);
1010   2        }
1011   1        if (return_await_number_table() == 3)
1012   1        {
1013   2          buf_display[0][3] = 0;
1014   2          display();
1015   2          set_await_number_table(0);
1016   2        }
1017   1      }
1018          
1019          void fun79(void) //F2_E4 百位闪烁
1020          {
1021   1        if (return_await_number_table() == 1)
1022   1        {
1023   2          Show_four_number(Two_Menu_F2_E4);
1024   2          set_await_number_table(2);
1025   2        }
1026   1        if (return_await_number_table() == 3)
1027   1        {
1028   2          buf_display[0][2] = 0;
1029   2          display();
1030   2          set_await_number_table(0);
1031   2        }
1032   1      }
1033          
1034          void fun80(void) //F2_E4 十位闪烁
1035          {
1036   1        if (return_await_number_table() == 1)
1037   1        {
1038   2          Show_four_number(Two_Menu_F2_E4);
1039   2          set_await_number_table(2);
1040   2        }
1041   1        if (return_await_number_table() == 3)
1042   1        {
1043   2          buf_display[0][1] = 0;
1044   2          display();
1045   2          set_await_number_table(0);
C51 COMPILER V9.00   TM1629                                                                09/05/2015 16:36:18 PAGE 18  

1046   2        }
1047   1      }
1048          
1049          void fun81(void) //F2_E4 个位闪烁
1050          {
1051   1        if (return_await_number_table() == 1)
1052   1        {
1053   2          Show_four_number(Two_Menu_F2_E4);
1054   2          set_await_number_table(2);
1055   2        }
1056   1        if (return_await_number_table() == 3)
1057   1        {
1058   2          buf_display[0][0] = 0;
1059   2          display();
1060   2          set_await_number_table(0);
1061   2        }
1062   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2629    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    320       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
