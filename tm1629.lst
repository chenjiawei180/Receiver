C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TM1629
OBJECT MODULE PLACED IN tm1629.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\tm1629.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRINT(
                    -.\tm1629.lst) TABS(2) OBJECT(tm1629.obj)

line level    source

   1          #include "tm1629.h"
   2          #include "timer.h"
   3          #include "usart.h"
   4          #include "ds1302.h"
   5          #include "key.h"
   6          
   7          unsigned char const CODE[] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x3
             -9, 0x5E, 0x79, 0x71, 0x76, 0x38, 0x5c, 0x73, 0x3e };//0-9 abcdef 显示器码数组
   8          unsigned char const INIT_CODE[] = { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 };//逐段点亮数码管数组
   9          unsigned char const SHANGSHUO[] = { 0x40, 0x00 }; // 点亮数码管中间段以及灭
  10          unsigned char buf_display[6][8] = { 0 }; //3个TM1629显存数组
  11          unsigned char display_ram[240] = { 0 }; //程序运行时记录显示数据的内存 
  12          unsigned char await_time_table= 0 ;//用于记录待机显示横杠数码管次数 
  13          
  14          void writeDataTo1629(unsigned char p) //写数据给第一个TM1629
  15          {
  16   1        unsigned int i;
  17   1        TM1629_STB = 0;
  18   1        for (i = 0; i<8; i++)
  19   1        {
  20   2          TM1629_CLK = 0;
  21   2          if (p & 0x01)
  22   2            TM1629_DIO = 1;
  23   2          else
  24   2            TM1629_DIO = 0;
  25   2          _nop_();
  26   2          _nop_();
  27   2          _nop_();
  28   2          _nop_();
  29   2          TM1629_CLK = 1;
  30   2          p = p >> 1;
  31   2        }
  32   1        TM1629_CLK = 0;
  33   1        TM1629_DIO = 0;
  34   1      }
  35          
  36          void writeDataTo1629_2(unsigned char p) //写数据给第二个TM1629
  37          {
  38   1        unsigned int i;
  39   1        TM1629_STB2 = 0;
  40   1        for (i = 0; i<8; i++)
  41   1        {
  42   2          TM1629_CLK = 0;
  43   2          if (p & 0x01)
  44   2            TM1629_DIO = 1;
  45   2          else
  46   2            TM1629_DIO = 0;
  47   2          _nop_();
  48   2          _nop_();
  49   2          _nop_();
  50   2          _nop_();
  51   2          TM1629_CLK = 1;
  52   2          p = p >> 1;
  53   2        }
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 2   

  54   1        TM1629_CLK = 0;
  55   1        TM1629_DIO = 0;
  56   1      }
  57          
  58          void writeDataTo1629_3(unsigned char p) //写数据给第三个TM1629
  59          {
  60   1        unsigned int i;
  61   1        TM1629_STB3 = 0;
  62   1        for (i = 0; i<8; i++)
  63   1        {
  64   2          TM1629_CLK = 0;
  65   2          if (p & 0x01)
  66   2            TM1629_DIO = 1;
  67   2          else
  68   2            TM1629_DIO = 0;
  69   2          _nop_();
  70   2          _nop_();
  71   2          _nop_();
  72   2          _nop_();
  73   2          TM1629_CLK = 1;
  74   2          p = p >> 1;
  75   2        }
  76   1        TM1629_CLK = 0;
  77   1        TM1629_DIO = 0;
  78   1      }
  79          
  80          void send_command(unsigned char word) //写命令给第一个TM1629
  81          {
  82   1        TM1629_STB = 1;
  83   1        nop;
  84   1        TM1629_STB = 0;
  85   1        writeDataTo1629(word);
  86   1      }
  87          
  88          void send_command_2(unsigned char word) //写命令给第二个TM1629
  89          {
  90   1        TM1629_STB2 = 1;
  91   1        nop;
  92   1        TM1629_STB2 = 0;
  93   1        writeDataTo1629_2(word);
  94   1      }
  95          
  96          void send_command_3(unsigned char word) //写命令给第三个TM1629
  97          {
  98   1        TM1629_STB3 = 1;
  99   1        nop;
 100   1        TM1629_STB3 = 0;
 101   1        writeDataTo1629_3(word);
 102   1      }
 103          
 104          void display(void) //3个TM1629显示函数
 105          {
 106   1        unsigned char i;
 107   1        send_command(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 108   1        send_command(0xc0); //设置显示地址命令：从00H开始
 109   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 110   1        {
 111   2          writeDataTo1629(buf_display[0][i]);
 112   2          writeDataTo1629(buf_display[1][i]);
 113   2        }
 114   1        send_command(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 115   1        TM1629_STB = 1;
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 3   

 116   1      
 117   1        send_command_2(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 118   1        send_command_2(0xc0); //设置显示地址命令：从00H开始
 119   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 120   1        {
 121   2          writeDataTo1629_2(buf_display[2][i]);
 122   2          writeDataTo1629_2(buf_display[3][i]);
 123   2        }
 124   1        send_command_2(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 125   1        TM1629_STB2 = 1;
 126   1      
 127   1        send_command_3(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 128   1        send_command_3(0xc0); //设置显示地址命令：从00H开始
 129   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 130   1        {
 131   2          writeDataTo1629_3(buf_display[4][i]);
 132   2          writeDataTo1629_3(buf_display[5][i]);
 133   2        }
 134   1        send_command_3(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 135   1        TM1629_STB3 = 1;
 136   1      }
 137          
 138          void tm1629_init(void) //TM1629开机初始化函数
 139          {
 140   1        unsigned char i, j, k;    //k控制显示的具体数字，i和j控制buf_display的刷新
 141   1        for (k = 0; k<8; k++)
 142   1        {
 143   2          for (i = 0; i<6; i++)
 144   2          {
 145   3            for (j = 0; j<8; j++)
 146   3            {
 147   4              buf_display[i][j] = INIT_CODE[k];
 148   4            }
 149   3          }
 150   2          display();
 151   2          Tm1629_delay(30);
 152   2        }
 153   1      }
 154          
 155          
 156          void Tm1629_delay(unsigned char k) //延时函数
 157          {
 158   1        unsigned char i, j;
 159   1        for (; k>0; k--)
 160   1        {
 161   2          for (i = 255; i>0; i--)
 162   2          {
 163   3            for (j = 255; j>0; j--)
 164   3            {
 165   4              ;
 166   4      
 167   4            }
 168   3          }
 169   2        }
 170   1      }
 171          
 172          void tm1629_clear(void)//全部归零
 173          {
 174   1        unsigned char i, j;
 175   1        for (i = 0; i<6; i++)
 176   1        {
 177   2          for (j = 0; j<8; j++)
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 4   

 178   2          {
 179   3            buf_display[i][j] = 0x00;
 180   3          }
 181   2        }
 182   1      }
 183          
 184          void tm1629_await(void)
 185          {
 186   1        unsigned char i;  //k控制显示的具体数字，i和j控制buf_display的刷新
 187   1        unsigned char await_number_table_temp = 0;
 188   1        await_number_table_temp = return_await_number_table();
 189   1        if (await_number_table_temp == 1)
 190   1        {
 191   2          //GD5800_select_chapter(0x0008) ;
 192   2          tm1629_clear();
 193   2          i = await_time_table & 0x03;
 194   2          buf_display[0][i] = 0x40;
 195   2          display();
 196   2          set_await_number_table(0);
 197   2          await_time_table++;
 198   2          if (await_time_table == 4)
 199   2            await_time_table = 0;
 200   2        }
 201   1      }
 202          
 203          void Display_time(void)
 204          {
 205   1        tm1629_clear();
 206   1        Ds1302_Read_Time(); 
 207   1        buf_display[1][7] = CODE[2];        //年
 208   1        buf_display[1][6] = CODE[0];
 209   1        buf_display[1][5] = CODE[time_buf1[1] / 10];
 210   1        buf_display[1][4] = CODE[time_buf1[1] % 10];
 211   1      
 212   1        buf_display[1][3] = 0x40;          // -
 213   1        
 214   1        buf_display[1][2] = CODE[time_buf1[2] / 10]; //月
 215   1        buf_display[1][1] = CODE[time_buf1[2] % 10];
 216   1      
 217   1        buf_display[1][0] = 0x40;          // -
 218   1      
 219   1        buf_display[0][7] = CODE[time_buf1[3] / 10];
 220   1        buf_display[0][6] = CODE[time_buf1[3] % 10];//日
 221   1      
 222   1        buf_display[0][5] = CODE[time_buf1[7]];   //星期
 223   1      
 224   1        buf_display[0][3] = CODE[time_buf1[4] / 10]; //小时
 225   1        buf_display[0][2] = CODE[time_buf1[4] % 10];
 226   1        buf_display[0][1] = CODE[time_buf1[5] / 10]; //小时
 227   1        buf_display[0][0] = CODE[time_buf1[5] % 10];
 228   1      
 229   1        display();
 230   1      
 231   1      }
 232          
 233          void tm1629_f(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 234          {
 235   1        tm1629_clear();
 236   1        buf_display[0][1] = CODE[0x0f];
 237   1        buf_display[0][0] = CODE[f_number];
 238   1        display();
 239   1      }
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 5   

 240          
 241          void tm1629_E(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 242          {
 243   1        tm1629_clear();
 244   1        buf_display[0][1] = CODE[0x0E];
 245   1        buf_display[0][0] = CODE[f_number];
 246   1        display();
 247   1      }
 248          
 249          void Show_one_number(unsigned char f_number) //显示一个数字
 250          {
 251   1        tm1629_clear();
 252   1        //buf_display[0][1] = CODE[0x0E];
 253   1        buf_display[0][0] = CODE[f_number];
 254   1        display();
 255   1      }
 256          
 257          void Show_two_number(unsigned char f_number) //显示两个数字
 258          {
 259   1        tm1629_clear();
 260   1        buf_display[0][1] = CODE[f_number / 10];
 261   1        buf_display[0][0] = CODE[f_number % 10];
 262   1        display();
 263   1      }
 264          
 265          void Show_four_number(unsigned char* temp)
 266          {
 267   1        tm1629_clear();
 268   1        buf_display[0][3] = CODE[*(temp)];
 269   1        buf_display[0][2] = CODE[*(temp+1)];
 270   1        buf_display[0][1] = CODE[*(temp+2)];
 271   1        buf_display[0][0] = CODE[*(temp+3)];
 272   1        display();
 273   1      }
 274          
 275          void fun0(void) //待机显示函数
 276          {
 277   1        //tm1629_await();
 278   1        Display_time();
 279   1      }
 280          
 281          void fun1(void) //一级菜单F0
 282          {
 283   1        tm1629_f(0x00);
 284   1      }
 285          
 286          void fun2(void) //一级菜单F1
 287          {
 288   1        tm1629_f(0x01);
 289   1      }
 290          
 291          void fun3(void) //一级菜单F2
 292          {
 293   1        tm1629_f(0x02);
 294   1      }
 295          
 296          void fun4(void) //一级菜单F3
 297          {
 298   1        tm1629_f(0x03);
 299   1      }
 300          
 301          void fun5(void) //一级菜单F4
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 6   

 302          {
 303   1        tm1629_f(0x04);
 304   1      }
 305          
 306          void fun6(void) //一级菜单F5
 307          {
 308   1        tm1629_f(0x05);
 309   1      }
 310          
 311          void fun7(void) //一级菜单F6
 312          {
 313   1        tm1629_f(0x06);
 314   1      }
 315          
 316          void fun8(void) //一级菜单F7
 317          {
 318   1        tm1629_f(0x07);
 319   1      }
 320          
 321          void fun9(void) //一级菜单F8
 322          {
 323   1        tm1629_f(0x08);
 324   1      }
 325          
 326          void fun10(void) //一级菜单F9
 327          {
 328   1        tm1629_f(0x09);
 329   1      }
 330          
 331          void fun11(void) //一级菜单FA
 332          {
 333   1        tm1629_f(0x0a);
 334   1      }
 335          
 336          void fun12(void) //一级菜单Fb
 337          {
 338   1        tm1629_f(0x0b);
 339   1      }
 340          
 341          void fun13(void) //一级菜单FC
 342          {
 343   1        tm1629_f(0x0c);
 344   1      }
 345          
 346          void fun14(void) //一级菜单Fd
 347          {
 348   1        tm1629_f(0x0d);
 349   1      }
 350          
 351          void fun15(void) //设置年份
 352          {
 353   1        if (return_await_number_table() == 1)
 354   1        {
 355   2          Display_time();
 356   2          set_await_number_table(2);
 357   2        }
 358   1        if (return_await_number_table() == 3)
 359   1        {
 360   2          buf_display[1][7] = 0;
 361   2          buf_display[1][6] = 0;
 362   2          buf_display[1][5] = 0;
 363   2          buf_display[1][4] = 0;
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 7   

 364   2          display();
 365   2          set_await_number_table(0);
 366   2        }
 367   1        Ds1302_Write_Time();
 368   1      }
 369          
 370          void fun16(void) //设置月份
 371          {
 372   1        if (return_await_number_table() == 1)
 373   1        {
 374   2          Display_time();
 375   2          set_await_number_table(2);
 376   2        }
 377   1        if (return_await_number_table() == 3)
 378   1        {
 379   2          buf_display[1][2] = 0;
 380   2          buf_display[1][1] = 0;
 381   2          display();
 382   2          set_await_number_table(0);
 383   2        }
 384   1        Ds1302_Write_Time();
 385   1      }
 386          
 387          void fun17(void) //设置日期
 388          {
 389   1        if (return_await_number_table() == 1)
 390   1        {
 391   2          Display_time();
 392   2          set_await_number_table(2);
 393   2        }
 394   1        if (return_await_number_table() == 3)
 395   1        {
 396   2          buf_display[0][7] = 0;
 397   2          buf_display[0][6] = 0;
 398   2          display();
 399   2          set_await_number_table(0);
 400   2        }
 401   1        Ds1302_Write_Time();
 402   1      }
 403          
 404          void fun18(void) //设置星期
 405          {
 406   1        if (return_await_number_table() == 1)
 407   1        {
 408   2          Display_time();
 409   2          set_await_number_table(2);
 410   2        }
 411   1        if (return_await_number_table() == 3)
 412   1        {
 413   2          buf_display[0][5] = 0;
 414   2          display();
 415   2          set_await_number_table(0);
 416   2        }
 417   1        Ds1302_Write_Time();
 418   1      }
 419          
 420          void fun19(void) //设置小时
 421          {
 422   1        if (return_await_number_table() == 1)
 423   1        {
 424   2          Display_time();
 425   2          set_await_number_table(2);
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 8   

 426   2        }
 427   1        if (return_await_number_table() == 3)
 428   1        {
 429   2          buf_display[0][3] = 0;
 430   2          buf_display[0][2] = 0;
 431   2          display();
 432   2          set_await_number_table(0);
 433   2        }
 434   1        Ds1302_Write_Time();
 435   1      }
 436          
 437          void fun20(void) //设置分钟
 438          {
 439   1        if (return_await_number_table() == 1)
 440   1        {
 441   2          Display_time();
 442   2          set_await_number_table(2);
 443   2        }
 444   1        if (return_await_number_table() == 3)
 445   1        {
 446   2          buf_display[0][1] = 0;
 447   2          buf_display[0][0] = 0;
 448   2          display();
 449   2          set_await_number_table(0);
 450   2        }
 451   1        Ds1302_Write_Time();
 452   1      }
 453          
 454          void fun21(void) //二级菜单F1-E1
 455          {
 456   1        tm1629_E(0x01);
 457   1      }
 458          
 459          void fun22(void) //二级菜单F1-E2
 460          {
 461   1        tm1629_E(0x02);
 462   1      }
 463          
 464          void fun23(void) //二级菜单F1-E3
 465          {
 466   1        tm1629_E(0x03);
 467   1      }
 468          
 469          void fun24(void) //二级菜单F1-E4
 470          {
 471   1        tm1629_E(0x04);
 472   1      }
 473          
 474          void fun25(void) //二级菜单F2-E1
 475          {
 476   1        tm1629_E(0x01);
 477   1      }
 478          
 479          void fun26(void) //二级菜单F2-E2
 480          {
 481   1        tm1629_E(0x02);
 482   1      }
 483          
 484          void fun27(void) //二级菜单F2-E3
 485          {
 486   1        tm1629_E(0x03);
 487   1      }
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 9   

 488          
 489          void fun28(void) //二级菜单F2-E4
 490          {
 491   1        tm1629_E(0x04);
 492   1      }
 493          
 494          void fun29(void) //二级菜单F3-E1
 495          {
 496   1        tm1629_E(0x01);
 497   1      }
 498          
 499          void fun30(void) //二级菜单F3-E2
 500          {
 501   1        tm1629_E(0x02);
 502   1      }
 503          
 504          void fun31(void) //二级菜单F4
 505          {
 506   1        tm1629_f(0x0f);
 507   1      }
 508          
 509          void fun32(void) //二级菜单F5
 510          {
 511   1        tm1629_f(0x0f);
 512   1      }
 513          
 514          void fun33(void) //二级菜单F6-E1
 515          {
 516   1        tm1629_E(0x01);
 517   1      }
 518          
 519          void fun34(void) //二级菜单F6-E2
 520          {
 521   1        tm1629_E(0x02);
 522   1      }
 523          
 524          void fun35(void) //二级菜单F6-E3
 525          {
 526   1        tm1629_E(0x03);
 527   1      }
 528          
 529          void fun36(void) //二级菜单F6-E4
 530          {
 531   1        tm1629_E(0x04);
 532   1      }
 533          
 534          void fun37(void) //二级菜单F6-E5
 535          {
 536   1        tm1629_E(0x05);
 537   1      }
 538          
 539          void fun38(void) //二级菜单F7-E1
 540          {
 541   1        tm1629_E(0x01);
 542   1      }
 543          
 544          void fun39(void) //二级菜单F7-E2
 545          {
 546   1        tm1629_E(0x02);
 547   1      }
 548          
 549          void fun40(void) //二级菜单F7-E3
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 10  

 550          {
 551   1        tm1629_E(0x03);
 552   1      }
 553          
 554          void fun41(void) //二级菜单F7-E4
 555          {
 556   1        tm1629_E(0x04);
 557   1      }
 558          
 559          void fun42(void) //二级菜单F8-E1
 560          {
 561   1        tm1629_E(0x01);
 562   1      }
 563          
 564          void fun43(void) //二级菜单F8-E2
 565          {
 566   1        tm1629_E(0x02);
 567   1      }
 568          
 569          void fun44(void) //二级菜单F9-E1
 570          {
 571   1        tm1629_E(0x01);
 572   1      }
 573          
 574          void fun45(void) //二级菜单F9-E2
 575          {
 576   1        tm1629_E(0x02);
 577   1      }
 578          
 579          void fun46(void) //二级菜单FA
 580          {
 581   1        tm1629_f(0x0f);
 582   1      }
 583          
 584          
 585          void fun47(void) //二级菜单Fb
 586          {
 587   1        tm1629_f(0x0f);
 588   1      }
 589          
 590          void fun48(void) //二级菜单FC
 591          {
 592   1        tm1629_f(0x0f);
 593   1      }
 594          
 595          void fun49(void) //二级菜单Fd
 596          {
 597   1        tm1629_f(0x0f);
 598   1      }
 599          
 600          void fun50(void) //F1_E1 千位闪烁
 601          {
 602   1        if (return_await_number_table() == 1)
 603   1        {
 604   2          Show_four_number(Two_Menu_F1_E1);
 605   2          set_await_number_table(2);
 606   2        }
 607   1        if (return_await_number_table() == 3)
 608   1        {
 609   2          buf_display[0][3] = 0;
 610   2          display();
 611   2          set_await_number_table(0);
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 11  

 612   2        }
 613   1      }
 614          
 615          void fun51(void) //F1_E1 百位闪烁
 616          {
 617   1        if (return_await_number_table() == 1)
 618   1        {
 619   2          Show_four_number(Two_Menu_F1_E1);
 620   2          set_await_number_table(2);
 621   2        }
 622   1        if (return_await_number_table() == 3)
 623   1        {
 624   2          buf_display[0][2] = 0;
 625   2          display();
 626   2          set_await_number_table(0);
 627   2        }
 628   1      }
 629          
 630          void fun52(void)  //F1_E1 十位闪烁
 631          {
 632   1        if (return_await_number_table() == 1)
 633   1        {
 634   2          Show_four_number(Two_Menu_F1_E1);
 635   2          set_await_number_table(2);
 636   2        }
 637   1        if (return_await_number_table() == 3)
 638   1        {
 639   2          buf_display[0][1] = 0;
 640   2          display();
 641   2          set_await_number_table(0);
 642   2        }
 643   1      }
 644          
 645          void fun53(void) //F1_E1 个位闪烁
 646          {
 647   1        if (return_await_number_table() == 1)
 648   1        {
 649   2          Show_four_number(Two_Menu_F1_E1);
 650   2          set_await_number_table(2);
 651   2        }
 652   1        if (return_await_number_table() == 3)
 653   1        {
 654   2          buf_display[0][0] = 0;
 655   2          display();
 656   2          set_await_number_table(0);
 657   2        }
 658   1      }
 659          
 660          void fun54(void) //F1_E2 千位闪烁
 661          {
 662   1        if (return_await_number_table() == 1)
 663   1        {
 664   2          Show_four_number(Two_Menu_F1_E2);
 665   2          set_await_number_table(2);
 666   2        }
 667   1        if (return_await_number_table() == 3)
 668   1        {
 669   2          buf_display[0][3] = 0;
 670   2          display();
 671   2          set_await_number_table(0);
 672   2        }
 673   1      }
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 12  

 674          
 675          void fun55(void) //F1_E2 百位闪烁
 676          {
 677   1        if (return_await_number_table() == 1)
 678   1        {
 679   2          Show_four_number(Two_Menu_F1_E2);
 680   2          set_await_number_table(2);
 681   2        }
 682   1        if (return_await_number_table() == 3)
 683   1        {
 684   2          buf_display[0][2] = 0;
 685   2          display();
 686   2          set_await_number_table(0);
 687   2        }
 688   1      }
 689          
 690          void fun56(void) //F1_E2 十位闪烁
 691          {
 692   1        if (return_await_number_table() == 1)
 693   1        {
 694   2          Show_four_number(Two_Menu_F1_E2);
 695   2          set_await_number_table(2);
 696   2        }
 697   1        if (return_await_number_table() == 3)
 698   1        {
 699   2          buf_display[0][1] = 0;
 700   2          display();
 701   2          set_await_number_table(0);
 702   2        }
 703   1      }
 704          
 705          void fun57(void) //F1_E2 个位闪烁
 706          {
 707   1        if (return_await_number_table() == 1)
 708   1        {
 709   2          Show_four_number(Two_Menu_F1_E2);
 710   2          set_await_number_table(2);
 711   2        }
 712   1        if (return_await_number_table() == 3)
 713   1        {
 714   2          buf_display[0][0] = 0;
 715   2          display();
 716   2          set_await_number_table(0);
 717   2        }
 718   1      }
 719          
 720          void fun58(void) //F1_E3 千位闪烁
 721          {
 722   1        if (return_await_number_table() == 1)
 723   1        {
 724   2          Show_four_number(Two_Menu_F1_E3);
 725   2          set_await_number_table(2);
 726   2        }
 727   1        if (return_await_number_table() == 3)
 728   1        {
 729   2          buf_display[0][3] = 0;
 730   2          display();
 731   2          set_await_number_table(0);
 732   2        }
 733   1      }
 734          
 735          void fun59(void) //F1_E3 百位闪烁
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 13  

 736          {
 737   1        if (return_await_number_table() == 1)
 738   1        {
 739   2          Show_four_number(Two_Menu_F1_E3);
 740   2          set_await_number_table(2);
 741   2        }
 742   1        if (return_await_number_table() == 3)
 743   1        {
 744   2          buf_display[0][2] = 0;
 745   2          display();
 746   2          set_await_number_table(0);
 747   2        }
 748   1      }
 749          
 750          void fun60(void) //F1_E3 十位闪烁
 751          {
 752   1        if (return_await_number_table() == 1)
 753   1        {
 754   2          Show_four_number(Two_Menu_F1_E3);
 755   2          set_await_number_table(2);
 756   2        }
 757   1        if (return_await_number_table() == 3)
 758   1        {
 759   2          buf_display[0][1] = 0;
 760   2          display();
 761   2          set_await_number_table(0);
 762   2        }
 763   1      }
 764          
 765          void fun61(void) //F1_E3 个位闪烁
 766          {
 767   1        if (return_await_number_table() == 1)
 768   1        {
 769   2          Show_four_number(Two_Menu_F1_E3);
 770   2          set_await_number_table(2);
 771   2        }
 772   1        if (return_await_number_table() == 3)
 773   1        {
 774   2          buf_display[0][0] = 0;
 775   2          display();
 776   2          set_await_number_table(0);
 777   2        }
 778   1      }
 779          
 780          void fun62(void) //F1_E4 千位闪烁
 781          {
 782   1        if (return_await_number_table() == 1)
 783   1        {
 784   2          Show_four_number(Two_Menu_F1_E4);
 785   2          set_await_number_table(2);
 786   2        }
 787   1        if (return_await_number_table() == 3)
 788   1        {
 789   2          buf_display[0][3] = 0;
 790   2          display();
 791   2          set_await_number_table(0);
 792   2        }
 793   1      }
 794          
 795          void fun63(void) //F1_E4 百位闪烁
 796          {
 797   1        if (return_await_number_table() == 1)
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 14  

 798   1        {
 799   2          Show_four_number(Two_Menu_F1_E4);
 800   2          set_await_number_table(2);
 801   2        }
 802   1        if (return_await_number_table() == 3)
 803   1        {
 804   2          buf_display[0][2] = 0;
 805   2          display();
 806   2          set_await_number_table(0);
 807   2        }
 808   1      }
 809          
 810          void fun64(void) //F1_E4 十位闪烁
 811          {
 812   1        if (return_await_number_table() == 1)
 813   1        {
 814   2          Show_four_number(Two_Menu_F1_E4);
 815   2          set_await_number_table(2);
 816   2        }
 817   1        if (return_await_number_table() == 3)
 818   1        {
 819   2          buf_display[0][1] = 0;
 820   2          display();
 821   2          set_await_number_table(0);
 822   2        }
 823   1      }
 824          
 825          void fun65(void) //F1_E4 个位闪烁
 826          {
 827   1        if (return_await_number_table() == 1)
 828   1        {
 829   2          Show_four_number(Two_Menu_F1_E4);
 830   2          set_await_number_table(2);
 831   2        }
 832   1        if (return_await_number_table() == 3)
 833   1        {
 834   2          buf_display[0][0] = 0;
 835   2          display();
 836   2          set_await_number_table(0);
 837   2        }
 838   1      }
 839          
 840          void fun66(void) //F2_E1 千位闪烁
 841          {
 842   1        if (return_await_number_table() == 1)
 843   1        {
 844   2          Show_four_number(Two_Menu_F2_E1);
 845   2          set_await_number_table(2);
 846   2        }
 847   1        if (return_await_number_table() == 3)
 848   1        {
 849   2          buf_display[0][3] = 0;
 850   2          display();
 851   2          set_await_number_table(0);
 852   2        }
 853   1      }
 854          
 855          void fun67(void) //F2_E1 百位闪烁
 856          {
 857   1        if (return_await_number_table() == 1)
 858   1        {
 859   2          Show_four_number(Two_Menu_F2_E1);
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 15  

 860   2          set_await_number_table(2);
 861   2        }
 862   1        if (return_await_number_table() == 3)
 863   1        {
 864   2          buf_display[0][2] = 0;
 865   2          display();
 866   2          set_await_number_table(0);
 867   2        }
 868   1      }
 869          
 870          void fun68(void) //F2_E1 十位闪烁
 871          {
 872   1        if (return_await_number_table() == 1)
 873   1        {
 874   2          Show_four_number(Two_Menu_F2_E1);
 875   2          set_await_number_table(2);
 876   2        }
 877   1        if (return_await_number_table() == 3)
 878   1        {
 879   2          buf_display[0][1] = 0;
 880   2          display();
 881   2          set_await_number_table(0);
 882   2        }
 883   1      }
 884          
 885          void fun69(void) //F2_E1 个位闪烁
 886          {
 887   1        if (return_await_number_table() == 1)
 888   1        {
 889   2          Show_four_number(Two_Menu_F2_E1);
 890   2          set_await_number_table(2);
 891   2        }
 892   1        if (return_await_number_table() == 3)
 893   1        {
 894   2          buf_display[0][0] = 0;
 895   2          display();
 896   2          set_await_number_table(0);
 897   2        }
 898   1      }
 899          
 900          void fun70(void) //F2_E2 千位闪烁
 901          {
 902   1        if (return_await_number_table() == 1)
 903   1        {
 904   2          Show_four_number(Two_Menu_F2_E2);
 905   2          set_await_number_table(2);
 906   2        }
 907   1        if (return_await_number_table() == 3)
 908   1        {
 909   2          buf_display[0][3] = 0;
 910   2          display();
 911   2          set_await_number_table(0);
 912   2        }
 913   1      }
 914          
 915          void fun71(void) //F2_E2 百位闪烁
 916          {
 917   1        if (return_await_number_table() == 1)
 918   1        {
 919   2          Show_four_number(Two_Menu_F2_E2);
 920   2          set_await_number_table(2);
 921   2        }
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 16  

 922   1        if (return_await_number_table() == 3)
 923   1        {
 924   2          buf_display[0][2] = 0;
 925   2          display();
 926   2          set_await_number_table(0);
 927   2        }
 928   1      }
 929          
 930          void fun72(void) //F2_E2 十位闪烁
 931          {
 932   1        if (return_await_number_table() == 1)
 933   1        {
 934   2          Show_four_number(Two_Menu_F2_E2);
 935   2          set_await_number_table(2);
 936   2        }
 937   1        if (return_await_number_table() == 3)
 938   1        {
 939   2          buf_display[0][1] = 0;
 940   2          display();
 941   2          set_await_number_table(0);
 942   2        }
 943   1      }
 944          
 945          void fun73(void) //F2_E2 个位闪烁
 946          {
 947   1        if (return_await_number_table() == 1)
 948   1        {
 949   2          Show_four_number(Two_Menu_F2_E2);
 950   2          set_await_number_table(2);
 951   2        }
 952   1        if (return_await_number_table() == 3)
 953   1        {
 954   2          buf_display[0][0] = 0;
 955   2          display();
 956   2          set_await_number_table(0);
 957   2        }
 958   1      }
 959          
 960          void fun74(void) //F2_E3 千位闪烁
 961          {
 962   1        if (return_await_number_table() == 1)
 963   1        {
 964   2          Show_four_number(Two_Menu_F2_E3);
 965   2          set_await_number_table(2);
 966   2        }
 967   1        if (return_await_number_table() == 3)
 968   1        {
 969   2          buf_display[0][3] = 0;
 970   2          display();
 971   2          set_await_number_table(0);
 972   2        }
 973   1      }
 974          
 975          void fun75(void) //F2_E3 百位闪烁
 976          {
 977   1        if (return_await_number_table() == 1)
 978   1        {
 979   2          Show_four_number(Two_Menu_F2_E3);
 980   2          set_await_number_table(2);
 981   2        }
 982   1        if (return_await_number_table() == 3)
 983   1        {
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 17  

 984   2          buf_display[0][2] = 0;
 985   2          display();
 986   2          set_await_number_table(0);
 987   2        }
 988   1      }
 989          
 990          void fun76(void) //F2_E3 十位闪烁
 991          {
 992   1        if (return_await_number_table() == 1)
 993   1        {
 994   2          Show_four_number(Two_Menu_F2_E3);
 995   2          set_await_number_table(2);
 996   2        }
 997   1        if (return_await_number_table() == 3)
 998   1        {
 999   2          buf_display[0][1] = 0;
1000   2          display();
1001   2          set_await_number_table(0);
1002   2        }
1003   1      }
1004          
1005          void fun77(void) //F2_E3 个位闪烁
1006          {
1007   1        if (return_await_number_table() == 1)
1008   1        {
1009   2          Show_four_number(Two_Menu_F2_E3);
1010   2          set_await_number_table(2);
1011   2        }
1012   1        if (return_await_number_table() == 3)
1013   1        {
1014   2          buf_display[0][0] = 0;
1015   2          display();
1016   2          set_await_number_table(0);
1017   2        }
1018   1      }
1019          
1020          void fun78(void) //F2_E4 千位闪烁
1021          {
1022   1        if (return_await_number_table() == 1)
1023   1        {
1024   2          Show_four_number(Two_Menu_F2_E4);
1025   2          set_await_number_table(2);
1026   2        }
1027   1        if (return_await_number_table() == 3)
1028   1        {
1029   2          buf_display[0][3] = 0;
1030   2          display();
1031   2          set_await_number_table(0);
1032   2        }
1033   1      }
1034          
1035          void fun79(void) //F2_E4 百位闪烁
1036          {
1037   1        if (return_await_number_table() == 1)
1038   1        {
1039   2          Show_four_number(Two_Menu_F2_E4);
1040   2          set_await_number_table(2);
1041   2        }
1042   1        if (return_await_number_table() == 3)
1043   1        {
1044   2          buf_display[0][2] = 0;
1045   2          display();
C51 COMPILER V9.00   TM1629                                                                09/09/2015 19:16:59 PAGE 18  

1046   2          set_await_number_table(0);
1047   2        }
1048   1      }
1049          
1050          void fun80(void) //F2_E4 十位闪烁
1051          {
1052   1        if (return_await_number_table() == 1)
1053   1        {
1054   2          Show_four_number(Two_Menu_F2_E4);
1055   2          set_await_number_table(2);
1056   2        }
1057   1        if (return_await_number_table() == 3)
1058   1        {
1059   2          buf_display[0][1] = 0;
1060   2          display();
1061   2          set_await_number_table(0);
1062   2        }
1063   1      }
1064          
1065          void fun81(void) //F2_E4 个位闪烁
1066          {
1067   1        if (return_await_number_table() == 1)
1068   1        {
1069   2          Show_four_number(Two_Menu_F2_E4);
1070   2          set_await_number_table(2);
1071   2        }
1072   1        if (return_await_number_table() == 3)
1073   1        {
1074   2          buf_display[0][0] = 0;
1075   2          display();
1076   2          set_await_number_table(0);
1077   2        }
1078   1      }
1079          
1080          void fun82(void) //显示即时显示 还是循环显示
1081          {
1082   1        unsigned char temp=0;
1083   1        temp = return_Two_Menu_F3_E1();
1084   1        Show_one_number(temp);
1085   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2708    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    320       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
