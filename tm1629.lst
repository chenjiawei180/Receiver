C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TM1629
OBJECT MODULE PLACED IN tm1629.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\tm1629.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRINT(
                    -.\tm1629.lst) TABS(2) OBJECT(tm1629.obj)

line level    source

   1          #include "tm1629.h"
   2          #include "timer.h"
   3          #include "usart.h"
   4          #include "ds1302.h"
   5          #include "key.h"
   6          
   7          unsigned char const CODE[] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x3
             -9, 0x5E, 0x79, 0x71, 0x76, 0x38, 0x5c, 0x73, 0x3e };//0-9 abcdef 显示器码数组
   8          unsigned char const INIT_CODE[] = { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 };//逐段点亮数码管数组
   9          unsigned char const SHANGSHUO[] = { 0x40, 0x00 }; // 点亮数码管中间段以及灭
  10          unsigned char buf_display[6][8] = { 0 }; //3个TM1629显存数组
  11          unsigned char display_ram[240] = { 0 }; //程序运行时记录显示数据的内存 
  12          unsigned char await_time_table= 0 ;//用于记录待机显示横杠数码管次数 
  13          
  14          void writeDataTo1629(unsigned char p) //写数据给第一个TM1629
  15          {
  16   1        unsigned int i;
  17   1        TM1629_STB = 0;
  18   1        for (i = 0; i<8; i++)
  19   1        {
  20   2          TM1629_CLK = 0;
  21   2          if (p & 0x01)
  22   2            TM1629_DIO = 1;
  23   2          else
  24   2            TM1629_DIO = 0;
  25   2          _nop_();
  26   2          _nop_();
  27   2          _nop_();
  28   2          _nop_();
  29   2          TM1629_CLK = 1;
  30   2          p = p >> 1;
  31   2        }
  32   1        TM1629_CLK = 0;
  33   1        TM1629_DIO = 0;
  34   1      }
  35          
  36          void writeDataTo1629_2(unsigned char p) //写数据给第二个TM1629
  37          {
  38   1        unsigned int i;
  39   1        TM1629_STB2 = 0;
  40   1        for (i = 0; i<8; i++)
  41   1        {
  42   2          TM1629_CLK = 0;
  43   2          if (p & 0x01)
  44   2            TM1629_DIO = 1;
  45   2          else
  46   2            TM1629_DIO = 0;
  47   2          _nop_();
  48   2          _nop_();
  49   2          _nop_();
  50   2          _nop_();
  51   2          TM1629_CLK = 1;
  52   2          p = p >> 1;
  53   2        }
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 2   

  54   1        TM1629_CLK = 0;
  55   1        TM1629_DIO = 0;
  56   1      }
  57          
  58          void writeDataTo1629_3(unsigned char p) //写数据给第三个TM1629
  59          {
  60   1        unsigned int i;
  61   1        TM1629_STB3 = 0;
  62   1        for (i = 0; i<8; i++)
  63   1        {
  64   2          TM1629_CLK = 0;
  65   2          if (p & 0x01)
  66   2            TM1629_DIO = 1;
  67   2          else
  68   2            TM1629_DIO = 0;
  69   2          _nop_();
  70   2          _nop_();
  71   2          _nop_();
  72   2          _nop_();
  73   2          TM1629_CLK = 1;
  74   2          p = p >> 1;
  75   2        }
  76   1        TM1629_CLK = 0;
  77   1        TM1629_DIO = 0;
  78   1      }
  79          
  80          void send_command(unsigned char word) //写命令给第一个TM1629
  81          {
  82   1        TM1629_STB = 1;
  83   1        nop;
  84   1        TM1629_STB = 0;
  85   1        writeDataTo1629(word);
  86   1      }
  87          
  88          void send_command_2(unsigned char word) //写命令给第二个TM1629
  89          {
  90   1        TM1629_STB2 = 1;
  91   1        nop;
  92   1        TM1629_STB2 = 0;
  93   1        writeDataTo1629_2(word);
  94   1      }
  95          
  96          void send_command_3(unsigned char word) //写命令给第三个TM1629
  97          {
  98   1        TM1629_STB3 = 1;
  99   1        nop;
 100   1        TM1629_STB3 = 0;
 101   1        writeDataTo1629_3(word);
 102   1      }
 103          
 104          void display(void) //3个TM1629显示函数
 105          {
 106   1        unsigned char i;
 107   1        send_command(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 108   1        send_command(0xc0); //设置显示地址命令：从00H开始
 109   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 110   1        {
 111   2          writeDataTo1629(buf_display[0][i]);
 112   2          writeDataTo1629(buf_display[1][i]);
 113   2        }
 114   1        send_command(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 115   1        TM1629_STB = 1;
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 3   

 116   1      
 117   1        send_command_2(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 118   1        send_command_2(0xc0); //设置显示地址命令：从00H开始
 119   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 120   1        {
 121   2          writeDataTo1629_2(buf_display[2][i]);
 122   2          writeDataTo1629_2(buf_display[3][i]);
 123   2        }
 124   1        send_command_2(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 125   1        TM1629_STB2 = 1;
 126   1      
 127   1        send_command_3(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 128   1        send_command_3(0xc0); //设置显示地址命令：从00H开始
 129   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 130   1        {
 131   2          writeDataTo1629_3(buf_display[4][i]);
 132   2          writeDataTo1629_3(buf_display[5][i]);
 133   2        }
 134   1        send_command_3(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 135   1        TM1629_STB3 = 1;
 136   1      }
 137          
 138          void tm1629_init(void) //TM1629开机初始化函数
 139          {
 140   1        unsigned char i, j, k;    //k控制显示的具体数字，i和j控制buf_display的刷新
 141   1        for (k = 0; k<8; k++)
 142   1        {
 143   2          for (i = 0; i<6; i++)
 144   2          {
 145   3            for (j = 0; j<8; j++)
 146   3            {
 147   4              buf_display[i][j] = INIT_CODE[k];
 148   4            }
 149   3          }
 150   2          display();
 151   2          Tm1629_delay(30);
 152   2        }
 153   1      }
 154          
 155          
 156          void Tm1629_delay(unsigned char k) //延时函数
 157          {
 158   1        unsigned char i, j;
 159   1        for (; k>0; k--)
 160   1        {
 161   2          for (i = 255; i>0; i--)
 162   2          {
 163   3            for (j = 255; j>0; j--)
 164   3            {
 165   4              ;
 166   4      
 167   4            }
 168   3          }
 169   2        }
 170   1      }
 171          
 172          void tm1629_clear(void)//全部归零
 173          {
 174   1        unsigned char i, j;
 175   1        for (i = 0; i<6; i++)
 176   1        {
 177   2          for (j = 0; j<8; j++)
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 4   

 178   2          {
 179   3            buf_display[i][j] = 0x00;
 180   3          }
 181   2        }
 182   1      }
 183          
 184          void tm1629_await(void)
 185          {
 186   1        unsigned char i;  //k控制显示的具体数字，i和j控制buf_display的刷新
 187   1        unsigned char await_number_table_temp = 0;
 188   1        await_number_table_temp = return_await_number_table();
 189   1        if (await_number_table_temp == 1)
 190   1        {
 191   2          //GD5800_select_chapter(0x0008) ;
 192   2          tm1629_clear();
 193   2          i = await_time_table & 0x03;
 194   2          buf_display[0][i] = 0x40;
 195   2          display();
 196   2          set_await_number_table(0);
 197   2          await_time_table++;
 198   2          if (await_time_table == 4)
 199   2            await_time_table = 0;
 200   2        }
 201   1      }
 202          
 203          void Display_time(void)
 204          {
 205   1        tm1629_clear();
 206   1        Ds1302_Read_Time(); 
 207   1        buf_display[1][7] = CODE[2];        //年
 208   1        buf_display[1][6] = CODE[0];
 209   1        buf_display[1][5] = CODE[time_buf1[1] / 10];
 210   1        buf_display[1][4] = CODE[time_buf1[1] % 10];
 211   1      
 212   1        buf_display[1][3] = 0x40;          // -
 213   1        
 214   1        buf_display[1][2] = CODE[time_buf1[2] / 10]; //月
 215   1        buf_display[1][1] = CODE[time_buf1[2] % 10];
 216   1      
 217   1        buf_display[1][0] = 0x40;          // -
 218   1      
 219   1        buf_display[0][7] = CODE[time_buf1[3] / 10];
 220   1        buf_display[0][6] = CODE[time_buf1[3] % 10];//日
 221   1      
 222   1        buf_display[0][5] = CODE[time_buf1[7]];   //星期
 223   1      
 224   1        buf_display[0][3] = CODE[time_buf1[4] / 10]; //小时
 225   1        buf_display[0][2] = CODE[time_buf1[4] % 10];
 226   1        buf_display[0][1] = CODE[time_buf1[5] / 10]; //小时
 227   1        buf_display[0][0] = CODE[time_buf1[5] % 10];
 228   1      
 229   1        display();
 230   1      
 231   1      }
 232          
 233          void tm1629_f(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 234          {
 235   1        tm1629_clear();
 236   1        buf_display[0][1] = CODE[0x0f];
 237   1        buf_display[0][0] = CODE[f_number];
 238   1        display();
 239   1      }
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 5   

 240          
 241          void tm1629_E(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 242          {
 243   1        tm1629_clear();
 244   1        buf_display[0][1] = CODE[0x0E];
 245   1        buf_display[0][0] = CODE[f_number];
 246   1        display();
 247   1      }
 248          
 249          void Show_one_number(unsigned char f_number) //显示一个数字
 250          {
 251   1        tm1629_clear();
 252   1        //buf_display[0][1] = CODE[0x0E];
 253   1        buf_display[0][0] = CODE[f_number];
 254   1        display();
 255   1      }
 256          
 257          void Show_two_number(unsigned char f_number) //显示两个数字
 258          {
 259   1        tm1629_clear();
 260   1        buf_display[0][1] = CODE[f_number / 10];
 261   1        buf_display[0][0] = CODE[f_number % 10];
 262   1        display();
 263   1      }
 264          
 265          void Show_four_number(unsigned char* temp)
 266          {
 267   1        tm1629_clear();
 268   1        buf_display[0][3] = CODE[*(temp)];
 269   1        buf_display[0][2] = CODE[*(temp+1)];
 270   1        buf_display[0][1] = CODE[*(temp+2)];
 271   1        buf_display[0][0] = CODE[*(temp+3)];
 272   1        display();
 273   1      }
 274          
 275          void fun0(void) //待机显示函数
 276          {
 277   1        //tm1629_await();
 278   1        Display_time();
 279   1      }
 280          
 281          void fun1(void) //一级菜单F0
 282          {
 283   1        tm1629_f(0x00);
 284   1      }
 285          
 286          void fun2(void) //一级菜单F1
 287          {
 288   1        tm1629_f(0x01);
 289   1      }
 290          
 291          void fun3(void) //一级菜单F2
 292          {
 293   1        tm1629_f(0x02);
 294   1      }
 295          
 296          void fun4(void) //一级菜单F3
 297          {
 298   1        tm1629_f(0x03);
 299   1      }
 300          
 301          void fun5(void) //一级菜单F4
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 6   

 302          {
 303   1        tm1629_f(0x04);
 304   1      }
 305          
 306          void fun6(void) //一级菜单F5
 307          {
 308   1        tm1629_f(0x05);
 309   1      }
 310          
 311          void fun7(void) //一级菜单F6
 312          {
 313   1        tm1629_f(0x06);
 314   1      }
 315          
 316          void fun8(void) //一级菜单F7
 317          {
 318   1        tm1629_f(0x07);
 319   1      }
 320          
 321          void fun9(void) //一级菜单F8
 322          {
 323   1        tm1629_f(0x08);
 324   1      }
 325          
 326          void fun10(void) //一级菜单F9
 327          {
 328   1        tm1629_f(0x09);
 329   1      }
 330          
 331          void fun11(void) //一级菜单FA
 332          {
 333   1        tm1629_f(0x0a);
 334   1      }
 335          
 336          void fun12(void) //一级菜单Fb
 337          {
 338   1        tm1629_f(0x0b);
 339   1      }
 340          
 341          void fun13(void) //一级菜单FC
 342          {
 343   1        tm1629_f(0x0c);
 344   1      }
 345          
 346          void fun14(void) //一级菜单Fd
 347          {
 348   1        tm1629_f(0x0d);
 349   1      }
 350          
 351          void fun15(void) //设置年份
 352          {
 353   1        if (return_await_number_table() == 1)
 354   1        {
 355   2          Display_time();
 356   2          set_await_number_table(2);
 357   2        }
 358   1        if (return_await_number_table() == 3)
 359   1        {
 360   2          buf_display[1][7] = 0;
 361   2          buf_display[1][6] = 0;
 362   2          buf_display[1][5] = 0;
 363   2          buf_display[1][4] = 0;
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 7   

 364   2          display();
 365   2          set_await_number_table(0);
 366   2        }
 367   1        Ds1302_Write_Time();
 368   1      }
 369          
 370          void fun16(void) //设置月份
 371          {
 372   1        if (return_await_number_table() == 1)
 373   1        {
 374   2          Display_time();
 375   2          set_await_number_table(2);
 376   2        }
 377   1        if (return_await_number_table() == 3)
 378   1        {
 379   2          buf_display[1][2] = 0;
 380   2          buf_display[1][1] = 0;
 381   2          display();
 382   2          set_await_number_table(0);
 383   2        }
 384   1        Ds1302_Write_Time();
 385   1      }
 386          
 387          void fun17(void) //设置日期
 388          {
 389   1        if (return_await_number_table() == 1)
 390   1        {
 391   2          Display_time();
 392   2          set_await_number_table(2);
 393   2        }
 394   1        if (return_await_number_table() == 3)
 395   1        {
 396   2          buf_display[0][7] = 0;
 397   2          buf_display[0][6] = 0;
 398   2          display();
 399   2          set_await_number_table(0);
 400   2        }
 401   1        Ds1302_Write_Time();
 402   1      }
 403          
 404          void fun18(void) //设置星期
 405          {
 406   1        if (return_await_number_table() == 1)
 407   1        {
 408   2          Display_time();
 409   2          set_await_number_table(2);
 410   2        }
 411   1        if (return_await_number_table() == 3)
 412   1        {
 413   2          buf_display[0][5] = 0;
 414   2          display();
 415   2          set_await_number_table(0);
 416   2        }
 417   1        Ds1302_Write_Time();
 418   1      }
 419          
 420          void fun19(void) //设置小时
 421          {
 422   1        if (return_await_number_table() == 1)
 423   1        {
 424   2          Display_time();
 425   2          set_await_number_table(2);
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 8   

 426   2        }
 427   1        if (return_await_number_table() == 3)
 428   1        {
 429   2          buf_display[0][3] = 0;
 430   2          buf_display[0][2] = 0;
 431   2          display();
 432   2          set_await_number_table(0);
 433   2        }
 434   1        Ds1302_Write_Time();
 435   1      }
 436          
 437          void fun20(void) //设置分钟
 438          {
 439   1        if (return_await_number_table() == 1)
 440   1        {
 441   2          Display_time();
 442   2          set_await_number_table(2);
 443   2        }
 444   1        if (return_await_number_table() == 3)
 445   1        {
 446   2          buf_display[0][1] = 0;
 447   2          buf_display[0][0] = 0;
 448   2          display();
 449   2          set_await_number_table(0);
 450   2        }
 451   1        Ds1302_Write_Time();
 452   1      }
 453          
 454          void fun21(void) //二级菜单F1-E1
 455          {
 456   1        tm1629_E(0x01);
 457   1      }
 458          
 459          void fun22(void) //二级菜单F1-E2
 460          {
 461   1        tm1629_E(0x02);
 462   1      }
 463          
 464          void fun23(void) //二级菜单F1-E3
 465          {
 466   1        tm1629_E(0x03);
 467   1      }
 468          
 469          void fun24(void) //二级菜单F1-E4
 470          {
 471   1        tm1629_E(0x04);
 472   1      }
 473          
 474          void fun25(void) //二级菜单F2-E1
 475          {
 476   1        tm1629_E(0x01);
 477   1      }
 478          
 479          void fun26(void) //二级菜单F2-E2
 480          {
 481   1        tm1629_E(0x02);
 482   1      }
 483          
 484          void fun27(void) //二级菜单F2-E3
 485          {
 486   1        tm1629_E(0x03);
 487   1      }
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 9   

 488          
 489          void fun28(void) //二级菜单F2-E4
 490          {
 491   1        tm1629_E(0x04);
 492   1      }
 493          
 494          void fun29(void) //二级菜单F3-E1
 495          {
 496   1        tm1629_E(0x01);
 497   1      }
 498          
 499          void fun30(void) //二级菜单F3-E2
 500          {
 501   1        tm1629_E(0x02);
 502   1      }
 503          
 504          void fun31(void) //二级菜单F4
 505          {
 506   1        unsigned char temp = 0;
 507   1        temp = return_Two_Menu_F4_E1();
 508   1        Show_two_number(temp);
 509   1      }
 510          
 511          void fun32(void) //二级菜单F5
 512          {
 513   1        unsigned char temp = 0;
 514   1        temp = return_Two_Menu_F5_E1();
 515   1        Show_two_number(temp);
 516   1      }
 517          
 518          void fun33(void) //二级菜单F6-E1
 519          {
 520   1        tm1629_E(0x01);
 521   1      }
 522          
 523          void fun34(void) //二级菜单F6-E2
 524          {
 525   1        tm1629_E(0x02);
 526   1      }
 527          
 528          void fun35(void) //二级菜单F6-E3
 529          {
 530   1        tm1629_E(0x03);
 531   1      }
 532          
 533          void fun36(void) //二级菜单F6-E4
 534          {
 535   1        tm1629_E(0x04);
 536   1      }
 537          
 538          void fun37(void) //二级菜单F6-E5
 539          {
 540   1        tm1629_E(0x05);
 541   1      }
 542          
 543          void fun38(void) //二级菜单F7-E1
 544          {
 545   1        tm1629_E(0x01);
 546   1      }
 547          
 548          void fun39(void) //二级菜单F7-E2
 549          {
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 10  

 550   1        tm1629_E(0x02);
 551   1      }
 552          
 553          void fun40(void) //二级菜单F7-E3
 554          {
 555   1        tm1629_E(0x03);
 556   1      }
 557          
 558          void fun41(void) //二级菜单F7-E4
 559          {
 560   1        tm1629_E(0x04);
 561   1      }
 562          
 563          void fun42(void) //二级菜单F8-E1
 564          {
 565   1        tm1629_E(0x01);
 566   1      }
 567          
 568          void fun43(void) //二级菜单F8-E2
 569          {
 570   1        tm1629_E(0x02);
 571   1      }
 572          
 573          void fun44(void) //二级菜单F9-E1
 574          {
 575   1        tm1629_E(0x01);
 576   1      }
 577          
 578          void fun45(void) //二级菜单F9-E2
 579          {
 580   1        tm1629_E(0x02);
 581   1      }
 582          
 583          void fun46(void) //二级菜单FA
 584          {
 585   1        tm1629_f(0x0f);
 586   1      }
 587          
 588          
 589          void fun47(void) //二级菜单Fb
 590          {
 591   1        tm1629_f(0x0f);
 592   1      }
 593          
 594          void fun48(void) //二级菜单FC
 595          {
 596   1        tm1629_f(0x0f);
 597   1      }
 598          
 599          void fun49(void) //二级菜单Fd
 600          {
 601   1        tm1629_f(0x0f);
 602   1      }
 603          
 604          void fun50(void) //F1_E1 千位闪烁
 605          {
 606   1        if (return_await_number_table() == 1)
 607   1        {
 608   2          Show_four_number(Two_Menu_F1_E1);
 609   2          set_await_number_table(2);
 610   2        }
 611   1        if (return_await_number_table() == 3)
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 11  

 612   1        {
 613   2          buf_display[0][3] = 0;
 614   2          display();
 615   2          set_await_number_table(0);
 616   2        }
 617   1      }
 618          
 619          void fun51(void) //F1_E1 百位闪烁
 620          {
 621   1        if (return_await_number_table() == 1)
 622   1        {
 623   2          Show_four_number(Two_Menu_F1_E1);
 624   2          set_await_number_table(2);
 625   2        }
 626   1        if (return_await_number_table() == 3)
 627   1        {
 628   2          buf_display[0][2] = 0;
 629   2          display();
 630   2          set_await_number_table(0);
 631   2        }
 632   1      }
 633          
 634          void fun52(void)  //F1_E1 十位闪烁
 635          {
 636   1        if (return_await_number_table() == 1)
 637   1        {
 638   2          Show_four_number(Two_Menu_F1_E1);
 639   2          set_await_number_table(2);
 640   2        }
 641   1        if (return_await_number_table() == 3)
 642   1        {
 643   2          buf_display[0][1] = 0;
 644   2          display();
 645   2          set_await_number_table(0);
 646   2        }
 647   1      }
 648          
 649          void fun53(void) //F1_E1 个位闪烁
 650          {
 651   1        if (return_await_number_table() == 1)
 652   1        {
 653   2          Show_four_number(Two_Menu_F1_E1);
 654   2          set_await_number_table(2);
 655   2        }
 656   1        if (return_await_number_table() == 3)
 657   1        {
 658   2          buf_display[0][0] = 0;
 659   2          display();
 660   2          set_await_number_table(0);
 661   2        }
 662   1      }
 663          
 664          void fun54(void) //F1_E2 千位闪烁
 665          {
 666   1        if (return_await_number_table() == 1)
 667   1        {
 668   2          Show_four_number(Two_Menu_F1_E2);
 669   2          set_await_number_table(2);
 670   2        }
 671   1        if (return_await_number_table() == 3)
 672   1        {
 673   2          buf_display[0][3] = 0;
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 12  

 674   2          display();
 675   2          set_await_number_table(0);
 676   2        }
 677   1      }
 678          
 679          void fun55(void) //F1_E2 百位闪烁
 680          {
 681   1        if (return_await_number_table() == 1)
 682   1        {
 683   2          Show_four_number(Two_Menu_F1_E2);
 684   2          set_await_number_table(2);
 685   2        }
 686   1        if (return_await_number_table() == 3)
 687   1        {
 688   2          buf_display[0][2] = 0;
 689   2          display();
 690   2          set_await_number_table(0);
 691   2        }
 692   1      }
 693          
 694          void fun56(void) //F1_E2 十位闪烁
 695          {
 696   1        if (return_await_number_table() == 1)
 697   1        {
 698   2          Show_four_number(Two_Menu_F1_E2);
 699   2          set_await_number_table(2);
 700   2        }
 701   1        if (return_await_number_table() == 3)
 702   1        {
 703   2          buf_display[0][1] = 0;
 704   2          display();
 705   2          set_await_number_table(0);
 706   2        }
 707   1      }
 708          
 709          void fun57(void) //F1_E2 个位闪烁
 710          {
 711   1        if (return_await_number_table() == 1)
 712   1        {
 713   2          Show_four_number(Two_Menu_F1_E2);
 714   2          set_await_number_table(2);
 715   2        }
 716   1        if (return_await_number_table() == 3)
 717   1        {
 718   2          buf_display[0][0] = 0;
 719   2          display();
 720   2          set_await_number_table(0);
 721   2        }
 722   1      }
 723          
 724          void fun58(void) //F1_E3 千位闪烁
 725          {
 726   1        if (return_await_number_table() == 1)
 727   1        {
 728   2          Show_four_number(Two_Menu_F1_E3);
 729   2          set_await_number_table(2);
 730   2        }
 731   1        if (return_await_number_table() == 3)
 732   1        {
 733   2          buf_display[0][3] = 0;
 734   2          display();
 735   2          set_await_number_table(0);
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 13  

 736   2        }
 737   1      }
 738          
 739          void fun59(void) //F1_E3 百位闪烁
 740          {
 741   1        if (return_await_number_table() == 1)
 742   1        {
 743   2          Show_four_number(Two_Menu_F1_E3);
 744   2          set_await_number_table(2);
 745   2        }
 746   1        if (return_await_number_table() == 3)
 747   1        {
 748   2          buf_display[0][2] = 0;
 749   2          display();
 750   2          set_await_number_table(0);
 751   2        }
 752   1      }
 753          
 754          void fun60(void) //F1_E3 十位闪烁
 755          {
 756   1        if (return_await_number_table() == 1)
 757   1        {
 758   2          Show_four_number(Two_Menu_F1_E3);
 759   2          set_await_number_table(2);
 760   2        }
 761   1        if (return_await_number_table() == 3)
 762   1        {
 763   2          buf_display[0][1] = 0;
 764   2          display();
 765   2          set_await_number_table(0);
 766   2        }
 767   1      }
 768          
 769          void fun61(void) //F1_E3 个位闪烁
 770          {
 771   1        if (return_await_number_table() == 1)
 772   1        {
 773   2          Show_four_number(Two_Menu_F1_E3);
 774   2          set_await_number_table(2);
 775   2        }
 776   1        if (return_await_number_table() == 3)
 777   1        {
 778   2          buf_display[0][0] = 0;
 779   2          display();
 780   2          set_await_number_table(0);
 781   2        }
 782   1      }
 783          
 784          void fun62(void) //F1_E4 千位闪烁
 785          {
 786   1        if (return_await_number_table() == 1)
 787   1        {
 788   2          Show_four_number(Two_Menu_F1_E4);
 789   2          set_await_number_table(2);
 790   2        }
 791   1        if (return_await_number_table() == 3)
 792   1        {
 793   2          buf_display[0][3] = 0;
 794   2          display();
 795   2          set_await_number_table(0);
 796   2        }
 797   1      }
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 14  

 798          
 799          void fun63(void) //F1_E4 百位闪烁
 800          {
 801   1        if (return_await_number_table() == 1)
 802   1        {
 803   2          Show_four_number(Two_Menu_F1_E4);
 804   2          set_await_number_table(2);
 805   2        }
 806   1        if (return_await_number_table() == 3)
 807   1        {
 808   2          buf_display[0][2] = 0;
 809   2          display();
 810   2          set_await_number_table(0);
 811   2        }
 812   1      }
 813          
 814          void fun64(void) //F1_E4 十位闪烁
 815          {
 816   1        if (return_await_number_table() == 1)
 817   1        {
 818   2          Show_four_number(Two_Menu_F1_E4);
 819   2          set_await_number_table(2);
 820   2        }
 821   1        if (return_await_number_table() == 3)
 822   1        {
 823   2          buf_display[0][1] = 0;
 824   2          display();
 825   2          set_await_number_table(0);
 826   2        }
 827   1      }
 828          
 829          void fun65(void) //F1_E4 个位闪烁
 830          {
 831   1        if (return_await_number_table() == 1)
 832   1        {
 833   2          Show_four_number(Two_Menu_F1_E4);
 834   2          set_await_number_table(2);
 835   2        }
 836   1        if (return_await_number_table() == 3)
 837   1        {
 838   2          buf_display[0][0] = 0;
 839   2          display();
 840   2          set_await_number_table(0);
 841   2        }
 842   1      }
 843          
 844          void fun66(void) //F2_E1 千位闪烁
 845          {
 846   1        if (return_await_number_table() == 1)
 847   1        {
 848   2          Show_four_number(Two_Menu_F2_E1);
 849   2          set_await_number_table(2);
 850   2        }
 851   1        if (return_await_number_table() == 3)
 852   1        {
 853   2          buf_display[0][3] = 0;
 854   2          display();
 855   2          set_await_number_table(0);
 856   2        }
 857   1      }
 858          
 859          void fun67(void) //F2_E1 百位闪烁
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 15  

 860          {
 861   1        if (return_await_number_table() == 1)
 862   1        {
 863   2          Show_four_number(Two_Menu_F2_E1);
 864   2          set_await_number_table(2);
 865   2        }
 866   1        if (return_await_number_table() == 3)
 867   1        {
 868   2          buf_display[0][2] = 0;
 869   2          display();
 870   2          set_await_number_table(0);
 871   2        }
 872   1      }
 873          
 874          void fun68(void) //F2_E1 十位闪烁
 875          {
 876   1        if (return_await_number_table() == 1)
 877   1        {
 878   2          Show_four_number(Two_Menu_F2_E1);
 879   2          set_await_number_table(2);
 880   2        }
 881   1        if (return_await_number_table() == 3)
 882   1        {
 883   2          buf_display[0][1] = 0;
 884   2          display();
 885   2          set_await_number_table(0);
 886   2        }
 887   1      }
 888          
 889          void fun69(void) //F2_E1 个位闪烁
 890          {
 891   1        if (return_await_number_table() == 1)
 892   1        {
 893   2          Show_four_number(Two_Menu_F2_E1);
 894   2          set_await_number_table(2);
 895   2        }
 896   1        if (return_await_number_table() == 3)
 897   1        {
 898   2          buf_display[0][0] = 0;
 899   2          display();
 900   2          set_await_number_table(0);
 901   2        }
 902   1      }
 903          
 904          void fun70(void) //F2_E2 千位闪烁
 905          {
 906   1        if (return_await_number_table() == 1)
 907   1        {
 908   2          Show_four_number(Two_Menu_F2_E2);
 909   2          set_await_number_table(2);
 910   2        }
 911   1        if (return_await_number_table() == 3)
 912   1        {
 913   2          buf_display[0][3] = 0;
 914   2          display();
 915   2          set_await_number_table(0);
 916   2        }
 917   1      }
 918          
 919          void fun71(void) //F2_E2 百位闪烁
 920          {
 921   1        if (return_await_number_table() == 1)
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 16  

 922   1        {
 923   2          Show_four_number(Two_Menu_F2_E2);
 924   2          set_await_number_table(2);
 925   2        }
 926   1        if (return_await_number_table() == 3)
 927   1        {
 928   2          buf_display[0][2] = 0;
 929   2          display();
 930   2          set_await_number_table(0);
 931   2        }
 932   1      }
 933          
 934          void fun72(void) //F2_E2 十位闪烁
 935          {
 936   1        if (return_await_number_table() == 1)
 937   1        {
 938   2          Show_four_number(Two_Menu_F2_E2);
 939   2          set_await_number_table(2);
 940   2        }
 941   1        if (return_await_number_table() == 3)
 942   1        {
 943   2          buf_display[0][1] = 0;
 944   2          display();
 945   2          set_await_number_table(0);
 946   2        }
 947   1      }
 948          
 949          void fun73(void) //F2_E2 个位闪烁
 950          {
 951   1        if (return_await_number_table() == 1)
 952   1        {
 953   2          Show_four_number(Two_Menu_F2_E2);
 954   2          set_await_number_table(2);
 955   2        }
 956   1        if (return_await_number_table() == 3)
 957   1        {
 958   2          buf_display[0][0] = 0;
 959   2          display();
 960   2          set_await_number_table(0);
 961   2        }
 962   1      }
 963          
 964          void fun74(void) //F2_E3 千位闪烁
 965          {
 966   1        if (return_await_number_table() == 1)
 967   1        {
 968   2          Show_four_number(Two_Menu_F2_E3);
 969   2          set_await_number_table(2);
 970   2        }
 971   1        if (return_await_number_table() == 3)
 972   1        {
 973   2          buf_display[0][3] = 0;
 974   2          display();
 975   2          set_await_number_table(0);
 976   2        }
 977   1      }
 978          
 979          void fun75(void) //F2_E3 百位闪烁
 980          {
 981   1        if (return_await_number_table() == 1)
 982   1        {
 983   2          Show_four_number(Two_Menu_F2_E3);
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 17  

 984   2          set_await_number_table(2);
 985   2        }
 986   1        if (return_await_number_table() == 3)
 987   1        {
 988   2          buf_display[0][2] = 0;
 989   2          display();
 990   2          set_await_number_table(0);
 991   2        }
 992   1      }
 993          
 994          void fun76(void) //F2_E3 十位闪烁
 995          {
 996   1        if (return_await_number_table() == 1)
 997   1        {
 998   2          Show_four_number(Two_Menu_F2_E3);
 999   2          set_await_number_table(2);
1000   2        }
1001   1        if (return_await_number_table() == 3)
1002   1        {
1003   2          buf_display[0][1] = 0;
1004   2          display();
1005   2          set_await_number_table(0);
1006   2        }
1007   1      }
1008          
1009          void fun77(void) //F2_E3 个位闪烁
1010          {
1011   1        if (return_await_number_table() == 1)
1012   1        {
1013   2          Show_four_number(Two_Menu_F2_E3);
1014   2          set_await_number_table(2);
1015   2        }
1016   1        if (return_await_number_table() == 3)
1017   1        {
1018   2          buf_display[0][0] = 0;
1019   2          display();
1020   2          set_await_number_table(0);
1021   2        }
1022   1      }
1023          
1024          void fun78(void) //F2_E4 千位闪烁
1025          {
1026   1        if (return_await_number_table() == 1)
1027   1        {
1028   2          Show_four_number(Two_Menu_F2_E4);
1029   2          set_await_number_table(2);
1030   2        }
1031   1        if (return_await_number_table() == 3)
1032   1        {
1033   2          buf_display[0][3] = 0;
1034   2          display();
1035   2          set_await_number_table(0);
1036   2        }
1037   1      }
1038          
1039          void fun79(void) //F2_E4 百位闪烁
1040          {
1041   1        if (return_await_number_table() == 1)
1042   1        {
1043   2          Show_four_number(Two_Menu_F2_E4);
1044   2          set_await_number_table(2);
1045   2        }
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 18  

1046   1        if (return_await_number_table() == 3)
1047   1        {
1048   2          buf_display[0][2] = 0;
1049   2          display();
1050   2          set_await_number_table(0);
1051   2        }
1052   1      }
1053          
1054          void fun80(void) //F2_E4 十位闪烁
1055          {
1056   1        if (return_await_number_table() == 1)
1057   1        {
1058   2          Show_four_number(Two_Menu_F2_E4);
1059   2          set_await_number_table(2);
1060   2        }
1061   1        if (return_await_number_table() == 3)
1062   1        {
1063   2          buf_display[0][1] = 0;
1064   2          display();
1065   2          set_await_number_table(0);
1066   2        }
1067   1      }
1068          
1069          void fun81(void) //F2_E4 个位闪烁
1070          {
1071   1        if (return_await_number_table() == 1)
1072   1        {
1073   2          Show_four_number(Two_Menu_F2_E4);
1074   2          set_await_number_table(2);
1075   2        }
1076   1        if (return_await_number_table() == 3)
1077   1        {
1078   2          buf_display[0][0] = 0;
1079   2          display();
1080   2          set_await_number_table(0);
1081   2        }
1082   1      }
1083          
1084          void fun82(void) //显示即时显示 还是循环显示
1085          {
1086   1        unsigned char temp=0;
1087   1        temp = return_Two_Menu_F3_E1();
1088   1        Show_one_number(temp);
1089   1      }
1090          
1091          void fun83(void) //队列存储个数
1092          {
1093   1        unsigned char temp = 0;
1094   1        temp = return_Two_Menu_F3_E2();
1095   1        Show_two_number(temp);
1096   1      }
1097          
1098          void fun84(void) //F6_E1语音选择
1099          {
1100   1        unsigned char temp = 0;
1101   1        temp = return_Two_Menu_F6_E1();
1102   1        Show_one_number(temp);
1103   1      }
1104          
1105          void fun85(void) //F6_E2语音报读次数
1106          {
1107   1        unsigned char temp = 0;
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 19  

1108   1        temp = return_Two_Menu_F6_E2();
1109   1        Show_one_number(temp);
1110   1      }
1111          
1112          void fun86(void) //F6_E3循环时候是否报读
1113          {
1114   1        unsigned char temp = 0;
1115   1        temp = return_Two_Menu_F6_E3();
1116   1        Show_one_number(temp);
1117   1      }
1118          
1119          void fun87(void) //F6_E4音量大小调整
1120          {
1121   1        unsigned char temp = 0;
1122   1        temp = return_Two_Menu_F6_E4();
1123   1        Show_one_number(temp);
1124   1      }
1125          
1126          void fun88(void) //F6_E5屏幕亮度调整
1127          {
1128   1        unsigned char temp = 0;
1129   1        temp = return_Two_Menu_F6_E5();
1130   1        Show_one_number(temp);
1131   1      }
1132          
1133          void fun89(void) //F7_E1 999*9
1134          {
1135   1        unsigned char temp = 0;
1136   1        temp = return_Two_Menu_F7_E1();
1137   1        Show_one_number(temp);
1138   1      }
1139          
1140          void fun90(void) //F7_E2 9999*9
1141          {
1142   1        unsigned char temp = 0;
1143   1        temp = return_Two_Menu_F7_E2();
1144   1        Show_one_number(temp);
1145   1      }
1146          
1147          void fun91(void) //F7_E3 999*99
1148          {
1149   1        unsigned char temp = 0;
1150   1        temp = return_Two_Menu_F7_E3();
1151   1        Show_one_number(temp);
1152   1      }
1153          
1154          void fun92(void) //F7_E4 9999*99
1155          {
1156   1        unsigned char temp = 0;
1157   1        temp = return_Two_Menu_F7_E4();
1158   1        Show_one_number(temp);
1159   1      }
1160          
1161          void fun93(void) //F8_E1单键位跟多键位切换
1162          {
1163   1        unsigned char temp = 0;
1164   1        temp = return_Two_Menu_F8_E1();
1165   1        Show_one_number(temp);
1166   1      }
1167          
1168          void fun94(void) //F8_E2键位设置
1169          {
C51 COMPILER V9.00   TM1629                                                                09/10/2015 20:09:04 PAGE 20  

1170   1        unsigned char temp = 0;
1171   1        temp = return_Two_Menu_F8_E2();
1172   1        Show_two_number(temp);
1173   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2810    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    320       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
