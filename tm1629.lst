C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TM1629
OBJECT MODULE PLACED IN tm1629.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\tm1629.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRINT(
                    -.\tm1629.lst) TABS(2) OBJECT(tm1629.obj)

line level    source

   1          #include "tm1629.h"
   2          #include "timer.h"
   3          #include "usart.h"
   4          #include "ds1302.h"
   5          #include "key.h"
   6          
   7          unsigned char const CODE[] = { 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x3
             -9, 0x5E, 0x79, 0x71, 0x76, 0x38, 0x5c, 0x73, 0x3e };//0-9 abcdef 显示器码数组
   8          unsigned char const INIT_CODE[] = { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 };//逐段点亮数码管数组
   9          unsigned char const SHANGSHUO[] = { 0x40, 0x00 }; // 点亮数码管中间段以及灭
  10          unsigned char buf_display[6][8] = { 0 }; //3个TM1629显存数组
  11          unsigned char display_ram[240] = { 0 }; //程序运行时记录显示数据的内存 
  12          unsigned char await_time_table= 0 ;//用于记录待机显示横杠数码管次数 
  13          
  14          void writeDataTo1629(unsigned char p) //写数据给第一个TM1629
  15          {
  16   1        unsigned int i;
  17   1        TM1629_STB = 0;
  18   1        for (i = 0; i<8; i++)
  19   1        {
  20   2          TM1629_CLK = 0;
  21   2          if (p & 0x01)
  22   2            TM1629_DIO = 1;
  23   2          else
  24   2            TM1629_DIO = 0;
  25   2          _nop_();
  26   2          _nop_();
  27   2          _nop_();
  28   2          _nop_();
  29   2          TM1629_CLK = 1;
  30   2          p = p >> 1;
  31   2        }
  32   1        TM1629_CLK = 0;
  33   1        TM1629_DIO = 0;
  34   1      }
  35          
  36          void writeDataTo1629_2(unsigned char p) //写数据给第二个TM1629
  37          {
  38   1        unsigned int i;
  39   1        TM1629_STB2 = 0;
  40   1        for (i = 0; i<8; i++)
  41   1        {
  42   2          TM1629_CLK = 0;
  43   2          if (p & 0x01)
  44   2            TM1629_DIO = 1;
  45   2          else
  46   2            TM1629_DIO = 0;
  47   2          _nop_();
  48   2          _nop_();
  49   2          _nop_();
  50   2          _nop_();
  51   2          TM1629_CLK = 1;
  52   2          p = p >> 1;
  53   2        }
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 2   

  54   1        TM1629_CLK = 0;
  55   1        TM1629_DIO = 0;
  56   1      }
  57          
  58          void writeDataTo1629_3(unsigned char p) //写数据给第三个TM1629
  59          {
  60   1        unsigned int i;
  61   1        TM1629_STB3 = 0;
  62   1        for (i = 0; i<8; i++)
  63   1        {
  64   2          TM1629_CLK = 0;
  65   2          if (p & 0x01)
  66   2            TM1629_DIO = 1;
  67   2          else
  68   2            TM1629_DIO = 0;
  69   2          _nop_();
  70   2          _nop_();
  71   2          _nop_();
  72   2          _nop_();
  73   2          TM1629_CLK = 1;
  74   2          p = p >> 1;
  75   2        }
  76   1        TM1629_CLK = 0;
  77   1        TM1629_DIO = 0;
  78   1      }
  79          
  80          void send_command(unsigned char word) //写命令给第一个TM1629
  81          {
  82   1        TM1629_STB = 1;
  83   1        nop;
  84   1        TM1629_STB = 0;
  85   1        writeDataTo1629(word);
  86   1      }
  87          
  88          void send_command_2(unsigned char word) //写命令给第二个TM1629
  89          {
  90   1        TM1629_STB2 = 1;
  91   1        nop;
  92   1        TM1629_STB2 = 0;
  93   1        writeDataTo1629_2(word);
  94   1      }
  95          
  96          void send_command_3(unsigned char word) //写命令给第三个TM1629
  97          {
  98   1        TM1629_STB3 = 1;
  99   1        nop;
 100   1        TM1629_STB3 = 0;
 101   1        writeDataTo1629_3(word);
 102   1      }
 103          
 104          void display(void) //3个TM1629显示函数
 105          {
 106   1        unsigned char i;
 107   1        send_command(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 108   1        send_command(0xc0); //设置显示地址命令：从00H开始
 109   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 110   1        {
 111   2          writeDataTo1629(buf_display[0][i]);
 112   2          writeDataTo1629(buf_display[1][i]);
 113   2        }
 114   1        send_command(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 115   1        TM1629_STB = 1;
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 3   

 116   1      
 117   1        send_command_2(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 118   1        send_command_2(0xc0); //设置显示地址命令：从00H开始
 119   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 120   1        {
 121   2          writeDataTo1629_2(buf_display[2][i]);
 122   2          writeDataTo1629_2(buf_display[3][i]);
 123   2        }
 124   1        send_command_2(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 125   1        TM1629_STB2 = 1;
 126   1      
 127   1        send_command_3(0x40); //设置数据命令:普通模式、地址自增1，写数据到显存
 128   1        send_command_3(0xc0); //设置显示地址命令：从00H开始
 129   1        for (i = 0; i<8; i++) //发送16字节的显存数据
 130   1        {
 131   2          writeDataTo1629_3(buf_display[4][i]);
 132   2          writeDataTo1629_3(buf_display[5][i]);
 133   2        }
 134   1        send_command_3(0x8C); //设置显示控制命令：打开显示，并设置为11/16.
 135   1        TM1629_STB3 = 1;
 136   1      }
 137          
 138          void tm1629_init(void) //TM1629开机初始化函数
 139          {
 140   1        unsigned char i, j, k;    //k控制显示的具体数字，i和j控制buf_display的刷新
 141   1        for (k = 0; k<8; k++)
 142   1        {
 143   2          for (i = 0; i<6; i++)
 144   2          {
 145   3            for (j = 0; j<8; j++)
 146   3            {
 147   4              buf_display[i][j] = INIT_CODE[k];
 148   4            }
 149   3          }
 150   2          display();
 151   2          Tm1629_delay(30);
 152   2        }
 153   1      }
 154          
 155          
 156          void Tm1629_delay(unsigned char k) //延时函数
 157          {
 158   1        unsigned char i, j;
 159   1        for (; k>0; k--)
 160   1        {
 161   2          for (i = 255; i>0; i--)
 162   2          {
 163   3            for (j = 255; j>0; j--)
 164   3            {
 165   4              ;
 166   4      
 167   4            }
 168   3          }
 169   2        }
 170   1      }
 171          
 172          void tm1629_clear(void)//全部归零
 173          {
 174   1        unsigned char i, j;
 175   1        for (i = 0; i<6; i++)
 176   1        {
 177   2          for (j = 0; j<8; j++)
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 4   

 178   2          {
 179   3            buf_display[i][j] = 0x00;
 180   3          }
 181   2        }
 182   1      }
 183          
 184          void tm1629_await(void)
 185          {
 186   1        unsigned char i;  //k控制显示的具体数字，i和j控制buf_display的刷新
 187   1        unsigned char await_number_table_temp = 0;
 188   1        await_number_table_temp = return_await_number_table();
 189   1        if (await_number_table_temp == 1)
 190   1        {
 191   2          //GD5800_select_chapter(0x0008) ;
 192   2          tm1629_clear();
 193   2          i = await_time_table & 0x03;
 194   2          buf_display[0][i] = 0x40;
 195   2          display();
 196   2          set_await_number_table(0);
 197   2          await_time_table++;
 198   2          if (await_time_table == 4)
 199   2            await_time_table = 0;
 200   2        }
 201   1      }
 202          
 203          void Display_time(void)
 204          {
 205   1        tm1629_clear();
 206   1        Ds1302_Read_Time(); 
 207   1        buf_display[1][7] = CODE[2];        //年
 208   1        buf_display[1][6] = CODE[0];
 209   1        buf_display[1][5] = CODE[time_buf1[1] / 10];
 210   1        buf_display[1][4] = CODE[time_buf1[1] % 10];
 211   1      
 212   1        buf_display[1][3] = 0x40;          // -
 213   1        
 214   1        buf_display[1][2] = CODE[time_buf1[2] / 10]; //月
 215   1        buf_display[1][1] = CODE[time_buf1[2] % 10];
 216   1      
 217   1        buf_display[1][0] = 0x40;          // -
 218   1      
 219   1        buf_display[0][7] = CODE[time_buf1[3] / 10];
 220   1        buf_display[0][6] = CODE[time_buf1[3] % 10];//日
 221   1      
 222   1        buf_display[0][5] = CODE[time_buf1[7]];   //星期
 223   1      
 224   1        buf_display[0][3] = CODE[time_buf1[4] / 10]; //小时
 225   1        buf_display[0][2] = CODE[time_buf1[4] % 10];
 226   1        buf_display[0][1] = CODE[time_buf1[5] / 10]; //小时
 227   1        buf_display[0][0] = CODE[time_buf1[5] % 10];
 228   1      
 229   1        display();
 230   1      
 231   1      }
 232          
 233          void tm1629_f(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 234          {
 235   1        tm1629_clear();
 236   1        buf_display[0][1] = CODE[0x0f];
 237   1        buf_display[0][0] = CODE[f_number];
 238   1        display();
 239   1      }
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 5   

 240          
 241          void tm1629_E(unsigned char f_number) //第一行倒数二个显示F,倒数第一个显示f_number
 242          {
 243   1        tm1629_clear();
 244   1        buf_display[0][1] = CODE[0x0E];
 245   1        buf_display[0][0] = CODE[f_number];
 246   1        display();
 247   1      }
 248          
 249          void Show_one_number(unsigned char f_number) //显示一个数字
 250          {
 251   1        tm1629_clear();
 252   1        //buf_display[0][1] = CODE[0x0E];
 253   1        buf_display[0][0] = CODE[f_number];
 254   1        display();
 255   1      }
 256          
 257          void Show_two_number(unsigned char f_number) //显示两个数字
 258          {
 259   1        tm1629_clear();
 260   1        buf_display[0][1] = CODE[f_number / 10];
 261   1        buf_display[0][0] = CODE[f_number % 10];
 262   1        display();
 263   1      }
 264          
 265          void Show_four_number(unsigned char* temp)
 266          {
 267   1        tm1629_clear();
 268   1        buf_display[0][3] = CODE[*(temp)];
 269   1        buf_display[0][2] = CODE[*(temp+1)];
 270   1        buf_display[0][1] = CODE[*(temp+2)];
 271   1        buf_display[0][0] = CODE[*(temp+3)];
 272   1        display();
 273   1      }
 274          
 275          void tm1629_load(void)
 276          {
 277   1        tm1629_clear();
 278   1        if (*(display_ram + 66) != 0)
 279   1          mcuram_to_displayram(buf_display[2] + 15, display_ram + 66);
 280   1        if (*(display_ram + 60) != 0)
 281   1          mcuram_to_displayram(buf_display[2] + 11, display_ram + 60);
 282   1        if (*(display_ram + 54) != 0)
 283   1          mcuram_to_displayram(buf_display[2] + 7, display_ram + 54);
 284   1        if (*(display_ram + 48) != 0)
 285   1          mcuram_to_displayram(buf_display[2] + 3, display_ram + 48);
 286   1        if (*(display_ram + 42) != 0)
 287   1          mcuram_to_displayram(buf_display[1] + 15, display_ram + 42);
 288   1        if (*(display_ram + 36) != 0)
 289   1          mcuram_to_displayram(buf_display[1] + 11, display_ram + 36);
 290   1        if (*(display_ram + 30) != 0)
 291   1          mcuram_to_displayram(buf_display[1] + 7, display_ram + 30);
 292   1        if (*(display_ram + 24) != 0)
 293   1          mcuram_to_displayram(buf_display[1] + 3, display_ram + 24);
 294   1        if (*(display_ram + 18) != 0)
 295   1          mcuram_to_displayram(buf_display[0] + 15, display_ram + 18);
 296   1        if (*(display_ram + 12) != 0)
 297   1          mcuram_to_displayram(buf_display[0] + 11, display_ram + 12);
 298   1        if (*(display_ram + 6) != 0)
 299   1          mcuram_to_displayram(buf_display[0] + 7, display_ram + 6);
 300   1        if (*(display_ram + 0) != 0)
 301   1          mcuram_to_displayram(buf_display[0] + 3, display_ram);
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 6   

 302   1      }
 303          
 304          void mcuram_to_displayram(unsigned char a[48], unsigned char* b)  //从RAM区域移到显存区域,顺带翻译成数码管
             -显示的码
 305          {
 306   1        /*
 307   1        A// 类别、区号、接收号
 308   1        B// 类别、区号、接收号
 309   1        */
 310   1        *(a) = CODE[*(b + 1)];
 311   1        *(a - 1) = CODE[*(b + 2)];
 312   1        *(a - 2) = CODE[*(b + 3)];
 313   1        *(a - 3) = CODE[*(b + 4)];
 314   1      }
 315          
 316          void decoder_temp_to_mcuram(unsigned char* a, unsigned char* index)//a为MCU缓存区   index为解码后取出的8字
             -节临时数组
 317          {
 318   1        *(a + 0) = *(index);
 319   1        *(a + 1) = *(index + 1);
 320   1        *(a + 2) = *(index + 2);
 321   1        *(a + 3) = *(index + 3);
 322   1        *(a + 4) = *(index + 4);
 323   1        *(a + 5) = *(index + 5);
 324   1      }
 325          
 326          void mcuram_to_mcuram_down(unsigned char* a) //a为MCURAM缓存区区   向下压一组数据
 327          {
 328   1        *(a + 6) = *(a);    //ram区元素下移6个
 329   1        *(a + 7) = *(a + 1);
 330   1        *(a + 8) = *(a + 2);
 331   1        *(a + 9) = *(a + 3);
 332   1        *(a + 10) = *(a + 4);
 333   1        *(a + 11) = *(a + 5);
 334   1      
 335   1      }
 336          
 337          void mcuram_to_mcuram_up(unsigned char* a) //a为MCURAM缓存区区   向上压一组数据
 338          {
 339   1        *(a) = *(a + 6);   //ram区元素上移6个
 340   1        *(a + 1) = *(a + 7);
 341   1        *(a + 2) = *(a + 8);
 342   1        *(a + 3) = *(a + 9);
 343   1        *(a + 4) = *(a + 10);
 344   1        *(a + 5) = *(a + 11);
 345   1      }
 346          
 347          
 348          
 349          void fun0(void) //待机显示函数
 350          {
 351   1        //tm1629_await();
 352   1        Display_time();
 353   1      }
 354          
 355          void fun1(void) //一级菜单F0
 356          {
 357   1        tm1629_f(0x00);
 358   1      }
 359          
 360          void fun2(void) //一级菜单F1
 361          {
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 7   

 362   1        tm1629_f(0x01);
 363   1      }
 364          
 365          void fun3(void) //一级菜单F2
 366          {
 367   1        tm1629_f(0x02);
 368   1      }
 369          
 370          void fun4(void) //一级菜单F3
 371          {
 372   1        tm1629_f(0x03);
 373   1      }
 374          
 375          void fun5(void) //一级菜单F4
 376          {
 377   1        tm1629_f(0x04);
 378   1      }
 379          
 380          void fun6(void) //一级菜单F5
 381          {
 382   1        tm1629_f(0x05);
 383   1      }
 384          
 385          void fun7(void) //一级菜单F6
 386          {
 387   1        tm1629_f(0x06);
 388   1      }
 389          
 390          void fun8(void) //一级菜单F7
 391          {
 392   1        tm1629_f(0x07);
 393   1      }
 394          
 395          void fun9(void) //一级菜单F8
 396          {
 397   1        tm1629_f(0x08);
 398   1      }
 399          
 400          void fun10(void) //一级菜单F9
 401          {
 402   1        tm1629_f(0x09);
 403   1      }
 404          
 405          void fun11(void) //一级菜单FA
 406          {
 407   1        tm1629_f(0x0a);
 408   1      }
 409          
 410          void fun12(void) //一级菜单Fb
 411          {
 412   1        tm1629_f(0x0b);
 413   1      }
 414          
 415          void fun13(void) //一级菜单FC
 416          {
 417   1        tm1629_f(0x0c);
 418   1      }
 419          
 420          void fun14(void) //一级菜单Fd
 421          {
 422   1        tm1629_f(0x0d);
 423   1      }
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 8   

 424          
 425          void fun15(void) //设置年份
 426          {
 427   1        if (return_await_number_table() == 1)
 428   1        {
 429   2          Display_time();
 430   2          set_await_number_table(2);
 431   2        }
 432   1        if (return_await_number_table() == 3)
 433   1        {
 434   2          buf_display[1][7] = 0;
 435   2          buf_display[1][6] = 0;
 436   2          buf_display[1][5] = 0;
 437   2          buf_display[1][4] = 0;
 438   2          display();
 439   2          set_await_number_table(0);
 440   2        }
 441   1        Ds1302_Write_Time();
 442   1      }
 443          
 444          void fun16(void) //设置月份
 445          {
 446   1        if (return_await_number_table() == 1)
 447   1        {
 448   2          Display_time();
 449   2          set_await_number_table(2);
 450   2        }
 451   1        if (return_await_number_table() == 3)
 452   1        {
 453   2          buf_display[1][2] = 0;
 454   2          buf_display[1][1] = 0;
 455   2          display();
 456   2          set_await_number_table(0);
 457   2        }
 458   1        Ds1302_Write_Time();
 459   1      }
 460          
 461          void fun17(void) //设置日期
 462          {
 463   1        if (return_await_number_table() == 1)
 464   1        {
 465   2          Display_time();
 466   2          set_await_number_table(2);
 467   2        }
 468   1        if (return_await_number_table() == 3)
 469   1        {
 470   2          buf_display[0][7] = 0;
 471   2          buf_display[0][6] = 0;
 472   2          display();
 473   2          set_await_number_table(0);
 474   2        }
 475   1        Ds1302_Write_Time();
 476   1      }
 477          
 478          void fun18(void) //设置星期
 479          {
 480   1        if (return_await_number_table() == 1)
 481   1        {
 482   2          Display_time();
 483   2          set_await_number_table(2);
 484   2        }
 485   1        if (return_await_number_table() == 3)
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 9   

 486   1        {
 487   2          buf_display[0][5] = 0;
 488   2          display();
 489   2          set_await_number_table(0);
 490   2        }
 491   1        Ds1302_Write_Time();
 492   1      }
 493          
 494          void fun19(void) //设置小时
 495          {
 496   1        if (return_await_number_table() == 1)
 497   1        {
 498   2          Display_time();
 499   2          set_await_number_table(2);
 500   2        }
 501   1        if (return_await_number_table() == 3)
 502   1        {
 503   2          buf_display[0][3] = 0;
 504   2          buf_display[0][2] = 0;
 505   2          display();
 506   2          set_await_number_table(0);
 507   2        }
 508   1        Ds1302_Write_Time();
 509   1      }
 510          
 511          void fun20(void) //设置分钟
 512          {
 513   1        if (return_await_number_table() == 1)
 514   1        {
 515   2          Display_time();
 516   2          set_await_number_table(2);
 517   2        }
 518   1        if (return_await_number_table() == 3)
 519   1        {
 520   2          buf_display[0][1] = 0;
 521   2          buf_display[0][0] = 0;
 522   2          display();
 523   2          set_await_number_table(0);
 524   2        }
 525   1        Ds1302_Write_Time();
 526   1      }
 527          
 528          void fun21(void) //二级菜单F1-E1
 529          {
 530   1        tm1629_E(0x01);
 531   1        Two_Menu_F1_E1[0] = 0;
 532   1        Two_Menu_F1_E1[1] = 0;
 533   1        Two_Menu_F1_E1[2] = 0;
 534   1        Two_Menu_F1_E1[3] = 1;
 535   1      }
 536          
 537          void fun22(void) //二级菜单F1-E2
 538          {
 539   1        tm1629_E(0x02);
 540   1        Two_Menu_F1_E2[0] = 0;
 541   1        Two_Menu_F1_E2[1] = 0;
 542   1        Two_Menu_F1_E2[2] = 0;
 543   1        Two_Menu_F1_E2[3] = 1;
 544   1      }
 545          
 546          void fun23(void) //二级菜单F1-E3
 547          {
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 10  

 548   1        tm1629_E(0x03);
 549   1        Two_Menu_F1_E3[0] = 0;
 550   1        Two_Menu_F1_E3[1] = 0;
 551   1        Two_Menu_F1_E3[2] = 0;
 552   1        Two_Menu_F1_E3[3] = 1;
 553   1      }
 554          
 555          void fun24(void) //二级菜单F1-E4
 556          {
 557   1        tm1629_E(0x04);
 558   1        Two_Menu_F1_E4[0] = 0;
 559   1        Two_Menu_F1_E4[1] = 0;
 560   1        Two_Menu_F1_E4[2] = 0;
 561   1        Two_Menu_F1_E4[3] = 1;
 562   1      }
 563          
 564          void fun25(void) //二级菜单F2-E1
 565          {
 566   1        tm1629_E(0x01);
 567   1        Two_Menu_F2_E1[0] = 0;
 568   1        Two_Menu_F2_E1[1] = 0;
 569   1        Two_Menu_F2_E1[2] = 0;
 570   1        Two_Menu_F2_E1[3] = 1;
 571   1      }
 572          
 573          void fun26(void) //二级菜单F2-E2
 574          {
 575   1        tm1629_E(0x02);
 576   1        Two_Menu_F2_E2[0] = 0;
 577   1        Two_Menu_F2_E2[1] = 0;
 578   1        Two_Menu_F2_E2[2] = 0;
 579   1        Two_Menu_F2_E2[3] = 1;
 580   1      }
 581          
 582          void fun27(void) //二级菜单F2-E3
 583          {
 584   1        tm1629_E(0x03);
 585   1        Two_Menu_F2_E3[0] = 0;
 586   1        Two_Menu_F2_E3[1] = 0;
 587   1        Two_Menu_F2_E3[2] = 0;
 588   1        Two_Menu_F2_E3[3] = 1;
 589   1      }
 590          
 591          void fun28(void) //二级菜单F2-E4
 592          {
 593   1        tm1629_E(0x04);
 594   1        Two_Menu_F2_E4[0] = 0;
 595   1        Two_Menu_F2_E4[1] = 0;
 596   1        Two_Menu_F2_E4[2] = 0;
 597   1        Two_Menu_F2_E4[3] = 1;
 598   1      }
 599          
 600          void fun29(void) //二级菜单F3-E1
 601          {
 602   1        tm1629_E(0x01);
 603   1      }
 604          
 605          void fun30(void) //二级菜单F3-E2
 606          {
 607   1        tm1629_E(0x02);
 608   1      }
 609          
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 11  

 610          void fun31(void) //二级菜单F4
 611          {
 612   1        unsigned char temp = 0;
 613   1        temp = return_Two_Menu_F4_E1();
 614   1        Show_two_number(temp);
 615   1      }
 616          
 617          void fun32(void) //二级菜单F5
 618          {
 619   1        unsigned char temp = 0;
 620   1        temp = return_Two_Menu_F5_E1();
 621   1        Show_two_number(temp);
 622   1      }
 623          
 624          void fun33(void) //二级菜单F6-E1
 625          {
 626   1        tm1629_E(0x01);
 627   1      }
 628          
 629          void fun34(void) //二级菜单F6-E2
 630          {
 631   1        tm1629_E(0x02);
 632   1      }
 633          
 634          void fun35(void) //二级菜单F6-E3
 635          {
 636   1        tm1629_E(0x03);
 637   1      }
 638          
 639          void fun36(void) //二级菜单F6-E4
 640          {
 641   1        tm1629_E(0x04);
 642   1      }
 643          
 644          void fun37(void) //二级菜单F6-E5
 645          {
 646   1        tm1629_E(0x05);
 647   1      }
 648          
 649          void fun38(void) //二级菜单F7-E1
 650          {
 651   1        tm1629_E(0x01);
 652   1      }
 653          
 654          void fun39(void) //二级菜单F7-E2
 655          {
 656   1        tm1629_E(0x02);
 657   1      }
 658          
 659          void fun40(void) //二级菜单F7-E3
 660          {
 661   1        tm1629_E(0x03);
 662   1      }
 663          
 664          void fun41(void) //二级菜单F7-E4
 665          {
 666   1        tm1629_E(0x04);
 667   1      }
 668          
 669          void fun42(void) //二级菜单F8-E1
 670          {
 671   1        tm1629_E(0x01);
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 12  

 672   1      }
 673          
 674          void fun43(void) //二级菜单F8-E2
 675          {
 676   1        tm1629_E(0x02);
 677   1      }
 678          
 679          void fun44(void) //二级菜单F9-E1
 680          {
 681   1        tm1629_E(0x01);
 682   1      }
 683          
 684          void fun45(void) //二级菜单F9-E2
 685          {
 686   1        tm1629_E(0x02);
 687   1      }
 688          
 689          void fun46(void) //二级菜单FA
 690          {
 691   1        tm1629_f(0x0f);
 692   1      }
 693          
 694          
 695          void fun47(void) //二级菜单Fb
 696          {
 697   1        tm1629_f(0x0f);
 698   1      }
 699          
 700          void fun48(void) //二级菜单FC
 701          {
 702   1        tm1629_f(0x0f);
 703   1      }
 704          
 705          void fun49(void) //二级菜单Fd
 706          {
 707   1        tm1629_f(0x0f);
 708   1      }
 709          
 710          void fun50(void) //F1_E1 千位闪烁
 711          {
 712   1        if (return_await_number_table() == 1)
 713   1        {
 714   2          Show_four_number(Two_Menu_F1_E1);
 715   2          set_await_number_table(2);
 716   2        }
 717   1        if (return_await_number_table() == 3)
 718   1        {
 719   2          buf_display[0][3] = 0;
 720   2          display();
 721   2          set_await_number_table(0);
 722   2        }
 723   1      }
 724          
 725          void fun51(void) //F1_E1 百位闪烁
 726          {
 727   1        if (return_await_number_table() == 1)
 728   1        {
 729   2          Show_four_number(Two_Menu_F1_E1);
 730   2          set_await_number_table(2);
 731   2        }
 732   1        if (return_await_number_table() == 3)
 733   1        {
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 13  

 734   2          buf_display[0][2] = 0;
 735   2          display();
 736   2          set_await_number_table(0);
 737   2        }
 738   1      }
 739          
 740          void fun52(void)  //F1_E1 十位闪烁
 741          {
 742   1        if (return_await_number_table() == 1)
 743   1        {
 744   2          Show_four_number(Two_Menu_F1_E1);
 745   2          set_await_number_table(2);
 746   2        }
 747   1        if (return_await_number_table() == 3)
 748   1        {
 749   2          buf_display[0][1] = 0;
 750   2          display();
 751   2          set_await_number_table(0);
 752   2        }
 753   1      }
 754          
 755          void fun53(void) //F1_E1 个位闪烁
 756          {
 757   1        if (return_await_number_table() == 1)
 758   1        {
 759   2          Show_four_number(Two_Menu_F1_E1);
 760   2          set_await_number_table(2);
 761   2        }
 762   1        if (return_await_number_table() == 3)
 763   1        {
 764   2          buf_display[0][0] = 0;
 765   2          display();
 766   2          set_await_number_table(0);
 767   2        }
 768   1      }
 769          
 770          void fun54(void) //F1_E2 千位闪烁
 771          {
 772   1        if (return_await_number_table() == 1)
 773   1        {
 774   2          Show_four_number(Two_Menu_F1_E2);
 775   2          set_await_number_table(2);
 776   2        }
 777   1        if (return_await_number_table() == 3)
 778   1        {
 779   2          buf_display[0][3] = 0;
 780   2          display();
 781   2          set_await_number_table(0);
 782   2        }
 783   1      }
 784          
 785          void fun55(void) //F1_E2 百位闪烁
 786          {
 787   1        if (return_await_number_table() == 1)
 788   1        {
 789   2          Show_four_number(Two_Menu_F1_E2);
 790   2          set_await_number_table(2);
 791   2        }
 792   1        if (return_await_number_table() == 3)
 793   1        {
 794   2          buf_display[0][2] = 0;
 795   2          display();
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 14  

 796   2          set_await_number_table(0);
 797   2        }
 798   1      }
 799          
 800          void fun56(void) //F1_E2 十位闪烁
 801          {
 802   1        if (return_await_number_table() == 1)
 803   1        {
 804   2          Show_four_number(Two_Menu_F1_E2);
 805   2          set_await_number_table(2);
 806   2        }
 807   1        if (return_await_number_table() == 3)
 808   1        {
 809   2          buf_display[0][1] = 0;
 810   2          display();
 811   2          set_await_number_table(0);
 812   2        }
 813   1      }
 814          
 815          void fun57(void) //F1_E2 个位闪烁
 816          {
 817   1        if (return_await_number_table() == 1)
 818   1        {
 819   2          Show_four_number(Two_Menu_F1_E2);
 820   2          set_await_number_table(2);
 821   2        }
 822   1        if (return_await_number_table() == 3)
 823   1        {
 824   2          buf_display[0][0] = 0;
 825   2          display();
 826   2          set_await_number_table(0);
 827   2        }
 828   1      }
 829          
 830          void fun58(void) //F1_E3 千位闪烁
 831          {
 832   1        if (return_await_number_table() == 1)
 833   1        {
 834   2          Show_four_number(Two_Menu_F1_E3);
 835   2          set_await_number_table(2);
 836   2        }
 837   1        if (return_await_number_table() == 3)
 838   1        {
 839   2          buf_display[0][3] = 0;
 840   2          display();
 841   2          set_await_number_table(0);
 842   2        }
 843   1      }
 844          
 845          void fun59(void) //F1_E3 百位闪烁
 846          {
 847   1        if (return_await_number_table() == 1)
 848   1        {
 849   2          Show_four_number(Two_Menu_F1_E3);
 850   2          set_await_number_table(2);
 851   2        }
 852   1        if (return_await_number_table() == 3)
 853   1        {
 854   2          buf_display[0][2] = 0;
 855   2          display();
 856   2          set_await_number_table(0);
 857   2        }
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 15  

 858   1      }
 859          
 860          void fun60(void) //F1_E3 十位闪烁
 861          {
 862   1        if (return_await_number_table() == 1)
 863   1        {
 864   2          Show_four_number(Two_Menu_F1_E3);
 865   2          set_await_number_table(2);
 866   2        }
 867   1        if (return_await_number_table() == 3)
 868   1        {
 869   2          buf_display[0][1] = 0;
 870   2          display();
 871   2          set_await_number_table(0);
 872   2        }
 873   1      }
 874          
 875          void fun61(void) //F1_E3 个位闪烁
 876          {
 877   1        if (return_await_number_table() == 1)
 878   1        {
 879   2          Show_four_number(Two_Menu_F1_E3);
 880   2          set_await_number_table(2);
 881   2        }
 882   1        if (return_await_number_table() == 3)
 883   1        {
 884   2          buf_display[0][0] = 0;
 885   2          display();
 886   2          set_await_number_table(0);
 887   2        }
 888   1      }
 889          
 890          void fun62(void) //F1_E4 千位闪烁
 891          {
 892   1        if (return_await_number_table() == 1)
 893   1        {
 894   2          Show_four_number(Two_Menu_F1_E4);
 895   2          set_await_number_table(2);
 896   2        }
 897   1        if (return_await_number_table() == 3)
 898   1        {
 899   2          buf_display[0][3] = 0;
 900   2          display();
 901   2          set_await_number_table(0);
 902   2        }
 903   1      }
 904          
 905          void fun63(void) //F1_E4 百位闪烁
 906          {
 907   1        if (return_await_number_table() == 1)
 908   1        {
 909   2          Show_four_number(Two_Menu_F1_E4);
 910   2          set_await_number_table(2);
 911   2        }
 912   1        if (return_await_number_table() == 3)
 913   1        {
 914   2          buf_display[0][2] = 0;
 915   2          display();
 916   2          set_await_number_table(0);
 917   2        }
 918   1      }
 919          
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 16  

 920          void fun64(void) //F1_E4 十位闪烁
 921          {
 922   1        if (return_await_number_table() == 1)
 923   1        {
 924   2          Show_four_number(Two_Menu_F1_E4);
 925   2          set_await_number_table(2);
 926   2        }
 927   1        if (return_await_number_table() == 3)
 928   1        {
 929   2          buf_display[0][1] = 0;
 930   2          display();
 931   2          set_await_number_table(0);
 932   2        }
 933   1      }
 934          
 935          void fun65(void) //F1_E4 个位闪烁
 936          {
 937   1        if (return_await_number_table() == 1)
 938   1        {
 939   2          Show_four_number(Two_Menu_F1_E4);
 940   2          set_await_number_table(2);
 941   2        }
 942   1        if (return_await_number_table() == 3)
 943   1        {
 944   2          buf_display[0][0] = 0;
 945   2          display();
 946   2          set_await_number_table(0);
 947   2        }
 948   1      }
 949          
 950          void fun66(void) //F2_E1 千位闪烁
 951          {
 952   1        if (return_await_number_table() == 1)
 953   1        {
 954   2          Show_four_number(Two_Menu_F2_E1);
 955   2          set_await_number_table(2);
 956   2        }
 957   1        if (return_await_number_table() == 3)
 958   1        {
 959   2          buf_display[0][3] = 0;
 960   2          display();
 961   2          set_await_number_table(0);
 962   2        }
 963   1      }
 964          
 965          void fun67(void) //F2_E1 百位闪烁
 966          {
 967   1        if (return_await_number_table() == 1)
 968   1        {
 969   2          Show_four_number(Two_Menu_F2_E1);
 970   2          set_await_number_table(2);
 971   2        }
 972   1        if (return_await_number_table() == 3)
 973   1        {
 974   2          buf_display[0][2] = 0;
 975   2          display();
 976   2          set_await_number_table(0);
 977   2        }
 978   1      }
 979          
 980          void fun68(void) //F2_E1 十位闪烁
 981          {
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 17  

 982   1        if (return_await_number_table() == 1)
 983   1        {
 984   2          Show_four_number(Two_Menu_F2_E1);
 985   2          set_await_number_table(2);
 986   2        }
 987   1        if (return_await_number_table() == 3)
 988   1        {
 989   2          buf_display[0][1] = 0;
 990   2          display();
 991   2          set_await_number_table(0);
 992   2        }
 993   1      }
 994          
 995          void fun69(void) //F2_E1 个位闪烁
 996          {
 997   1        if (return_await_number_table() == 1)
 998   1        {
 999   2          Show_four_number(Two_Menu_F2_E1);
1000   2          set_await_number_table(2);
1001   2        }
1002   1        if (return_await_number_table() == 3)
1003   1        {
1004   2          buf_display[0][0] = 0;
1005   2          display();
1006   2          set_await_number_table(0);
1007   2        }
1008   1      }
1009          
1010          void fun70(void) //F2_E2 千位闪烁
1011          {
1012   1        if (return_await_number_table() == 1)
1013   1        {
1014   2          Show_four_number(Two_Menu_F2_E2);
1015   2          set_await_number_table(2);
1016   2        }
1017   1        if (return_await_number_table() == 3)
1018   1        {
1019   2          buf_display[0][3] = 0;
1020   2          display();
1021   2          set_await_number_table(0);
1022   2        }
1023   1      }
1024          
1025          void fun71(void) //F2_E2 百位闪烁
1026          {
1027   1        if (return_await_number_table() == 1)
1028   1        {
1029   2          Show_four_number(Two_Menu_F2_E2);
1030   2          set_await_number_table(2);
1031   2        }
1032   1        if (return_await_number_table() == 3)
1033   1        {
1034   2          buf_display[0][2] = 0;
1035   2          display();
1036   2          set_await_number_table(0);
1037   2        }
1038   1      }
1039          
1040          void fun72(void) //F2_E2 十位闪烁
1041          {
1042   1        if (return_await_number_table() == 1)
1043   1        {
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 18  

1044   2          Show_four_number(Two_Menu_F2_E2);
1045   2          set_await_number_table(2);
1046   2        }
1047   1        if (return_await_number_table() == 3)
1048   1        {
1049   2          buf_display[0][1] = 0;
1050   2          display();
1051   2          set_await_number_table(0);
1052   2        }
1053   1      }
1054          
1055          void fun73(void) //F2_E2 个位闪烁
1056          {
1057   1        if (return_await_number_table() == 1)
1058   1        {
1059   2          Show_four_number(Two_Menu_F2_E2);
1060   2          set_await_number_table(2);
1061   2        }
1062   1        if (return_await_number_table() == 3)
1063   1        {
1064   2          buf_display[0][0] = 0;
1065   2          display();
1066   2          set_await_number_table(0);
1067   2        }
1068   1      }
1069          
1070          void fun74(void) //F2_E3 千位闪烁
1071          {
1072   1        if (return_await_number_table() == 1)
1073   1        {
1074   2          Show_four_number(Two_Menu_F2_E3);
1075   2          set_await_number_table(2);
1076   2        }
1077   1        if (return_await_number_table() == 3)
1078   1        {
1079   2          buf_display[0][3] = 0;
1080   2          display();
1081   2          set_await_number_table(0);
1082   2        }
1083   1      }
1084          
1085          void fun75(void) //F2_E3 百位闪烁
1086          {
1087   1        if (return_await_number_table() == 1)
1088   1        {
1089   2          Show_four_number(Two_Menu_F2_E3);
1090   2          set_await_number_table(2);
1091   2        }
1092   1        if (return_await_number_table() == 3)
1093   1        {
1094   2          buf_display[0][2] = 0;
1095   2          display();
1096   2          set_await_number_table(0);
1097   2        }
1098   1      }
1099          
1100          void fun76(void) //F2_E3 十位闪烁
1101          {
1102   1        if (return_await_number_table() == 1)
1103   1        {
1104   2          Show_four_number(Two_Menu_F2_E3);
1105   2          set_await_number_table(2);
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 19  

1106   2        }
1107   1        if (return_await_number_table() == 3)
1108   1        {
1109   2          buf_display[0][1] = 0;
1110   2          display();
1111   2          set_await_number_table(0);
1112   2        }
1113   1      }
1114          
1115          void fun77(void) //F2_E3 个位闪烁
1116          {
1117   1        if (return_await_number_table() == 1)
1118   1        {
1119   2          Show_four_number(Two_Menu_F2_E3);
1120   2          set_await_number_table(2);
1121   2        }
1122   1        if (return_await_number_table() == 3)
1123   1        {
1124   2          buf_display[0][0] = 0;
1125   2          display();
1126   2          set_await_number_table(0);
1127   2        }
1128   1      }
1129          
1130          void fun78(void) //F2_E4 千位闪烁
1131          {
1132   1        if (return_await_number_table() == 1)
1133   1        {
1134   2          Show_four_number(Two_Menu_F2_E4);
1135   2          set_await_number_table(2);
1136   2        }
1137   1        if (return_await_number_table() == 3)
1138   1        {
1139   2          buf_display[0][3] = 0;
1140   2          display();
1141   2          set_await_number_table(0);
1142   2        }
1143   1      }
1144          
1145          void fun79(void) //F2_E4 百位闪烁
1146          {
1147   1        if (return_await_number_table() == 1)
1148   1        {
1149   2          Show_four_number(Two_Menu_F2_E4);
1150   2          set_await_number_table(2);
1151   2        }
1152   1        if (return_await_number_table() == 3)
1153   1        {
1154   2          buf_display[0][2] = 0;
1155   2          display();
1156   2          set_await_number_table(0);
1157   2        }
1158   1      }
1159          
1160          void fun80(void) //F2_E4 十位闪烁
1161          {
1162   1        if (return_await_number_table() == 1)
1163   1        {
1164   2          Show_four_number(Two_Menu_F2_E4);
1165   2          set_await_number_table(2);
1166   2        }
1167   1        if (return_await_number_table() == 3)
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 20  

1168   1        {
1169   2          buf_display[0][1] = 0;
1170   2          display();
1171   2          set_await_number_table(0);
1172   2        }
1173   1      }
1174          
1175          void fun81(void) //F2_E4 个位闪烁
1176          {
1177   1        if (return_await_number_table() == 1)
1178   1        {
1179   2          Show_four_number(Two_Menu_F2_E4);
1180   2          set_await_number_table(2);
1181   2        }
1182   1        if (return_await_number_table() == 3)
1183   1        {
1184   2          buf_display[0][0] = 0;
1185   2          display();
1186   2          set_await_number_table(0);
1187   2        }
1188   1      }
1189          
1190          void fun82(void) //显示即时显示 还是循环显示
1191          {
1192   1        unsigned char temp=0;
1193   1        temp = return_Two_Menu_F3_E1();
1194   1        Show_one_number(temp);
1195   1      }
1196          
1197          void fun83(void) //队列存储个数
1198          {
1199   1        unsigned char temp = 0;
1200   1        temp = return_Two_Menu_F3_E2();
1201   1        Show_two_number(temp);
1202   1      }
1203          
1204          void fun84(void) //F6_E1语音选择
1205          {
1206   1        unsigned char temp = 0;
1207   1        temp = return_Two_Menu_F6_E1();
1208   1        Show_one_number(temp);
1209   1      }
1210          
1211          void fun85(void) //F6_E2语音报读次数
1212          {
1213   1        unsigned char temp = 0;
1214   1        temp = return_Two_Menu_F6_E2();
1215   1        Show_one_number(temp);
1216   1      }
1217          
1218          void fun86(void) //F6_E3循环时候是否报读
1219          {
1220   1        unsigned char temp = 0;
1221   1        temp = return_Two_Menu_F6_E3();
1222   1        Show_one_number(temp);
1223   1      }
1224          
1225          void fun87(void) //F6_E4音量大小调整
1226          {
1227   1        unsigned char temp = 0;
1228   1        temp = return_Two_Menu_F6_E4();
1229   1        Show_one_number(temp);
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 21  

1230   1      }
1231          
1232          void fun88(void) //F6_E5屏幕亮度调整
1233          {
1234   1        unsigned char temp = 0;
1235   1        temp = return_Two_Menu_F6_E5();
1236   1        Show_one_number(temp);
1237   1      }
1238          
1239          void fun89(void) //F7_E1 999*9
1240          {
1241   1        unsigned char temp = 0;
1242   1        temp = return_Two_Menu_F7_E1();
1243   1        Show_one_number(temp);
1244   1      }
1245          
1246          void fun90(void) //F7_E2 9999*9
1247          {
1248   1        unsigned char temp = 0;
1249   1        temp = return_Two_Menu_F7_E2();
1250   1        Show_one_number(temp);
1251   1      }
1252          
1253          void fun91(void) //F7_E3 999*99
1254          {
1255   1        unsigned char temp = 0;
1256   1        temp = return_Two_Menu_F7_E3();
1257   1        Show_one_number(temp);
1258   1      }
1259          
1260          void fun92(void) //F7_E4 9999*99
1261          {
1262   1        unsigned char temp = 0;
1263   1        temp = return_Two_Menu_F7_E4();
1264   1        Show_one_number(temp);
1265   1      }
1266          
1267          void fun93(void) //F8_E1单键位跟多键位切换
1268          {
1269   1        unsigned char temp = 0;
1270   1        temp = return_Two_Menu_F8_E1();
1271   1        Show_one_number(temp);
1272   1      }
1273          
1274          void fun94(void) //F8_E2键位设置
1275          {
1276   1        unsigned char temp = 0;
1277   1        temp = return_Two_Menu_F8_E2();
1278   1        Show_two_number(temp);
1279   1      }
1280          
1281          void fun95(void) //解码菜单
1282          {
1283   1        tm1629_load();
1284   1        display();;
1285   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3811    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    320      13
C51 COMPILER V9.00   TM1629                                                                09/18/2015 12:10:35 PAGE 22  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
