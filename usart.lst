C51 COMPILER V9.00   USART                                                                 09/24/2015 12:29:33 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN usart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\usart.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRINT(.
                    -\usart.lst) TABS(2) OBJECT(usart.obj)

line level    source

   1          /***********************************************************
   2          **************************************************************/
   3          #include "usart.h"
   4          bit busy;
   5          
   6          /*----------------------------
   7          UART 中断服务程序
   8          -----------------------------*/
   9          void Uart() interrupt 4 using 1
  10          {
  11   1          if (RI)
  12   1          {
  13   2              RI = 0;                 //清除RI位
  14   2            //  computer_send_data_to_mcu();
  15   2            //  P0 = SBUF;              //P0显示串口数据
  16   2            //  P22 = RB8;              //P2.2显示校验位
  17   2          }
  18   1          if (TI)
  19   1          {
  20   2              TI = 0;                 //清除TI位
  21   2              busy = 0;               //清忙标志
  22   2          }
  23   1      }
  24          
  25          /*----------------------------
  26          UART2 中断服务程序
  27          -----------------------------*/
  28          void Uart2() interrupt 8 using 1
  29          {
  30   1        if (S2CON & S2RI)
  31   1        {
  32   2          S2CON &= ~S2RI;         //清除S2RI位
  33   2          //P0 = S2BUF;             //P0显示串口数据
  34   2          //P2 = (S2CON & S2RB8);   //P2.2显示校验位
  35   2        }
  36   1        if (S2CON & S2TI)
  37   1        {
  38   2          S2CON &= ~S2TI;         //清除S2TI位
  39   2          busy = 0;               //清忙标志
  40   2        }
  41   1      }
  42          
  43          /*----------------------------
  44          发送串口数据with 8 bits
  45          ----------------------------*/
  46          void Usart1_SendData(BYTE dat)
  47          {
  48   1          while (busy);               //等待前面的数据发送完成
  49   1          ACC = dat;                  //获取校验位P (PSW.0)
  50   1          if (P)                      //根据P来设置校验位
  51   1          {
  52   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
C51 COMPILER V9.00   USART                                                                 09/24/2015 12:29:33 PAGE 2   

                      TB8 = 1;                //设置校验位为1
              #endif
  57   2          }
  58   1          else
  59   1          {
  60   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;                //设置校验位为0
              #endif
  65   2          }
  66   1          busy = 1;
  67   1          SBUF = ACC;                 //写数据到UART数据寄存器
  68   1      }
  69          
  70          /*----------------------------
  71          发送字符串
  72          ----------------------------*/
  73          void Usart1_SendString(char *s)
  74          {
  75   1          while (*s)                  //检测字符串结束标志
  76   1          {
  77   2          Usart1_SendData(*s++);         //发送当前字符
  78   2          }
  79   1      }
  80          
  81          /*----------------------------
  82          发送串口数据
  83          ----------------------------*/
  84          void Usart2_SendData(BYTE dat)
  85          {
  86   1        while (busy);               //等待前面的数据发送完成
  87   1        ACC = dat;                  //获取校验位P (PSW.0)
  88   1        if (P)                      //根据P来设置校验位
  89   1        {
  90   2      #if (PARITYBIT == ODD_PARITY)
                  S2CON &= ~S2TB8;        //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                  S2CON |= S2TB8;         //设置校验位为1
              #endif
  95   2        }
  96   1        else
  97   1        {
  98   2      #if (PARITYBIT == ODD_PARITY)
                  S2CON |= S2TB8;         //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                  S2CON &= ~S2TB8;        //设置校验位为0
              #endif
 103   2        }
 104   1        busy = 1;
 105   1        S2BUF = ACC;                //写数据到UART2数据寄存器
 106   1      }
 107          
 108          /*----------------------------
 109          发送字符串
 110          ----------------------------*/
 111          void Usart2_SendString(char *s)
 112          {
 113   1        while (*s)                  //检测字符串结束标志
 114   1        {
 115   2          Usart2_SendData(*s++);         //发送当前字符
 116   2        }
C51 COMPILER V9.00   USART                                                                 09/24/2015 12:29:33 PAGE 3   

 117   1      }
 118          
 119          
 120          /*uart init with baud settings----transfer mode-----open serial port*/
 121          void UsartInit(void)
 122          {
 123   1          ACC = P_SW1;
 124   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
 125   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
 126   1          
 127   1      //  ACC = P_SW1;
 128   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=1 S1_S1=0
 129   1      //  ACC |= S1_S0;               //(P3.6/RxD_2, P3.7/TxD_2)
 130   1      //  P_SW1 = ACC;  
 131   1      //  
 132   1      //  ACC = P_SW1;
 133   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
 134   1      //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
 135   1      //  P_SW1 = ACC;  
 136   1      
 137   1        P_SW2 &= ~S2_S0;            //S2_S0=0 (P1.0/RxD2, P1.1/TxD2)
 138   1        //  P_SW2 |= S2_S0;             //S2_S0=1 (P4.6/RxD2_2, P4.7/TxD2_2)
 139   1      
 140   1      #if (PARITYBIT == NONE_PARITY)
 141   1          SCON = 0x50;                //8位可变波特率
 142   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;                //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;                //9位可变波特率,校验位初始为0
              #endif
 147   1      
 148   1      #if (PARITYBIT == NONE_PARITY)
 149   1        S2CON = 0x50;               //8位可变波特率
 150   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                S2CON = 0xda;               //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                S2CON = 0xd2;               //9位可变波特率,校验位初始为0
              #endif
 155   1      
 156   1      
 157   1          T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
 158   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
 159   1          AUXR = 0x14;                //T2为1T模式, 并启动定时器2
 160   1          AUXR |= 0x01;               //选择定时器2为串口1的波特率发生器
 161   1          ES = 1;                     //使能串口中断
 162   1        IE2 = 0x01;                 //使能串口2中断
 163   1          EA = 1;
 164   1      
 165   1        Usart1_SendString("STC15F2K60S2\r\nUart Test !\r\n");
 166   1        Usart2_SendString("STC15F2K60S2\r\nUart2 Test !\r\n");
 167   1        
 168   1      }
 169          
 170          void uart_printf(const char *fmt, ...)
 171          {
 172   1        va_list ap;
 173   1        char xdata string[1024];//访问内部拓展RAM，非访问外部RAM，不能超过内部拓展RAM大小(此处为1024)  
 174   1      
 175   1        va_start(ap, fmt);
 176   1        vsprintf(string, fmt, ap);//此处也可以使用sprintf函数，用法差不多，稍加修改即可，此处略去  
 177   1        Usart1_SendString(string);
 178   1        va_end(ap);
C51 COMPILER V9.00   USART                                                                 09/24/2015 12:29:33 PAGE 4   

 179   1      }
 180          
 181          ///*Switch to uart2 port by hardware*/
 182          //void usart2_SendData(void)
 183          //{
 184          //  ACC = P_SW1;
 185          //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
 186          //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
 187          //  P_SW1 = ACC; 
 188          //}
 189          //
 190          ///*Switch to uart1 port by hardware*/
 191          //void usart1_SendData(void)
 192          //{
 193          //    ACC = P_SW1;
 194          //    ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
 195          //    P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
 196          //}
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    293    ----
   CONSTANT SIZE    =     57    ----
   XDATA SIZE       =   ----    1076
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
