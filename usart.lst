C51 COMPILER V9.00   USART                                                                 10/20/2015 18:09:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN usart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Receiver\usart.c LARGE BROWSE INCDIR(.\Receiver) DEBUG OBJECTEXTEND PRINT(.
                    -\usart.lst) OBJECT(usart.obj)

line level    source

   1          /***********************************************************
   2          **************************************************************/
   3          #include "usart.h"
   4          bit busy;
   5          
   6          /*----------------------------
   7          UART 中断服务程序
   8          -----------------------------*/
   9          void Uart() interrupt 4 using 1
  10          {
  11   1              unsigned char temp=0;
  12   1          if (RI)
  13   1          {
  14   2              RI = 0;                 //清除RI位
  15   2                //  computer_send_data_to_mcu();
  16   2            //  P0 = SBUF;              //P0显示串口数据
  17   2            //  P22 = RB8;              //P2.2显示校验位
  18   2          }
  19   1          if (TI)
  20   1          {
  21   2              TI = 0;                 //清除TI位
  22   2              busy = 0;               //清忙标志
  23   2          }
  24   1      }
  25          
  26          /*----------------------------
  27          UART2 中断服务程序
  28          -----------------------------*/
  29          void Uart2() interrupt 8 using 1
  30          {
  31   1              if (S2CON & S2RI)
  32   1              {
  33   2                      S2CON &= ~S2RI;         //清除S2RI位
  34   2                      //P0 = S2BUF;             //P0显示串口数据
  35   2                      //P2 = (S2CON & S2RB8);   //P2.2显示校验位
  36   2              }
  37   1              if (S2CON & S2TI)
  38   1              {
  39   2                      S2CON &= ~S2TI;         //清除S2TI位
  40   2                      busy = 0;               //清忙标志
  41   2              }
  42   1      }
  43          
  44          /*----------------------------
  45          发送串口数据with 8 bits
  46          ----------------------------*/
  47          void Usart1_SendData(BYTE dat)
  48          {
  49   1          while (busy);               //等待前面的数据发送完成
  50   1          ACC = dat;                  //获取校验位P (PSW.0)
  51   1          if (P)                      //根据P来设置校验位
  52   1          {
  53   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                //设置校验位为0
C51 COMPILER V9.00   USART                                                                 10/20/2015 18:09:47 PAGE 2   

              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;                //设置校验位为1
              #endif
  58   2          }
  59   1          else
  60   1          {
  61   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;                //设置校验位为0
              #endif
  66   2          }
  67   1          busy = 1;
  68   1          SBUF = ACC;                 //写数据到UART数据寄存器
  69   1      }
  70          
  71          /*----------------------------
  72          发送字符串
  73          ----------------------------*/
  74          void Usart1_SendString(char *s)
  75          {
  76   1          while (*s)                  //检测字符串结束标志
  77   1          {
  78   2                      Usart1_SendData(*s++);         //发送当前字符
  79   2          }
  80   1      }
  81          
  82          /*----------------------------
  83          发送串口数据
  84          ----------------------------*/
  85          void Usart2_SendData(BYTE dat)
  86          {
  87   1              while (busy);               //等待前面的数据发送完成
  88   1              ACC = dat;                  //获取校验位P (PSW.0)
  89   1              if (P)                      //根据P来设置校验位
  90   1              {
  91   2      #if (PARITYBIT == ODD_PARITY)
                              S2CON &= ~S2TB8;        //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                              S2CON |= S2TB8;         //设置校验位为1
              #endif
  96   2              }
  97   1              else
  98   1              {
  99   2      #if (PARITYBIT == ODD_PARITY)
                              S2CON |= S2TB8;         //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                              S2CON &= ~S2TB8;        //设置校验位为0
              #endif
 104   2              }
 105   1              busy = 1;
 106   1              S2BUF = ACC;                //写数据到UART2数据寄存器
 107   1      }
 108          
 109          /*----------------------------
 110          发送字符串
 111          ----------------------------*/
 112          void Usart2_SendString(char *s)
 113          {
 114   1              while (*s)                  //检测字符串结束标志
 115   1              {
 116   2                      Usart2_SendData(*s++);         //发送当前字符
C51 COMPILER V9.00   USART                                                                 10/20/2015 18:09:47 PAGE 3   

 117   2              }
 118   1      }
 119          
 120          
 121          /*uart init with baud settings----transfer mode-----open serial port*/
 122          void UsartInit(void)
 123          {
 124   1          ACC = P_SW1;
 125   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
 126   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
 127   1          
 128   1      //  ACC = P_SW1;
 129   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=1 S1_S1=0
 130   1      //  ACC |= S1_S0;               //(P3.6/RxD_2, P3.7/TxD_2)
 131   1      //  P_SW1 = ACC;  
 132   1      //  
 133   1      //  ACC = P_SW1;
 134   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
 135   1      //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
 136   1      //  P_SW1 = ACC;  
 137   1      
 138   1              P_SW2 &= ~S2_S0;            //S2_S0=0 (P1.0/RxD2, P1.1/TxD2)
 139   1              //  P_SW2 |= S2_S0;             //S2_S0=1 (P4.6/RxD2_2, P4.7/TxD2_2)
 140   1      
 141   1      #if (PARITYBIT == NONE_PARITY)
 142   1          SCON = 0x50;                //8位可变波特率
 143   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;                //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;                //9位可变波特率,校验位初始为0
              #endif
 148   1      
 149   1      #if (PARITYBIT == NONE_PARITY)
 150   1              S2CON = 0x50;               //8位可变波特率
 151   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                      S2CON = 0xda;               //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                      S2CON = 0xd2;               //9位可变波特率,校验位初始为0
              #endif
 156   1      
 157   1      
 158   1          T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
 159   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
 160   1          AUXR = 0x14;                //T2为1T模式, 并启动定时器2
 161   1          AUXR |= 0x01;               //选择定时器2为串口1的波特率发生器
 162   1          ES = 1;                     //使能串口中断
 163   1              IE2 = 0x01;                 //使能串口2中断
 164   1          EA = 1;
 165   1      
 166   1              //Usart1_SendString("STC15F2K60S2\r\nUart Test !\r\n");
 167   1              //Usart2_SendString("STC15F2K60S2\r\nUart2 Test !\r\n");
 168   1              
 169   1      }
 170          
 171          void uart_printf(const char *fmt, ...)
 172          {
 173   1              va_list ap;
 174   1              char xdata string[1024];//访问内部拓展RAM，非访问外部RAM，不能超过内部拓展RAM大小(此处为1024)  
 175   1      
 176   1              va_start(ap, fmt);
 177   1              vsprintf(string, fmt, ap);//此处也可以使用sprintf函数，用法差不多，稍加修改即可，此处略去  
 178   1              Usart1_SendString(string);
C51 COMPILER V9.00   USART                                                                 10/20/2015 18:09:47 PAGE 4   

 179   1              va_end(ap);
 180   1      }
 181          
 182          ///*Switch to uart2 port by hardware*/
 183          //void usart2_SendData(void)
 184          //{
 185          //  ACC = P_SW1;
 186          //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
 187          //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
 188          //  P_SW1 = ACC; 
 189          //}
 190          //
 191          ///*Switch to uart1 port by hardware*/
 192          //void usart1_SendData(void)
 193          //{
 194          //    ACC = P_SW1;
 195          //    ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
 196          //    P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
 197          //}
 198          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    293    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    1077
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
